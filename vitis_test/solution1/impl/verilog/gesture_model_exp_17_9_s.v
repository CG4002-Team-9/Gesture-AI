// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gesture_model_exp_17_9_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [16:0] x;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_subdone;
wire   [4:0] f_x_lsb_table_V_address0;
reg    f_x_lsb_table_V_ce0;
wire   [10:0] f_x_lsb_table_V_q0;
wire   [4:0] exp_x_msb_2_m_1_table_V_address0;
reg    exp_x_msb_2_m_1_table_V_ce0;
wire   [24:0] exp_x_msb_2_m_1_table_V_q0;
wire   [4:0] exp_x_msb_1_table_V_address0;
reg    exp_x_msb_1_table_V_ce0;
wire   [24:0] exp_x_msb_1_table_V_q0;
wire   [0:0] p_Result_s_fu_175_p3;
reg   [0:0] p_Result_s_reg_526;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] p_Result_s_reg_526_pp0_iter1_reg;
reg   [0:0] p_Result_s_reg_526_pp0_iter2_reg;
reg   [0:0] p_Result_s_reg_526_pp0_iter3_reg;
reg   [0:0] p_Result_s_reg_526_pp0_iter4_reg;
reg   [3:0] tmp_reg_532;
reg   [3:0] tmp_reg_532_pp0_iter1_reg;
reg   [3:0] tmp_reg_532_pp0_iter2_reg;
reg   [3:0] tmp_reg_532_pp0_iter3_reg;
wire   [1:0] trunc_ln594_1_fu_291_p1;
reg   [1:0] trunc_ln594_1_reg_537;
reg   [1:0] trunc_ln594_1_reg_537_pp0_iter1_reg;
reg   [1:0] trunc_ln594_1_reg_537_pp0_iter2_reg;
reg   [1:0] trunc_ln594_1_reg_537_pp0_iter3_reg;
wire   [0:0] or_ln202_1_fu_319_p2;
reg   [0:0] or_ln202_1_reg_553;
reg   [0:0] or_ln202_1_reg_553_pp0_iter1_reg;
reg   [0:0] or_ln202_1_reg_553_pp0_iter2_reg;
reg   [0:0] or_ln202_1_reg_553_pp0_iter3_reg;
reg   [0:0] or_ln202_1_reg_553_pp0_iter4_reg;
wire   [0:0] or_ln202_3_fu_331_p2;
reg   [0:0] or_ln202_3_reg_558;
reg   [0:0] or_ln202_3_reg_558_pp0_iter1_reg;
reg   [0:0] or_ln202_3_reg_558_pp0_iter2_reg;
reg   [0:0] or_ln202_3_reg_558_pp0_iter3_reg;
reg   [0:0] or_ln202_3_reg_558_pp0_iter4_reg;
reg   [10:0] f_x_lsb_V_reg_563;
reg   [10:0] f_x_lsb_V_reg_563_pp0_iter2_reg;
reg   [10:0] f_x_lsb_V_reg_563_pp0_iter3_reg;
reg   [24:0] exp_x_msb_2_m_1_V_reg_568;
reg   [24:0] exp_x_msb_2_m_1_V_reg_568_pp0_iter2_reg;
reg   [24:0] exp_x_msb_2_m_1_V_reg_568_pp0_iter3_reg;
wire   [24:0] exp_x_msb_2_lsb_m_1_V_fu_397_p2;
reg   [24:0] exp_x_msb_2_lsb_m_1_V_reg_583;
wire   [63:0] zext_ln541_fu_303_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln541_1_fu_308_p1;
wire   [63:0] zext_ln541_2_fu_402_p1;
wire   [7:0] trunc_ln594_fu_163_p1;
wire   [0:0] p_Result_8_fu_183_p3;
wire   [0:0] p_Result_9_fu_197_p3;
wire   [0:0] p_Result_10_fu_211_p3;
wire   [0:0] p_Result_11_fu_225_p3;
wire   [0:0] p_Result_12_fu_239_p3;
wire   [3:0] x_l_int_fu_153_p4;
wire   [10:0] x_l_fract_fu_167_p3;
wire   [0:0] icmp_ln1653_fu_253_p2;
wire   [0:0] icmp_ln1649_fu_259_p2;
wire   [4:0] tmp_33_fu_295_p3;
wire   [4:0] tmp_32_fu_281_p4;
wire   [0:0] overf_fu_191_p2;
wire   [0:0] xor_ln176_1_fu_219_p2;
wire   [0:0] or_ln202_fu_313_p2;
wire   [0:0] xor_ln176_fu_205_p2;
wire   [0:0] xor_ln176_3_fu_247_p2;
wire   [0:0] and_ln202_fu_265_p2;
wire   [0:0] or_ln202_2_fu_325_p2;
wire   [0:0] xor_ln176_2_fu_233_p2;
wire   [17:0] p_Result_20_fu_337_p4;
wire   [42:0] trunc_ln1_fu_360_p1;
wire  signed [42:0] grp_fu_519_p2;
wire   [18:0] trunc_ln1_fu_360_p4;
wire   [18:0] rhs_1_fu_373_p5;
wire   [19:0] zext_ln813_4_fu_369_p1;
wire   [19:0] zext_ln1347_fu_383_p1;
wire   [19:0] ret_V_fu_387_p2;
wire   [24:0] zext_ln813_fu_393_p1;
wire   [4:0] p_Result_19_fu_354_p3;
wire   [0:0] y_V_fu_407_p2;
wire   [24:0] r_V_fu_427_p0;
wire   [24:0] r_V_fu_427_p1;
wire   [49:0] r_V_fu_427_p2;
wire   [24:0] y_lo_s_V_fu_433_p4;
wire   [24:0] y_l_V_fu_443_p2;
wire   [0:0] or_ln202_4_fu_459_p2;
wire   [21:0] select_ln190_fu_412_p3;
wire   [21:0] y_V_1_fu_449_p4;
wire   [21:0] p_Val2_49_fu_463_p3;
wire   [1:0] tmp_30_fu_471_p4;
wire   [0:0] p_Result_18_fu_487_p3;
wire   [0:0] overf_1_fu_481_p2;
wire   [0:0] overf_2_fu_495_p2;
wire   [15:0] tmp_s_fu_501_p4;
wire   [24:0] grp_fu_519_p0;
wire   [17:0] grp_fu_519_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to4;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [42:0] grp_fu_519_p00;
wire   [42:0] grp_fu_519_p10;
wire   [49:0] r_V_fu_427_p00;
wire   [49:0] r_V_fu_427_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
end

gesture_model_exp_17_9_s_f_x_lsb_table_V_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
f_x_lsb_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_lsb_table_V_address0),
    .ce0(f_x_lsb_table_V_ce0),
    .q0(f_x_lsb_table_V_q0)
);

gesture_model_exp_17_9_s_exp_x_msb_2_m_1_table_V_ROM_AUTO_1R #(
    .DataWidth( 25 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
exp_x_msb_2_m_1_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_x_msb_2_m_1_table_V_address0),
    .ce0(exp_x_msb_2_m_1_table_V_ce0),
    .q0(exp_x_msb_2_m_1_table_V_q0)
);

gesture_model_exp_17_9_s_exp_x_msb_1_table_V_ROM_AUTO_1R #(
    .DataWidth( 25 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
exp_x_msb_1_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_x_msb_1_table_V_address0),
    .ce0(exp_x_msb_1_table_V_ce0),
    .q0(exp_x_msb_1_table_V_q0)
);

gesture_model_mul_25ns_25ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 25 ),
    .dout_WIDTH( 50 ))
mul_25ns_25ns_50_1_1_U48(
    .din0(r_V_fu_427_p0),
    .din1(r_V_fu_427_p1),
    .dout(r_V_fu_427_p2)
);

gesture_model_mul_mul_25ns_18ns_43_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 43 ))
mul_mul_25ns_18ns_43_4_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_519_p0),
    .din1(grp_fu_519_p1),
    .ce(1'b1),
    .dout(grp_fu_519_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exp_x_msb_2_lsb_m_1_V_reg_583 <= exp_x_msb_2_lsb_m_1_V_fu_397_p2;
        exp_x_msb_2_m_1_V_reg_568_pp0_iter2_reg <= exp_x_msb_2_m_1_V_reg_568;
        exp_x_msb_2_m_1_V_reg_568_pp0_iter3_reg <= exp_x_msb_2_m_1_V_reg_568_pp0_iter2_reg;
        f_x_lsb_V_reg_563_pp0_iter2_reg <= f_x_lsb_V_reg_563;
        f_x_lsb_V_reg_563_pp0_iter3_reg <= f_x_lsb_V_reg_563_pp0_iter2_reg;
        or_ln202_1_reg_553_pp0_iter2_reg <= or_ln202_1_reg_553_pp0_iter1_reg;
        or_ln202_1_reg_553_pp0_iter3_reg <= or_ln202_1_reg_553_pp0_iter2_reg;
        or_ln202_1_reg_553_pp0_iter4_reg <= or_ln202_1_reg_553_pp0_iter3_reg;
        or_ln202_3_reg_558_pp0_iter2_reg <= or_ln202_3_reg_558_pp0_iter1_reg;
        or_ln202_3_reg_558_pp0_iter3_reg <= or_ln202_3_reg_558_pp0_iter2_reg;
        or_ln202_3_reg_558_pp0_iter4_reg <= or_ln202_3_reg_558_pp0_iter3_reg;
        p_Result_s_reg_526_pp0_iter2_reg <= p_Result_s_reg_526_pp0_iter1_reg;
        p_Result_s_reg_526_pp0_iter3_reg <= p_Result_s_reg_526_pp0_iter2_reg;
        p_Result_s_reg_526_pp0_iter4_reg <= p_Result_s_reg_526_pp0_iter3_reg;
        tmp_reg_532_pp0_iter2_reg <= tmp_reg_532_pp0_iter1_reg;
        tmp_reg_532_pp0_iter3_reg <= tmp_reg_532_pp0_iter2_reg;
        trunc_ln594_1_reg_537_pp0_iter2_reg <= trunc_ln594_1_reg_537_pp0_iter1_reg;
        trunc_ln594_1_reg_537_pp0_iter3_reg <= trunc_ln594_1_reg_537_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_x_msb_2_m_1_V_reg_568 <= exp_x_msb_2_m_1_table_V_q0;
        f_x_lsb_V_reg_563 <= f_x_lsb_table_V_q0;
        or_ln202_1_reg_553 <= or_ln202_1_fu_319_p2;
        or_ln202_1_reg_553_pp0_iter1_reg <= or_ln202_1_reg_553;
        or_ln202_3_reg_558 <= or_ln202_3_fu_331_p2;
        or_ln202_3_reg_558_pp0_iter1_reg <= or_ln202_3_reg_558;
        p_Result_s_reg_526 <= x[32'd16];
        p_Result_s_reg_526_pp0_iter1_reg <= p_Result_s_reg_526;
        tmp_reg_532 <= {{x[10:7]}};
        tmp_reg_532_pp0_iter1_reg <= tmp_reg_532;
        trunc_ln594_1_reg_537 <= trunc_ln594_1_fu_291_p1;
        trunc_ln594_1_reg_537_pp0_iter1_reg <= trunc_ln594_1_reg_537;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to4 = 1'b1;
    end else begin
        ap_idle_pp0_0to4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        exp_x_msb_1_table_V_ce0 = 1'b1;
    end else begin
        exp_x_msb_1_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_x_msb_2_m_1_table_V_ce0 = 1'b1;
    end else begin
        exp_x_msb_2_m_1_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_lsb_table_V_ce0 = 1'b1;
    end else begin
        f_x_lsb_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln202_fu_265_p2 = (icmp_ln1653_fu_253_p2 & icmp_ln1649_fu_259_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((overf_2_fu_495_p2[0:0] == 1'b1) ? 16'd65535 : tmp_s_fu_501_p4);

assign exp_x_msb_1_table_V_address0 = zext_ln541_2_fu_402_p1;

assign exp_x_msb_2_lsb_m_1_V_fu_397_p2 = (exp_x_msb_2_m_1_V_reg_568_pp0_iter3_reg + zext_ln813_fu_393_p1);

assign exp_x_msb_2_m_1_table_V_address0 = zext_ln541_1_fu_308_p1;

assign f_x_lsb_table_V_address0 = zext_ln541_fu_303_p1;

assign grp_fu_519_p0 = grp_fu_519_p00;

assign grp_fu_519_p00 = exp_x_msb_2_m_1_table_V_q0;

assign grp_fu_519_p1 = grp_fu_519_p10;

assign grp_fu_519_p10 = p_Result_20_fu_337_p4;

assign icmp_ln1649_fu_259_p2 = ((x_l_fract_fu_167_p3 > 11'd1280) ? 1'b1 : 1'b0);

assign icmp_ln1653_fu_253_p2 = ((x_l_int_fu_153_p4 == 4'd7) ? 1'b1 : 1'b0);

assign or_ln202_1_fu_319_p2 = (xor_ln176_fu_205_p2 | or_ln202_fu_313_p2);

assign or_ln202_2_fu_325_p2 = (xor_ln176_3_fu_247_p2 | and_ln202_fu_265_p2);

assign or_ln202_3_fu_331_p2 = (xor_ln176_2_fu_233_p2 | or_ln202_2_fu_325_p2);

assign or_ln202_4_fu_459_p2 = (or_ln202_3_reg_558_pp0_iter4_reg | or_ln202_1_reg_553_pp0_iter4_reg);

assign or_ln202_fu_313_p2 = (xor_ln176_1_fu_219_p2 | overf_fu_191_p2);

assign overf_1_fu_481_p2 = ((tmp_30_fu_471_p4 != 2'd0) ? 1'b1 : 1'b0);

assign overf_2_fu_495_p2 = (p_Result_18_fu_487_p3 | overf_1_fu_481_p2);

assign overf_fu_191_p2 = (p_Result_s_fu_175_p3 ^ p_Result_8_fu_183_p3);

assign p_Result_10_fu_211_p3 = x[32'd13];

assign p_Result_11_fu_225_p3 = x[32'd14];

assign p_Result_12_fu_239_p3 = x[32'd15];

assign p_Result_18_fu_487_p3 = p_Val2_49_fu_463_p3[32'd19];

assign p_Result_19_fu_354_p3 = {{p_Result_s_reg_526_pp0_iter3_reg}, {tmp_reg_532_pp0_iter3_reg}};

assign p_Result_20_fu_337_p4 = {{{trunc_ln594_1_reg_537}, {5'd0}}, {f_x_lsb_table_V_q0}};

assign p_Result_8_fu_183_p3 = x[32'd11];

assign p_Result_9_fu_197_p3 = x[32'd12];

assign p_Result_s_fu_175_p3 = x[32'd16];

assign p_Val2_49_fu_463_p3 = ((or_ln202_4_fu_459_p2[0:0] == 1'b1) ? select_ln190_fu_412_p3 : y_V_1_fu_449_p4);

assign r_V_fu_427_p0 = r_V_fu_427_p00;

assign r_V_fu_427_p00 = exp_x_msb_2_lsb_m_1_V_reg_583;

assign r_V_fu_427_p1 = r_V_fu_427_p10;

assign r_V_fu_427_p10 = exp_x_msb_1_table_V_q0;

assign ret_V_fu_387_p2 = (zext_ln813_4_fu_369_p1 + zext_ln1347_fu_383_p1);

assign rhs_1_fu_373_p5 = {{{{trunc_ln594_1_reg_537_pp0_iter3_reg}, {5'd0}}, {f_x_lsb_V_reg_563_pp0_iter3_reg}}, {1'd0}};

assign select_ln190_fu_412_p3 = ((y_V_fu_407_p2[0:0] == 1'b1) ? 22'd4194303 : 22'd0);

assign tmp_30_fu_471_p4 = {{p_Val2_49_fu_463_p3[21:20]}};

assign tmp_32_fu_281_p4 = {{x[6:2]}};

assign tmp_33_fu_295_p3 = {{trunc_ln594_1_fu_291_p1}, {3'd0}};

assign tmp_s_fu_501_p4 = {{p_Val2_49_fu_463_p3[18:3]}};

assign trunc_ln1_fu_360_p1 = grp_fu_519_p2;

assign trunc_ln1_fu_360_p4 = {{trunc_ln1_fu_360_p1[42:24]}};

assign trunc_ln594_1_fu_291_p1 = x[1:0];

assign trunc_ln594_fu_163_p1 = x[7:0];

assign x_l_fract_fu_167_p3 = {{trunc_ln594_fu_163_p1}, {3'd0}};

assign x_l_int_fu_153_p4 = {{x[11:8]}};

assign xor_ln176_1_fu_219_p2 = (p_Result_s_fu_175_p3 ^ p_Result_10_fu_211_p3);

assign xor_ln176_2_fu_233_p2 = (p_Result_s_fu_175_p3 ^ p_Result_11_fu_225_p3);

assign xor_ln176_3_fu_247_p2 = (p_Result_s_fu_175_p3 ^ p_Result_12_fu_239_p3);

assign xor_ln176_fu_205_p2 = (p_Result_s_fu_175_p3 ^ p_Result_9_fu_197_p3);

assign y_V_1_fu_449_p4 = {{y_l_V_fu_443_p2[24:3]}};

assign y_V_fu_407_p2 = (p_Result_s_reg_526_pp0_iter4_reg ^ 1'd1);

assign y_l_V_fu_443_p2 = (exp_x_msb_1_table_V_q0 + y_lo_s_V_fu_433_p4);

assign y_lo_s_V_fu_433_p4 = {{r_V_fu_427_p2[49:25]}};

assign zext_ln1347_fu_383_p1 = rhs_1_fu_373_p5;

assign zext_ln541_1_fu_308_p1 = tmp_32_fu_281_p4;

assign zext_ln541_2_fu_402_p1 = p_Result_19_fu_354_p3;

assign zext_ln541_fu_303_p1 = tmp_33_fu_295_p3;

assign zext_ln813_4_fu_369_p1 = trunc_ln1_fu_360_p4;

assign zext_ln813_fu_393_p1 = ret_V_fu_387_p2;

endmodule //gesture_model_exp_17_9_s
