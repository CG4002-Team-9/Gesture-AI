// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gesture_model_sqrt_fixed_17_9_s (
        ap_clk,
        ap_rst,
        x,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [7:0] x;
output  [8:0] ap_return;
input   ap_ce;

reg[8:0] ap_return;

wire   [8:0] res_FH_V_18_fu_306_p3;
reg   [8:0] res_FH_V_18_reg_1359;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] or_ln318_1_fu_394_p2;
reg   [0:0] or_ln318_1_reg_1365;
wire   [2:0] x_l_I_V_27_fu_400_p3;
reg   [2:0] x_l_I_V_27_reg_1370;
wire   [8:0] x_l_FH_V_19_fu_408_p3;
reg   [8:0] x_l_FH_V_19_reg_1379;
wire   [8:0] res_FH_V_21_fu_658_p3;
reg   [8:0] res_FH_V_21_reg_1387;
wire   [0:0] or_ln318_5_fu_808_p2;
reg   [0:0] or_ln318_5_reg_1393;
wire   [3:0] x_l_I_V_32_fu_814_p3;
reg   [3:0] x_l_I_V_32_reg_1398;
wire   [8:0] x_l_FH_V_25_fu_822_p3;
reg   [8:0] x_l_FH_V_25_reg_1405;
wire   [8:0] x_l_FL_V_7_fu_830_p3;
reg   [8:0] x_l_FL_V_7_reg_1414;
wire    ap_block_pp0_stage0;
wire   [1:0] tmp_1_fu_130_p4;
wire   [1:0] tmp_2_fu_146_p4;
wire   [8:0] x_l_FH_V_15_fu_122_p3;
wire   [0:0] icmp_ln318_fu_140_p2;
wire   [0:0] x_l_I_V_22_fu_156_p2;
wire   [0:0] x_l_I_V_23_fu_168_p2;
wire   [8:0] x_l_FH_V_16_fu_162_p2;
wire   [8:0] res_FH_V_17_fu_190_p3;
wire   [1:0] tmp_s_fu_198_p4;
wire   [8:0] p_Val2_45_fu_182_p3;
wire   [8:0] mul_FH_V_fu_208_p4;
wire   [0:0] icmp_ln318_1_fu_224_p2;
wire   [0:0] xor_ln318_fu_230_p2;
wire   [0:0] xor_ln1653_fu_218_p2;
wire   [0:0] icmp_ln1650_fu_242_p2;
wire   [1:0] x_l_I_V_fu_248_p3;
wire   [1:0] select_ln235_fu_174_p3;
wire   [0:0] and_ln318_fu_236_p2;
wire   [0:0] or_ln318_fu_280_p2;
wire   [1:0] x_l_I_V_24_fu_256_p3;
wire  signed [1:0] x_l_I_V_25_fu_286_p3;
wire   [8:0] x_l_FH_V_fu_264_p2;
wire   [8:0] p_Result_s_fu_270_p4;
wire   [2:0] tmp_3_fu_314_p4;
wire   [7:0] mul_FH_V_1_fu_324_p4;
wire   [8:0] x_l_FH_V_17_fu_298_p3;
wire   [8:0] zext_ln308_fu_334_p1;
wire   [0:0] icmp_ln318_2_fu_350_p2;
wire   [0:0] icmp_ln1653_fu_344_p2;
wire   [0:0] xor_ln318_1_fu_356_p2;
wire  signed [2:0] sext_ln235_fu_294_p1;
wire   [0:0] icmp_ln1650_1_fu_368_p2;
wire   [2:0] x_l_I_V_5_fu_374_p2;
wire   [0:0] icmp_ln1649_fu_338_p2;
wire   [0:0] and_ln318_1_fu_362_p2;
wire   [2:0] x_l_I_V_26_fu_380_p3;
wire   [8:0] x_l_FH_V_18_fu_388_p2;
wire   [8:0] p_Result_1_fu_416_p4;
wire   [8:0] res_FH_V_19_fu_425_p3;
wire   [3:0] tmp_8_fu_431_p4;
wire   [6:0] mul_FH_V_2_fu_441_p4;
wire   [8:0] zext_ln308_1_fu_451_p1;
wire   [0:0] icmp_ln318_3_fu_465_p2;
wire   [0:0] icmp_ln1653_1_fu_460_p2;
wire   [0:0] xor_ln318_2_fu_470_p2;
wire   [0:0] icmp_ln1650_2_fu_482_p2;
wire   [2:0] x_l_I_V_8_fu_487_p2;
wire   [0:0] icmp_ln1649_1_fu_455_p2;
wire   [0:0] and_ln318_2_fu_476_p2;
wire   [0:0] or_ln318_2_fu_514_p2;
wire   [2:0] x_l_I_V_28_fu_492_p3;
wire  signed [2:0] x_l_I_V_29_fu_520_p3;
wire   [8:0] x_l_FH_V_20_fu_499_p2;
wire   [8:0] p_Result_2_fu_504_p4;
wire   [8:0] res_FH_V_20_fu_538_p3;
wire   [4:0] tmp_10_fu_546_p4;
wire   [5:0] mul_FH_V_3_fu_556_p3;
wire   [8:0] x_l_FH_V_21_fu_531_p3;
wire   [8:0] zext_ln308_2_fu_564_p1;
wire   [0:0] icmp_ln1653_2_fu_574_p2;
wire   [0:0] icmp_ln1649_3_fu_580_p2;
wire  signed [3:0] sext_ln235_1_fu_527_p1;
wire   [3:0] x_l_I_V_11_fu_598_p2;
wire   [8:0] add_ln813_fu_592_p2;
wire   [0:0] icmp_ln1649_2_fu_568_p2;
wire   [0:0] and_ln318_3_fu_586_p2;
wire   [0:0] or_ln318_3_fu_628_p2;
wire   [3:0] p_Val2_46_fu_604_p3;
wire   [8:0] x_l_FH_V_22_fu_612_p2;
wire   [8:0] p_Result_3_fu_618_p4;
wire   [3:0] tmp_fu_676_p4;
wire   [4:0] mul_FH_V_4_fu_686_p3;
wire   [1:0] tmp_5_fu_666_p4;
wire   [3:0] x_l_I_V_30_fu_634_p3;
wire   [8:0] x_l_FH_V_23_fu_642_p3;
wire   [8:0] zext_ln308_3_fu_694_p1;
wire   [8:0] x_l_FL_l_V_fu_650_p3;
wire   [8:0] mul_FL_V_fu_698_p3;
wire   [0:0] icmp_ln1651_fu_724_p2;
wire   [0:0] icmp_ln1653_3_fu_718_p2;
wire   [0:0] xor_ln1651_fu_730_p2;
wire   [0:0] signbit_fu_742_p2;
wire   [0:0] icmp_ln1650_4_fu_748_p2;
wire   [0:0] and_ln331_fu_754_p2;
wire   [8:0] zext_ln813_fu_766_p1;
wire   [0:0] or_ln331_fu_760_p2;
wire   [3:0] x_l_I_V_14_fu_776_p2;
wire   [8:0] sub_ln813_fu_770_p2;
wire   [0:0] icmp_ln1649_4_fu_712_p2;
wire   [0:0] and_ln318_4_fu_736_p2;
wire   [0:0] or_ln318_4_fu_802_p2;
wire   [0:0] icmp_ln318_4_fu_706_p2;
wire   [3:0] x_l_I_V_31_fu_782_p3;
wire   [8:0] x_l_FH_V_24_fu_790_p2;
wire   [8:0] x_l_FL_V_fu_796_p2;
wire   [8:0] p_Result_4_fu_838_p4;
wire   [8:0] res_FH_V_22_fu_847_p3;
wire   [2:0] tmp_4_fu_863_p4;
wire   [3:0] mul_FH_V_5_fu_873_p3;
wire   [3:0] tmp_7_fu_853_p4;
wire   [8:0] zext_ln308_4_fu_881_p1;
wire   [8:0] mul_FL_V_1_fu_885_p3;
wire   [0:0] icmp_ln1651_1_fu_908_p2;
wire   [0:0] icmp_ln1653_4_fu_903_p2;
wire   [0:0] xor_ln1651_1_fu_913_p2;
wire   [0:0] signbit_1_fu_925_p2;
wire   [0:0] icmp_ln1650_6_fu_930_p2;
wire   [0:0] and_ln331_1_fu_935_p2;
wire   [8:0] zext_ln813_1_fu_947_p1;
wire   [0:0] or_ln331_1_fu_941_p2;
wire   [3:0] x_l_I_V_17_fu_956_p2;
wire   [8:0] sub_ln813_7_fu_951_p2;
wire   [0:0] icmp_ln1649_5_fu_898_p2;
wire   [0:0] and_ln318_5_fu_919_p2;
wire   [0:0] or_ln318_6_fu_989_p2;
wire   [0:0] icmp_ln318_5_fu_893_p2;
wire   [0:0] or_ln318_7_fu_995_p2;
wire   [3:0] x_l_I_V_33_fu_961_p3;
wire   [8:0] x_l_FH_V_26_fu_968_p2;
wire   [8:0] x_l_FL_V_3_fu_974_p2;
wire   [8:0] p_Result_5_fu_979_p4;
wire   [8:0] res_FH_V_23_fu_1023_p3;
wire   [1:0] tmp_6_fu_1041_p4;
wire   [2:0] mul_FH_V_6_fu_1051_p3;
wire   [5:0] tmp_9_fu_1031_p4;
wire   [3:0] x_l_I_V_34_fu_1001_p3;
wire   [8:0] x_l_FH_V_27_fu_1009_p3;
wire   [8:0] zext_ln818_fu_1059_p1;
wire   [8:0] x_l_FL_V_8_fu_1016_p3;
wire   [8:0] mul_FL_V_2_fu_1063_p3;
wire   [0:0] icmp_ln1651_2_fu_1089_p2;
wire   [0:0] icmp_ln1653_5_fu_1083_p2;
wire   [0:0] xor_ln1651_2_fu_1095_p2;
wire   [0:0] signbit_2_fu_1107_p2;
wire   [0:0] icmp_ln1650_8_fu_1113_p2;
wire   [0:0] and_ln331_2_fu_1119_p2;
wire   [8:0] zext_ln813_2_fu_1131_p1;
wire   [0:0] or_ln331_2_fu_1125_p2;
wire   [3:0] x_l_I_V_20_fu_1141_p2;
wire   [8:0] sub_ln813_10_fu_1135_p2;
wire   [3:0] x_l_I_V_35_fu_1147_p3;
wire   [0:0] icmp_ln1649_6_fu_1077_p2;
wire   [0:0] and_ln318_6_fu_1101_p2;
wire   [0:0] or_ln318_8_fu_1183_p2;
wire   [0:0] icmp_ln318_6_fu_1071_p2;
wire   [0:0] or_ln318_9_fu_1189_p2;
wire   [0:0] icmp_ln353_fu_1177_p2;
wire   [8:0] x_l_FH_V_28_fu_1155_p2;
wire   [8:0] x_l_FL_V_5_fu_1161_p2;
wire   [8:0] p_Result_6_fu_1167_p4;
wire   [8:0] res_FH_V_fu_1217_p3;
wire   [7:0] trunc_ln58_fu_1225_p1;
wire   [0:0] tmp_18_fu_1237_p3;
wire   [1:0] mul_FH_V_7_fu_1245_p3;
wire   [8:0] x_l_FH_V_29_fu_1201_p3;
wire   [8:0] zext_ln818_1_fu_1253_p1;
wire   [8:0] x_l_FL_V_6_fu_1209_p3;
wire   [8:0] mul_FL_V_3_fu_1229_p3;
wire   [0:0] icmp_ln1651_3_fu_1269_p2;
wire   [0:0] icmp_ln1653_6_fu_1263_p2;
wire   [0:0] xor_ln1651_3_fu_1275_p2;
wire   [0:0] icmp_ln1649_7_fu_1257_p2;
wire   [0:0] and_ln318_8_fu_1281_p2;
wire   [0:0] or_ln318_10_fu_1297_p2;
wire   [0:0] and_ln318_7_fu_1195_p2;
wire   [0:0] or_ln318_11_fu_1303_p2;
wire   [8:0] p_Result_7_fu_1287_p4;
wire   [8:0] res_FH_V_15_fu_1309_p3;
wire   [9:0] zext_ln813_3_fu_1317_p1;
wire   [9:0] res_FH_l_V_fu_1321_p2;
wire   [8:0] res_FH_V_24_fu_1327_p2;
wire   [0:0] tmp_20_fu_1333_p3;
wire   [7:0] tmp_11_fu_1341_p4;
wire   [8:0] tmp_12_fu_1351_p3;
reg    ap_ce_reg;
reg   [7:0] x_int_reg;
reg   [8:0] ap_return_int_reg;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= tmp_12_fu_1351_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        or_ln318_1_reg_1365 <= or_ln318_1_fu_394_p2;
        or_ln318_5_reg_1393 <= or_ln318_5_fu_808_p2;
        res_FH_V_18_reg_1359 <= res_FH_V_18_fu_306_p3;
        res_FH_V_21_reg_1387 <= res_FH_V_21_fu_658_p3;
        x_l_FH_V_19_reg_1379[8 : 1] <= x_l_FH_V_19_fu_408_p3[8 : 1];
        x_l_FH_V_25_reg_1405 <= x_l_FH_V_25_fu_822_p3;
        x_l_FL_V_7_reg_1414[8 : 6] <= x_l_FL_V_7_fu_830_p3[8 : 6];
        x_l_I_V_27_reg_1370 <= x_l_I_V_27_fu_400_p3;
        x_l_I_V_32_reg_1398 <= x_l_I_V_32_fu_814_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        x_int_reg <= x;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = tmp_12_fu_1351_p3;
    end else begin
        ap_return = 'bx;
    end
end

assign add_ln813_fu_592_p2 = ($signed(x_l_FH_V_21_fu_531_p3) + $signed(9'd511));

assign and_ln318_1_fu_362_p2 = (xor_ln318_1_fu_356_p2 & icmp_ln1653_fu_344_p2);

assign and_ln318_2_fu_476_p2 = (xor_ln318_2_fu_470_p2 & icmp_ln1653_1_fu_460_p2);

assign and_ln318_3_fu_586_p2 = (icmp_ln1653_2_fu_574_p2 & icmp_ln1649_3_fu_580_p2);

assign and_ln318_4_fu_736_p2 = (xor_ln1651_fu_730_p2 & icmp_ln1653_3_fu_718_p2);

assign and_ln318_5_fu_919_p2 = (xor_ln1651_1_fu_913_p2 & icmp_ln1653_4_fu_903_p2);

assign and_ln318_6_fu_1101_p2 = (xor_ln1651_2_fu_1095_p2 & icmp_ln1653_5_fu_1083_p2);

assign and_ln318_7_fu_1195_p2 = (or_ln318_9_fu_1189_p2 & icmp_ln353_fu_1177_p2);

assign and_ln318_8_fu_1281_p2 = (xor_ln1651_3_fu_1275_p2 & icmp_ln1653_6_fu_1263_p2);

assign and_ln318_fu_236_p2 = (xor_ln318_fu_230_p2 & xor_ln1653_fu_218_p2);

assign and_ln331_1_fu_935_p2 = (signbit_1_fu_925_p2 & icmp_ln1653_4_fu_903_p2);

assign and_ln331_2_fu_1119_p2 = (signbit_2_fu_1107_p2 & icmp_ln1653_5_fu_1083_p2);

assign and_ln331_fu_754_p2 = (signbit_fu_742_p2 & icmp_ln1653_3_fu_718_p2);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign icmp_ln1649_1_fu_455_p2 = ((x_l_I_V_27_reg_1370 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln1649_2_fu_568_p2 = ((x_l_I_V_29_fu_520_p3 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln1649_3_fu_580_p2 = ((x_l_FH_V_21_fu_531_p3 > zext_ln308_2_fu_564_p1) ? 1'b1 : 1'b0);

assign icmp_ln1649_4_fu_712_p2 = ((x_l_FH_V_23_fu_642_p3 > zext_ln308_3_fu_694_p1) ? 1'b1 : 1'b0);

assign icmp_ln1649_5_fu_898_p2 = ((x_l_FH_V_25_reg_1405 > zext_ln308_4_fu_881_p1) ? 1'b1 : 1'b0);

assign icmp_ln1649_6_fu_1077_p2 = ((x_l_FH_V_27_fu_1009_p3 > zext_ln818_fu_1059_p1) ? 1'b1 : 1'b0);

assign icmp_ln1649_7_fu_1257_p2 = ((x_l_FH_V_29_fu_1201_p3 > zext_ln818_1_fu_1253_p1) ? 1'b1 : 1'b0);

assign icmp_ln1649_fu_338_p2 = ((x_l_I_V_25_fu_286_p3 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln1650_1_fu_368_p2 = ((x_l_FH_V_17_fu_298_p3 < zext_ln308_fu_334_p1) ? 1'b1 : 1'b0);

assign icmp_ln1650_2_fu_482_p2 = ((x_l_FH_V_19_reg_1379 < zext_ln308_1_fu_451_p1) ? 1'b1 : 1'b0);

assign icmp_ln1650_4_fu_748_p2 = ((x_l_FH_V_23_fu_642_p3 < zext_ln308_3_fu_694_p1) ? 1'b1 : 1'b0);

assign icmp_ln1650_6_fu_930_p2 = ((x_l_FH_V_25_reg_1405 < zext_ln308_4_fu_881_p1) ? 1'b1 : 1'b0);

assign icmp_ln1650_8_fu_1113_p2 = ((x_l_FH_V_27_fu_1009_p3 < zext_ln818_fu_1059_p1) ? 1'b1 : 1'b0);

assign icmp_ln1650_fu_242_p2 = ((p_Val2_45_fu_182_p3 < mul_FH_V_fu_208_p4) ? 1'b1 : 1'b0);

assign icmp_ln1651_1_fu_908_p2 = ((x_l_FL_V_7_reg_1414 < mul_FL_V_1_fu_885_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_2_fu_1089_p2 = ((x_l_FL_V_8_fu_1016_p3 < mul_FL_V_2_fu_1063_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_3_fu_1269_p2 = ((x_l_FL_V_6_fu_1209_p3 < mul_FL_V_3_fu_1229_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_fu_724_p2 = ((x_l_FL_l_V_fu_650_p3 < mul_FL_V_fu_698_p3) ? 1'b1 : 1'b0);

assign icmp_ln1653_1_fu_460_p2 = ((x_l_I_V_27_reg_1370 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln1653_2_fu_574_p2 = ((x_l_I_V_29_fu_520_p3 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln1653_3_fu_718_p2 = ((x_l_FH_V_23_fu_642_p3 == zext_ln308_3_fu_694_p1) ? 1'b1 : 1'b0);

assign icmp_ln1653_4_fu_903_p2 = ((x_l_FH_V_25_reg_1405 == zext_ln308_4_fu_881_p1) ? 1'b1 : 1'b0);

assign icmp_ln1653_5_fu_1083_p2 = ((x_l_FH_V_27_fu_1009_p3 == zext_ln818_fu_1059_p1) ? 1'b1 : 1'b0);

assign icmp_ln1653_6_fu_1263_p2 = ((x_l_FH_V_29_fu_1201_p3 == zext_ln818_1_fu_1253_p1) ? 1'b1 : 1'b0);

assign icmp_ln1653_fu_344_p2 = ((x_l_I_V_25_fu_286_p3 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln318_1_fu_224_p2 = ((p_Val2_45_fu_182_p3 < mul_FH_V_fu_208_p4) ? 1'b1 : 1'b0);

assign icmp_ln318_2_fu_350_p2 = ((x_l_FH_V_17_fu_298_p3 < zext_ln308_fu_334_p1) ? 1'b1 : 1'b0);

assign icmp_ln318_3_fu_465_p2 = ((x_l_FH_V_19_reg_1379 < zext_ln308_1_fu_451_p1) ? 1'b1 : 1'b0);

assign icmp_ln318_4_fu_706_p2 = ((x_l_I_V_30_fu_634_p3 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln318_5_fu_893_p2 = ((x_l_I_V_32_reg_1398 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln318_6_fu_1071_p2 = ((x_l_I_V_34_fu_1001_p3 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln318_fu_140_p2 = ((tmp_1_fu_130_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln353_fu_1177_p2 = ((x_l_I_V_35_fu_1147_p3 != 4'd0) ? 1'b1 : 1'b0);

assign mul_FH_V_1_fu_324_p4 = {{{{1'd0}, {tmp_3_fu_314_p4}}}, {4'd8}};

assign mul_FH_V_2_fu_441_p4 = {{{{1'd0}, {tmp_8_fu_431_p4}}}, {2'd2}};

assign mul_FH_V_3_fu_556_p3 = {{1'd0}, {tmp_10_fu_546_p4}};

assign mul_FH_V_4_fu_686_p3 = {{1'd0}, {tmp_fu_676_p4}};

assign mul_FH_V_5_fu_873_p3 = {{1'd0}, {tmp_4_fu_863_p4}};

assign mul_FH_V_6_fu_1051_p3 = {{1'd0}, {tmp_6_fu_1041_p4}};

assign mul_FH_V_7_fu_1245_p3 = {{1'd0}, {tmp_18_fu_1237_p3}};

assign mul_FH_V_fu_208_p4 = {{{{1'd0}, {tmp_s_fu_198_p4}}}, {6'd32}};

assign mul_FL_V_1_fu_885_p3 = {{tmp_7_fu_853_p4}, {5'd16}};

assign mul_FL_V_2_fu_1063_p3 = {{tmp_9_fu_1031_p4}, {3'd4}};

assign mul_FL_V_3_fu_1229_p3 = {{trunc_ln58_fu_1225_p1}, {1'd1}};

assign mul_FL_V_fu_698_p3 = {{tmp_5_fu_666_p4}, {7'd64}};

assign or_ln318_10_fu_1297_p2 = (icmp_ln1649_7_fu_1257_p2 | and_ln318_8_fu_1281_p2);

assign or_ln318_11_fu_1303_p2 = (or_ln318_10_fu_1297_p2 | and_ln318_7_fu_1195_p2);

assign or_ln318_1_fu_394_p2 = (icmp_ln1649_fu_338_p2 | and_ln318_1_fu_362_p2);

assign or_ln318_2_fu_514_p2 = (icmp_ln1649_1_fu_455_p2 | and_ln318_2_fu_476_p2);

assign or_ln318_3_fu_628_p2 = (icmp_ln1649_2_fu_568_p2 | and_ln318_3_fu_586_p2);

assign or_ln318_4_fu_802_p2 = (icmp_ln1649_4_fu_712_p2 | and_ln318_4_fu_736_p2);

assign or_ln318_5_fu_808_p2 = (or_ln318_4_fu_802_p2 | icmp_ln318_4_fu_706_p2);

assign or_ln318_6_fu_989_p2 = (icmp_ln1649_5_fu_898_p2 | and_ln318_5_fu_919_p2);

assign or_ln318_7_fu_995_p2 = (or_ln318_6_fu_989_p2 | icmp_ln318_5_fu_893_p2);

assign or_ln318_8_fu_1183_p2 = (icmp_ln1649_6_fu_1077_p2 | and_ln318_6_fu_1101_p2);

assign or_ln318_9_fu_1189_p2 = (or_ln318_8_fu_1183_p2 | icmp_ln318_6_fu_1071_p2);

assign or_ln318_fu_280_p2 = (x_l_I_V_23_fu_168_p2 | and_ln318_fu_236_p2);

assign or_ln331_1_fu_941_p2 = (icmp_ln1650_6_fu_930_p2 | and_ln331_1_fu_935_p2);

assign or_ln331_2_fu_1125_p2 = (icmp_ln1650_8_fu_1113_p2 | and_ln331_2_fu_1119_p2);

assign or_ln331_fu_760_p2 = (icmp_ln1650_4_fu_748_p2 | and_ln331_fu_754_p2);

assign p_Result_1_fu_416_p4 = {res_FH_V_18_reg_1359[9 - 1:7], |(1'd1), res_FH_V_18_reg_1359[5:0]};

assign p_Result_2_fu_504_p4 = {res_FH_V_19_fu_425_p3[9 - 1:6], |(1'd1), res_FH_V_19_fu_425_p3[4:0]};

assign p_Result_3_fu_618_p4 = {res_FH_V_20_fu_538_p3[9 - 1:5], |(1'd1), res_FH_V_20_fu_538_p3[3:0]};

assign p_Result_4_fu_838_p4 = {res_FH_V_21_reg_1387[9 - 1:4], |(1'd1), res_FH_V_21_reg_1387[2:0]};

assign p_Result_5_fu_979_p4 = {res_FH_V_22_fu_847_p3[9 - 1:3], |(1'd1), res_FH_V_22_fu_847_p3[1:0]};

assign p_Result_6_fu_1167_p4 = {res_FH_V_23_fu_1023_p3[9 - 1:2], |(1'd1), res_FH_V_23_fu_1023_p3[0:0]};

assign p_Result_7_fu_1287_p4 = {res_FH_V_fu_1217_p3[9-1:1], |(1'd1)};

assign p_Result_s_fu_270_p4 = {res_FH_V_17_fu_190_p3[9 - 1:8], |(1'd1), res_FH_V_17_fu_190_p3[6:0]};

assign p_Val2_45_fu_182_p3 = ((icmp_ln318_fu_140_p2[0:0] == 1'b1) ? x_l_FH_V_16_fu_162_p2 : x_l_FH_V_15_fu_122_p3);

assign p_Val2_46_fu_604_p3 = ((icmp_ln1649_3_fu_580_p2[0:0] == 1'b1) ? sext_ln235_1_fu_527_p1 : x_l_I_V_11_fu_598_p2);

assign res_FH_V_15_fu_1309_p3 = ((or_ln318_11_fu_1303_p2[0:0] == 1'b1) ? p_Result_7_fu_1287_p4 : res_FH_V_fu_1217_p3);

assign res_FH_V_17_fu_190_p3 = ((icmp_ln318_fu_140_p2[0:0] == 1'b1) ? 9'd256 : 9'd0);

assign res_FH_V_18_fu_306_p3 = ((or_ln318_fu_280_p2[0:0] == 1'b1) ? p_Result_s_fu_270_p4 : res_FH_V_17_fu_190_p3);

assign res_FH_V_19_fu_425_p3 = ((or_ln318_1_reg_1365[0:0] == 1'b1) ? p_Result_1_fu_416_p4 : res_FH_V_18_reg_1359);

assign res_FH_V_20_fu_538_p3 = ((or_ln318_2_fu_514_p2[0:0] == 1'b1) ? p_Result_2_fu_504_p4 : res_FH_V_19_fu_425_p3);

assign res_FH_V_21_fu_658_p3 = ((or_ln318_3_fu_628_p2[0:0] == 1'b1) ? p_Result_3_fu_618_p4 : res_FH_V_20_fu_538_p3);

assign res_FH_V_22_fu_847_p3 = ((or_ln318_5_reg_1393[0:0] == 1'b1) ? p_Result_4_fu_838_p4 : res_FH_V_21_reg_1387);

assign res_FH_V_23_fu_1023_p3 = ((or_ln318_7_fu_995_p2[0:0] == 1'b1) ? p_Result_5_fu_979_p4 : res_FH_V_22_fu_847_p3);

assign res_FH_V_24_fu_1327_p2 = (res_FH_V_15_fu_1309_p3 + 9'd1);

assign res_FH_V_fu_1217_p3 = ((or_ln318_9_fu_1189_p2[0:0] == 1'b1) ? p_Result_6_fu_1167_p4 : res_FH_V_23_fu_1023_p3);

assign res_FH_l_V_fu_1321_p2 = (zext_ln813_3_fu_1317_p1 + 10'd1);

assign select_ln235_fu_174_p3 = ((x_l_I_V_23_fu_168_p2[0:0] == 1'b1) ? 2'd3 : 2'd0);

assign sext_ln235_1_fu_527_p1 = x_l_I_V_29_fu_520_p3;

assign sext_ln235_fu_294_p1 = x_l_I_V_25_fu_286_p3;

assign signbit_1_fu_925_p2 = ((x_l_FL_V_7_reg_1414 < mul_FL_V_1_fu_885_p3) ? 1'b1 : 1'b0);

assign signbit_2_fu_1107_p2 = ((x_l_FL_V_8_fu_1016_p3 < mul_FL_V_2_fu_1063_p3) ? 1'b1 : 1'b0);

assign signbit_fu_742_p2 = ((x_l_FL_l_V_fu_650_p3 < mul_FL_V_fu_698_p3) ? 1'b1 : 1'b0);

assign sub_ln813_10_fu_1135_p2 = (x_l_FH_V_27_fu_1009_p3 - zext_ln813_2_fu_1131_p1);

assign sub_ln813_7_fu_951_p2 = (x_l_FH_V_25_reg_1405 - zext_ln813_1_fu_947_p1);

assign sub_ln813_fu_770_p2 = (x_l_FH_V_23_fu_642_p3 - zext_ln813_fu_766_p1);

assign tmp_10_fu_546_p4 = {{res_FH_V_20_fu_538_p3[8:4]}};

assign tmp_11_fu_1341_p4 = {{res_FH_V_24_fu_1327_p2[8:1]}};

assign tmp_12_fu_1351_p3 = {{tmp_20_fu_1333_p3}, {tmp_11_fu_1341_p4}};

assign tmp_18_fu_1237_p3 = res_FH_V_fu_1217_p3[32'd8];

assign tmp_1_fu_130_p4 = {{x_int_reg[7:6]}};

assign tmp_20_fu_1333_p3 = res_FH_l_V_fu_1321_p2[32'd9];

assign tmp_2_fu_146_p4 = {{x_int_reg[7:6]}};

assign tmp_3_fu_314_p4 = {{res_FH_V_18_fu_306_p3[8:6]}};

assign tmp_4_fu_863_p4 = {{res_FH_V_22_fu_847_p3[8:6]}};

assign tmp_5_fu_666_p4 = {{res_FH_V_21_fu_658_p3[4:3]}};

assign tmp_6_fu_1041_p4 = {{res_FH_V_23_fu_1023_p3[8:7]}};

assign tmp_7_fu_853_p4 = {{res_FH_V_22_fu_847_p3[5:2]}};

assign tmp_8_fu_431_p4 = {{res_FH_V_19_fu_425_p3[8:5]}};

assign tmp_9_fu_1031_p4 = {{res_FH_V_23_fu_1023_p3[6:1]}};

assign tmp_fu_676_p4 = {{res_FH_V_21_fu_658_p3[8:5]}};

assign tmp_s_fu_198_p4 = {{res_FH_V_17_fu_190_p3[8:7]}};

assign trunc_ln58_fu_1225_p1 = res_FH_V_fu_1217_p3[7:0];

assign x_l_FH_V_15_fu_122_p3 = {{x_int_reg}, {1'd0}};

assign x_l_FH_V_16_fu_162_p2 = ($signed(x_l_FH_V_15_fu_122_p3) + $signed(9'd384));

assign x_l_FH_V_17_fu_298_p3 = ((or_ln318_fu_280_p2[0:0] == 1'b1) ? x_l_FH_V_fu_264_p2 : p_Val2_45_fu_182_p3);

assign x_l_FH_V_18_fu_388_p2 = (x_l_FH_V_17_fu_298_p3 - zext_ln308_fu_334_p1);

assign x_l_FH_V_19_fu_408_p3 = ((or_ln318_1_fu_394_p2[0:0] == 1'b1) ? x_l_FH_V_18_fu_388_p2 : x_l_FH_V_17_fu_298_p3);

assign x_l_FH_V_20_fu_499_p2 = (x_l_FH_V_19_reg_1379 - zext_ln308_1_fu_451_p1);

assign x_l_FH_V_21_fu_531_p3 = ((or_ln318_2_fu_514_p2[0:0] == 1'b1) ? x_l_FH_V_20_fu_499_p2 : x_l_FH_V_19_reg_1379);

assign x_l_FH_V_22_fu_612_p2 = (add_ln813_fu_592_p2 - zext_ln308_2_fu_564_p1);

assign x_l_FH_V_23_fu_642_p3 = ((or_ln318_3_fu_628_p2[0:0] == 1'b1) ? x_l_FH_V_22_fu_612_p2 : x_l_FH_V_21_fu_531_p3);

assign x_l_FH_V_24_fu_790_p2 = (sub_ln813_fu_770_p2 - zext_ln308_3_fu_694_p1);

assign x_l_FH_V_25_fu_822_p3 = ((or_ln318_5_fu_808_p2[0:0] == 1'b1) ? x_l_FH_V_24_fu_790_p2 : x_l_FH_V_23_fu_642_p3);

assign x_l_FH_V_26_fu_968_p2 = (sub_ln813_7_fu_951_p2 - zext_ln308_4_fu_881_p1);

assign x_l_FH_V_27_fu_1009_p3 = ((or_ln318_7_fu_995_p2[0:0] == 1'b1) ? x_l_FH_V_26_fu_968_p2 : x_l_FH_V_25_reg_1405);

assign x_l_FH_V_28_fu_1155_p2 = (sub_ln813_10_fu_1135_p2 - zext_ln818_fu_1059_p1);

assign x_l_FH_V_29_fu_1201_p3 = ((or_ln318_9_fu_1189_p2[0:0] == 1'b1) ? x_l_FH_V_28_fu_1155_p2 : x_l_FH_V_27_fu_1009_p3);

assign x_l_FH_V_fu_264_p2 = (p_Val2_45_fu_182_p3 - mul_FH_V_fu_208_p4);

assign x_l_FL_V_3_fu_974_p2 = (x_l_FL_V_7_reg_1414 - mul_FL_V_1_fu_885_p3);

assign x_l_FL_V_5_fu_1161_p2 = (x_l_FL_V_8_fu_1016_p3 - mul_FL_V_2_fu_1063_p3);

assign x_l_FL_V_6_fu_1209_p3 = ((or_ln318_9_fu_1189_p2[0:0] == 1'b1) ? x_l_FL_V_5_fu_1161_p2 : x_l_FL_V_8_fu_1016_p3);

assign x_l_FL_V_7_fu_830_p3 = ((or_ln318_5_fu_808_p2[0:0] == 1'b1) ? x_l_FL_V_fu_796_p2 : x_l_FL_l_V_fu_650_p3);

assign x_l_FL_V_8_fu_1016_p3 = ((or_ln318_7_fu_995_p2[0:0] == 1'b1) ? x_l_FL_V_3_fu_974_p2 : x_l_FL_V_7_reg_1414);

assign x_l_FL_V_fu_796_p2 = (x_l_FL_l_V_fu_650_p3 - mul_FL_V_fu_698_p3);

assign x_l_FL_l_V_fu_650_p3 = ((or_ln318_3_fu_628_p2[0:0] == 1'b1) ? 9'd256 : 9'd0);

assign x_l_I_V_11_fu_598_p2 = ($signed(sext_ln235_1_fu_527_p1) + $signed(4'd15));

assign x_l_I_V_14_fu_776_p2 = ($signed(x_l_I_V_30_fu_634_p3) + $signed(4'd15));

assign x_l_I_V_17_fu_956_p2 = ($signed(x_l_I_V_32_reg_1398) + $signed(4'd15));

assign x_l_I_V_20_fu_1141_p2 = ($signed(x_l_I_V_34_fu_1001_p3) + $signed(4'd15));

assign x_l_I_V_22_fu_156_p2 = ((tmp_2_fu_146_p4 == 2'd0) ? 1'b1 : 1'b0);

assign x_l_I_V_23_fu_168_p2 = (x_l_I_V_22_fu_156_p2 & icmp_ln318_fu_140_p2);

assign x_l_I_V_24_fu_256_p3 = ((icmp_ln1650_fu_242_p2[0:0] == 1'b1) ? x_l_I_V_fu_248_p3 : select_ln235_fu_174_p3);

assign x_l_I_V_25_fu_286_p3 = ((or_ln318_fu_280_p2[0:0] == 1'b1) ? x_l_I_V_24_fu_256_p3 : select_ln235_fu_174_p3);

assign x_l_I_V_26_fu_380_p3 = ((icmp_ln1650_1_fu_368_p2[0:0] == 1'b1) ? x_l_I_V_5_fu_374_p2 : sext_ln235_fu_294_p1);

assign x_l_I_V_27_fu_400_p3 = ((or_ln318_1_fu_394_p2[0:0] == 1'b1) ? x_l_I_V_26_fu_380_p3 : sext_ln235_fu_294_p1);

assign x_l_I_V_28_fu_492_p3 = ((icmp_ln1650_2_fu_482_p2[0:0] == 1'b1) ? x_l_I_V_8_fu_487_p2 : x_l_I_V_27_reg_1370);

assign x_l_I_V_29_fu_520_p3 = ((or_ln318_2_fu_514_p2[0:0] == 1'b1) ? x_l_I_V_28_fu_492_p3 : x_l_I_V_27_reg_1370);

assign x_l_I_V_30_fu_634_p3 = ((or_ln318_3_fu_628_p2[0:0] == 1'b1) ? p_Val2_46_fu_604_p3 : sext_ln235_1_fu_527_p1);

assign x_l_I_V_31_fu_782_p3 = ((or_ln331_fu_760_p2[0:0] == 1'b1) ? x_l_I_V_14_fu_776_p2 : x_l_I_V_30_fu_634_p3);

assign x_l_I_V_32_fu_814_p3 = ((or_ln318_5_fu_808_p2[0:0] == 1'b1) ? x_l_I_V_31_fu_782_p3 : 4'd0);

assign x_l_I_V_33_fu_961_p3 = ((or_ln331_1_fu_941_p2[0:0] == 1'b1) ? x_l_I_V_17_fu_956_p2 : x_l_I_V_32_reg_1398);

assign x_l_I_V_34_fu_1001_p3 = ((or_ln318_7_fu_995_p2[0:0] == 1'b1) ? x_l_I_V_33_fu_961_p3 : 4'd0);

assign x_l_I_V_35_fu_1147_p3 = ((or_ln331_2_fu_1125_p2[0:0] == 1'b1) ? x_l_I_V_20_fu_1141_p2 : x_l_I_V_34_fu_1001_p3);

assign x_l_I_V_5_fu_374_p2 = ($signed(sext_ln235_fu_294_p1) + $signed(3'd7));

assign x_l_I_V_8_fu_487_p2 = ($signed(x_l_I_V_27_reg_1370) + $signed(3'd7));

assign x_l_I_V_fu_248_p3 = ((x_l_I_V_23_fu_168_p2[0:0] == 1'b1) ? 2'd2 : 2'd3);

assign xor_ln1651_1_fu_913_p2 = (icmp_ln1651_1_fu_908_p2 ^ 1'd1);

assign xor_ln1651_2_fu_1095_p2 = (icmp_ln1651_2_fu_1089_p2 ^ 1'd1);

assign xor_ln1651_3_fu_1275_p2 = (icmp_ln1651_3_fu_1269_p2 ^ 1'd1);

assign xor_ln1651_fu_730_p2 = (icmp_ln1651_fu_724_p2 ^ 1'd1);

assign xor_ln1653_fu_218_p2 = (x_l_I_V_23_fu_168_p2 ^ 1'd1);

assign xor_ln318_1_fu_356_p2 = (icmp_ln318_2_fu_350_p2 ^ 1'd1);

assign xor_ln318_2_fu_470_p2 = (icmp_ln318_3_fu_465_p2 ^ 1'd1);

assign xor_ln318_fu_230_p2 = (icmp_ln318_1_fu_224_p2 ^ 1'd1);

assign zext_ln308_1_fu_451_p1 = mul_FH_V_2_fu_441_p4;

assign zext_ln308_2_fu_564_p1 = mul_FH_V_3_fu_556_p3;

assign zext_ln308_3_fu_694_p1 = mul_FH_V_4_fu_686_p3;

assign zext_ln308_4_fu_881_p1 = mul_FH_V_5_fu_873_p3;

assign zext_ln308_fu_334_p1 = mul_FH_V_1_fu_324_p4;

assign zext_ln813_1_fu_947_p1 = signbit_1_fu_925_p2;

assign zext_ln813_2_fu_1131_p1 = signbit_2_fu_1107_p2;

assign zext_ln813_3_fu_1317_p1 = res_FH_V_15_fu_1309_p3;

assign zext_ln813_fu_766_p1 = signbit_fu_742_p2;

assign zext_ln818_1_fu_1253_p1 = mul_FH_V_7_fu_1245_p3;

assign zext_ln818_fu_1059_p1 = mul_FH_V_6_fu_1051_p3;

always @ (posedge ap_clk) begin
    x_l_FH_V_19_reg_1379[0] <= 1'b0;
    x_l_FL_V_7_reg_1414[5:0] <= 6'b000000;
end

endmodule //gesture_model_sqrt_fixed_17_9_s
