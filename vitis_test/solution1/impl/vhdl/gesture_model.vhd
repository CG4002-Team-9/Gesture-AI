-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gesture_model is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    input_r_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_we0 : OUT STD_LOGIC;
    input_r_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    input_r_ce1 : OUT STD_LOGIC;
    input_r_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    input_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_we1 : OUT STD_LOGIC;
    output_r_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_r_we0 : OUT STD_LOGIC;
    output_r_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_r_ce1 : OUT STD_LOGIC;
    output_r_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_r_we1 : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of gesture_model is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "gesture_model_gesture_model,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=6.589375,HLS_SYN_LAT=17280,HLS_SYN_TPT=15110,HLS_SYN_MEM=21,HLS_SYN_DSP=0,HLS_SYN_FF=7217,HLS_SYN_LUT=7567,HLS_VERSION=2022_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

    signal conv1d_out_V_i_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal conv1d_out_V_t_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal bn1_out_V_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bn1_out_V_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bn1_out_V_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bn1_out_V_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal maxpool_out_V_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal maxpool_out_V_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal flatten_out_V_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal flatten_out_V_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dense1_out_V_i_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal dense1_out_V_t_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal bn2_out_V_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bn2_out_V_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bn2_out_V_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bn2_out_V_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal dense_output_out_V_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dense_output_out_V_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv1d_0_U0_ap_start : STD_LOGIC;
    signal conv1d_0_U0_ap_done : STD_LOGIC;
    signal conv1d_0_U0_ap_continue : STD_LOGIC;
    signal conv1d_0_U0_ap_idle : STD_LOGIC;
    signal conv1d_0_U0_ap_ready : STD_LOGIC;
    signal conv1d_0_U0_input_r_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv1d_0_U0_input_r_ce0 : STD_LOGIC;
    signal conv1d_0_U0_input_r_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv1d_0_U0_input_r_ce1 : STD_LOGIC;
    signal conv1d_0_U0_output_r_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv1d_0_U0_output_r_ce0 : STD_LOGIC;
    signal conv1d_0_U0_output_r_we0 : STD_LOGIC;
    signal conv1d_0_U0_output_r_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal batchnorm_1_U0_ap_start : STD_LOGIC;
    signal batchnorm_1_U0_ap_done : STD_LOGIC;
    signal batchnorm_1_U0_ap_continue : STD_LOGIC;
    signal batchnorm_1_U0_ap_idle : STD_LOGIC;
    signal batchnorm_1_U0_ap_ready : STD_LOGIC;
    signal batchnorm_1_U0_input_r_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal batchnorm_1_U0_input_r_ce0 : STD_LOGIC;
    signal batchnorm_1_U0_output_r_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal batchnorm_1_U0_output_r_ce0 : STD_LOGIC;
    signal batchnorm_1_U0_output_r_we0 : STD_LOGIC;
    signal batchnorm_1_U0_output_r_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal maxpool1d_2_U0_ap_start : STD_LOGIC;
    signal maxpool1d_2_U0_ap_done : STD_LOGIC;
    signal maxpool1d_2_U0_ap_continue : STD_LOGIC;
    signal maxpool1d_2_U0_ap_idle : STD_LOGIC;
    signal maxpool1d_2_U0_ap_ready : STD_LOGIC;
    signal maxpool1d_2_U0_input_r_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal maxpool1d_2_U0_input_r_ce0 : STD_LOGIC;
    signal maxpool1d_2_U0_input_r_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal maxpool1d_2_U0_input_r_ce1 : STD_LOGIC;
    signal maxpool1d_2_U0_output_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal maxpool1d_2_U0_output_r_ce0 : STD_LOGIC;
    signal maxpool1d_2_U0_output_r_we0 : STD_LOGIC;
    signal maxpool1d_2_U0_output_r_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal Loop_VITIS_LOOP_42_1_proc_U0_ap_start : STD_LOGIC;
    signal Loop_VITIS_LOOP_42_1_proc_U0_ap_done : STD_LOGIC;
    signal Loop_VITIS_LOOP_42_1_proc_U0_ap_continue : STD_LOGIC;
    signal Loop_VITIS_LOOP_42_1_proc_U0_ap_idle : STD_LOGIC;
    signal Loop_VITIS_LOOP_42_1_proc_U0_ap_ready : STD_LOGIC;
    signal Loop_VITIS_LOOP_42_1_proc_U0_maxpool_out_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Loop_VITIS_LOOP_42_1_proc_U0_maxpool_out_V_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_42_1_proc_U0_flatten_out_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal Loop_VITIS_LOOP_42_1_proc_U0_flatten_out_V_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_42_1_proc_U0_flatten_out_V_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_42_1_proc_U0_flatten_out_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dense_4_U0_ap_start : STD_LOGIC;
    signal dense_4_U0_ap_done : STD_LOGIC;
    signal dense_4_U0_ap_continue : STD_LOGIC;
    signal dense_4_U0_ap_idle : STD_LOGIC;
    signal dense_4_U0_ap_ready : STD_LOGIC;
    signal dense_4_U0_input_r_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dense_4_U0_input_r_ce0 : STD_LOGIC;
    signal dense_4_U0_output_r_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal dense_4_U0_output_r_ce0 : STD_LOGIC;
    signal dense_4_U0_output_r_we0 : STD_LOGIC;
    signal dense_4_U0_output_r_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal batchnorm_5_U0_ap_continue : STD_LOGIC;
    signal batchnorm_5_U0_ap_start : STD_LOGIC;
    signal batchnorm_5_U0_ap_done : STD_LOGIC;
    signal batchnorm_5_U0_ap_idle : STD_LOGIC;
    signal batchnorm_5_U0_ap_ready : STD_LOGIC;
    signal batchnorm_5_U0_input_r_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal batchnorm_5_U0_input_r_ce0 : STD_LOGIC;
    signal batchnorm_5_U0_output_r_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal batchnorm_5_U0_output_r_ce0 : STD_LOGIC;
    signal batchnorm_5_U0_output_r_we0 : STD_LOGIC;
    signal batchnorm_5_U0_output_r_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dense_output_7_U0_ap_start : STD_LOGIC;
    signal dense_output_7_U0_ap_done : STD_LOGIC;
    signal dense_output_7_U0_ap_continue : STD_LOGIC;
    signal dense_output_7_U0_ap_idle : STD_LOGIC;
    signal dense_output_7_U0_ap_ready : STD_LOGIC;
    signal dense_output_7_U0_input_r_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal dense_output_7_U0_input_r_ce0 : STD_LOGIC;
    signal dense_output_7_U0_input_r_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal dense_output_7_U0_input_r_ce1 : STD_LOGIC;
    signal dense_output_7_U0_output_r_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal dense_output_7_U0_output_r_ce0 : STD_LOGIC;
    signal dense_output_7_U0_output_r_we0 : STD_LOGIC;
    signal dense_output_7_U0_output_r_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal softmax_7_U0_ap_start : STD_LOGIC;
    signal softmax_7_U0_ap_done : STD_LOGIC;
    signal softmax_7_U0_ap_continue : STD_LOGIC;
    signal softmax_7_U0_ap_idle : STD_LOGIC;
    signal softmax_7_U0_ap_ready : STD_LOGIC;
    signal softmax_7_U0_input_r_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal softmax_7_U0_input_r_ce0 : STD_LOGIC;
    signal softmax_7_U0_output_r_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal softmax_7_U0_output_r_ce0 : STD_LOGIC;
    signal softmax_7_U0_output_r_we0 : STD_LOGIC;
    signal softmax_7_U0_output_r_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv1d_out_V_i_full_n : STD_LOGIC;
    signal conv1d_out_V_t_empty_n : STD_LOGIC;
    signal bn1_out_V_i_full_n : STD_LOGIC;
    signal bn1_out_V_t_empty_n : STD_LOGIC;
    signal maxpool_out_V_i_full_n : STD_LOGIC;
    signal maxpool_out_V_t_empty_n : STD_LOGIC;
    signal flatten_out_V_i_full_n : STD_LOGIC;
    signal flatten_out_V_t_empty_n : STD_LOGIC;
    signal dense1_out_V_i_full_n : STD_LOGIC;
    signal dense1_out_V_t_empty_n : STD_LOGIC;
    signal bn2_out_V_i_full_n : STD_LOGIC;
    signal bn2_out_V_t_empty_n : STD_LOGIC;
    signal dense_output_out_V_i_full_n : STD_LOGIC;
    signal dense_output_out_V_t_empty_n : STD_LOGIC;

    component gesture_model_conv1d_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_r_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_r_ce1 : OUT STD_LOGIC;
        input_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component gesture_model_batchnorm_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (14 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component gesture_model_maxpool1d_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_r_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_r_ce1 : OUT STD_LOGIC;
        input_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component gesture_model_Loop_VITIS_LOOP_42_1_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        maxpool_out_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        maxpool_out_V_ce0 : OUT STD_LOGIC;
        maxpool_out_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        flatten_out_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        flatten_out_V_ce0 : OUT STD_LOGIC;
        flatten_out_V_we0 : OUT STD_LOGIC;
        flatten_out_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component gesture_model_dense_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component gesture_model_batchnorm_5 IS
    port (
        ap_continue : IN STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (14 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component gesture_model_dense_output_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_r_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_r_ce1 : OUT STD_LOGIC;
        input_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component gesture_model_softmax_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component gesture_model_conv1d_out_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (14 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (14 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component gesture_model_bn1_out_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_q1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_q1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component gesture_model_maxpool_out_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component gesture_model_flatten_out_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component gesture_model_dense1_out_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (14 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (14 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component gesture_model_bn2_out_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_q1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_q1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component gesture_model_dense_output_out_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;



begin
    conv1d_out_V_U : component gesture_model_conv1d_out_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 15,
        AddressRange => 105,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => conv1d_0_U0_output_r_address0,
        i_ce0 => conv1d_0_U0_output_r_ce0,
        i_we0 => conv1d_0_U0_output_r_we0,
        i_d0 => conv1d_0_U0_output_r_d0,
        i_q0 => conv1d_out_V_i_q0,
        t_address0 => batchnorm_1_U0_input_r_address0,
        t_ce0 => batchnorm_1_U0_input_r_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv15_0,
        t_q0 => conv1d_out_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => conv1d_out_V_i_full_n,
        i_write => conv1d_0_U0_ap_done,
        t_empty_n => conv1d_out_V_t_empty_n,
        t_read => batchnorm_1_U0_ap_ready);

    bn1_out_V_U : component gesture_model_bn1_out_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 105,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => batchnorm_1_U0_output_r_address0,
        i_ce0 => batchnorm_1_U0_output_r_ce0,
        i_we0 => batchnorm_1_U0_output_r_we0,
        i_d0 => batchnorm_1_U0_output_r_d0,
        i_q0 => bn1_out_V_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => bn1_out_V_i_q1,
        t_address0 => maxpool1d_2_U0_input_r_address0,
        t_ce0 => maxpool1d_2_U0_input_r_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => bn1_out_V_t_q0,
        t_address1 => maxpool1d_2_U0_input_r_address1,
        t_ce1 => maxpool1d_2_U0_input_r_ce1,
        t_q1 => bn1_out_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => bn1_out_V_i_full_n,
        i_write => batchnorm_1_U0_ap_done,
        t_empty_n => bn1_out_V_t_empty_n,
        t_read => maxpool1d_2_U0_ap_ready);

    maxpool_out_V_U : component gesture_model_maxpool_out_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 52,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => maxpool1d_2_U0_output_r_address0,
        i_ce0 => maxpool1d_2_U0_output_r_ce0,
        i_we0 => maxpool1d_2_U0_output_r_we0,
        i_d0 => maxpool1d_2_U0_output_r_d0,
        i_q0 => maxpool_out_V_i_q0,
        t_address0 => Loop_VITIS_LOOP_42_1_proc_U0_maxpool_out_V_address0,
        t_ce0 => Loop_VITIS_LOOP_42_1_proc_U0_maxpool_out_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => maxpool_out_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => maxpool_out_V_i_full_n,
        i_write => maxpool1d_2_U0_ap_done,
        t_empty_n => maxpool_out_V_t_empty_n,
        t_read => Loop_VITIS_LOOP_42_1_proc_U0_ap_ready);

    flatten_out_V_U : component gesture_model_flatten_out_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 944,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_VITIS_LOOP_42_1_proc_U0_flatten_out_V_address0,
        i_ce0 => Loop_VITIS_LOOP_42_1_proc_U0_flatten_out_V_ce0,
        i_we0 => Loop_VITIS_LOOP_42_1_proc_U0_flatten_out_V_we0,
        i_d0 => Loop_VITIS_LOOP_42_1_proc_U0_flatten_out_V_d0,
        i_q0 => flatten_out_V_i_q0,
        t_address0 => dense_4_U0_input_r_address0,
        t_ce0 => dense_4_U0_input_r_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => flatten_out_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => flatten_out_V_i_full_n,
        i_write => Loop_VITIS_LOOP_42_1_proc_U0_ap_done,
        t_empty_n => flatten_out_V_t_empty_n,
        t_read => dense_4_U0_ap_ready);

    dense1_out_V_U : component gesture_model_dense1_out_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 15,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dense_4_U0_output_r_address0,
        i_ce0 => dense_4_U0_output_r_ce0,
        i_we0 => dense_4_U0_output_r_we0,
        i_d0 => dense_4_U0_output_r_d0,
        i_q0 => dense1_out_V_i_q0,
        t_address0 => batchnorm_5_U0_input_r_address0,
        t_ce0 => batchnorm_5_U0_input_r_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv15_0,
        t_q0 => dense1_out_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => dense1_out_V_i_full_n,
        i_write => dense_4_U0_ap_done,
        t_empty_n => dense1_out_V_t_empty_n,
        t_read => batchnorm_5_U0_ap_ready);

    bn2_out_V_U : component gesture_model_bn2_out_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => batchnorm_5_U0_output_r_address0,
        i_ce0 => batchnorm_5_U0_output_r_ce0,
        i_we0 => batchnorm_5_U0_output_r_we0,
        i_d0 => batchnorm_5_U0_output_r_d0,
        i_q0 => bn2_out_V_i_q0,
        i_address1 => ap_const_lv4_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => bn2_out_V_i_q1,
        t_address0 => dense_output_7_U0_input_r_address0,
        t_ce0 => dense_output_7_U0_input_r_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => bn2_out_V_t_q0,
        t_address1 => dense_output_7_U0_input_r_address1,
        t_ce1 => dense_output_7_U0_input_r_ce1,
        t_q1 => bn2_out_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => bn2_out_V_i_full_n,
        i_write => batchnorm_5_U0_ap_done,
        t_empty_n => bn2_out_V_t_empty_n,
        t_read => dense_output_7_U0_ap_ready);

    dense_output_out_V_U : component gesture_model_dense_output_out_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 20,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dense_output_7_U0_output_r_address0,
        i_ce0 => dense_output_7_U0_output_r_ce0,
        i_we0 => dense_output_7_U0_output_r_we0,
        i_d0 => dense_output_7_U0_output_r_d0,
        i_q0 => dense_output_out_V_i_q0,
        t_address0 => softmax_7_U0_input_r_address0,
        t_ce0 => softmax_7_U0_input_r_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => dense_output_out_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => dense_output_out_V_i_full_n,
        i_write => dense_output_7_U0_ap_done,
        t_empty_n => dense_output_out_V_t_empty_n,
        t_read => softmax_7_U0_ap_ready);

    conv1d_0_U0 : component gesture_model_conv1d_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => conv1d_0_U0_ap_start,
        ap_done => conv1d_0_U0_ap_done,
        ap_continue => conv1d_0_U0_ap_continue,
        ap_idle => conv1d_0_U0_ap_idle,
        ap_ready => conv1d_0_U0_ap_ready,
        input_r_address0 => conv1d_0_U0_input_r_address0,
        input_r_ce0 => conv1d_0_U0_input_r_ce0,
        input_r_q0 => input_r_q0,
        input_r_address1 => conv1d_0_U0_input_r_address1,
        input_r_ce1 => conv1d_0_U0_input_r_ce1,
        input_r_q1 => input_r_q1,
        output_r_address0 => conv1d_0_U0_output_r_address0,
        output_r_ce0 => conv1d_0_U0_output_r_ce0,
        output_r_we0 => conv1d_0_U0_output_r_we0,
        output_r_d0 => conv1d_0_U0_output_r_d0);

    batchnorm_1_U0 : component gesture_model_batchnorm_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => batchnorm_1_U0_ap_start,
        ap_done => batchnorm_1_U0_ap_done,
        ap_continue => batchnorm_1_U0_ap_continue,
        ap_idle => batchnorm_1_U0_ap_idle,
        ap_ready => batchnorm_1_U0_ap_ready,
        input_r_address0 => batchnorm_1_U0_input_r_address0,
        input_r_ce0 => batchnorm_1_U0_input_r_ce0,
        input_r_q0 => conv1d_out_V_t_q0,
        output_r_address0 => batchnorm_1_U0_output_r_address0,
        output_r_ce0 => batchnorm_1_U0_output_r_ce0,
        output_r_we0 => batchnorm_1_U0_output_r_we0,
        output_r_d0 => batchnorm_1_U0_output_r_d0);

    maxpool1d_2_U0 : component gesture_model_maxpool1d_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => maxpool1d_2_U0_ap_start,
        ap_done => maxpool1d_2_U0_ap_done,
        ap_continue => maxpool1d_2_U0_ap_continue,
        ap_idle => maxpool1d_2_U0_ap_idle,
        ap_ready => maxpool1d_2_U0_ap_ready,
        input_r_address0 => maxpool1d_2_U0_input_r_address0,
        input_r_ce0 => maxpool1d_2_U0_input_r_ce0,
        input_r_q0 => bn1_out_V_t_q0,
        input_r_address1 => maxpool1d_2_U0_input_r_address1,
        input_r_ce1 => maxpool1d_2_U0_input_r_ce1,
        input_r_q1 => bn1_out_V_t_q1,
        output_r_address0 => maxpool1d_2_U0_output_r_address0,
        output_r_ce0 => maxpool1d_2_U0_output_r_ce0,
        output_r_we0 => maxpool1d_2_U0_output_r_we0,
        output_r_d0 => maxpool1d_2_U0_output_r_d0);

    Loop_VITIS_LOOP_42_1_proc_U0 : component gesture_model_Loop_VITIS_LOOP_42_1_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Loop_VITIS_LOOP_42_1_proc_U0_ap_start,
        ap_done => Loop_VITIS_LOOP_42_1_proc_U0_ap_done,
        ap_continue => Loop_VITIS_LOOP_42_1_proc_U0_ap_continue,
        ap_idle => Loop_VITIS_LOOP_42_1_proc_U0_ap_idle,
        ap_ready => Loop_VITIS_LOOP_42_1_proc_U0_ap_ready,
        maxpool_out_V_address0 => Loop_VITIS_LOOP_42_1_proc_U0_maxpool_out_V_address0,
        maxpool_out_V_ce0 => Loop_VITIS_LOOP_42_1_proc_U0_maxpool_out_V_ce0,
        maxpool_out_V_q0 => maxpool_out_V_t_q0,
        flatten_out_V_address0 => Loop_VITIS_LOOP_42_1_proc_U0_flatten_out_V_address0,
        flatten_out_V_ce0 => Loop_VITIS_LOOP_42_1_proc_U0_flatten_out_V_ce0,
        flatten_out_V_we0 => Loop_VITIS_LOOP_42_1_proc_U0_flatten_out_V_we0,
        flatten_out_V_d0 => Loop_VITIS_LOOP_42_1_proc_U0_flatten_out_V_d0);

    dense_4_U0 : component gesture_model_dense_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dense_4_U0_ap_start,
        ap_done => dense_4_U0_ap_done,
        ap_continue => dense_4_U0_ap_continue,
        ap_idle => dense_4_U0_ap_idle,
        ap_ready => dense_4_U0_ap_ready,
        input_r_address0 => dense_4_U0_input_r_address0,
        input_r_ce0 => dense_4_U0_input_r_ce0,
        input_r_q0 => flatten_out_V_t_q0,
        output_r_address0 => dense_4_U0_output_r_address0,
        output_r_ce0 => dense_4_U0_output_r_ce0,
        output_r_we0 => dense_4_U0_output_r_we0,
        output_r_d0 => dense_4_U0_output_r_d0);

    batchnorm_5_U0 : component gesture_model_batchnorm_5
    port map (
        ap_continue => batchnorm_5_U0_ap_continue,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => batchnorm_5_U0_ap_start,
        ap_done => batchnorm_5_U0_ap_done,
        ap_idle => batchnorm_5_U0_ap_idle,
        ap_ready => batchnorm_5_U0_ap_ready,
        input_r_address0 => batchnorm_5_U0_input_r_address0,
        input_r_ce0 => batchnorm_5_U0_input_r_ce0,
        input_r_q0 => dense1_out_V_t_q0,
        output_r_address0 => batchnorm_5_U0_output_r_address0,
        output_r_ce0 => batchnorm_5_U0_output_r_ce0,
        output_r_we0 => batchnorm_5_U0_output_r_we0,
        output_r_d0 => batchnorm_5_U0_output_r_d0);

    dense_output_7_U0 : component gesture_model_dense_output_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dense_output_7_U0_ap_start,
        ap_done => dense_output_7_U0_ap_done,
        ap_continue => dense_output_7_U0_ap_continue,
        ap_idle => dense_output_7_U0_ap_idle,
        ap_ready => dense_output_7_U0_ap_ready,
        input_r_address0 => dense_output_7_U0_input_r_address0,
        input_r_ce0 => dense_output_7_U0_input_r_ce0,
        input_r_q0 => bn2_out_V_t_q0,
        input_r_address1 => dense_output_7_U0_input_r_address1,
        input_r_ce1 => dense_output_7_U0_input_r_ce1,
        input_r_q1 => bn2_out_V_t_q1,
        output_r_address0 => dense_output_7_U0_output_r_address0,
        output_r_ce0 => dense_output_7_U0_output_r_ce0,
        output_r_we0 => dense_output_7_U0_output_r_we0,
        output_r_d0 => dense_output_7_U0_output_r_d0);

    softmax_7_U0 : component gesture_model_softmax_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => softmax_7_U0_ap_start,
        ap_done => softmax_7_U0_ap_done,
        ap_continue => softmax_7_U0_ap_continue,
        ap_idle => softmax_7_U0_ap_idle,
        ap_ready => softmax_7_U0_ap_ready,
        input_r_address0 => softmax_7_U0_input_r_address0,
        input_r_ce0 => softmax_7_U0_input_r_ce0,
        input_r_q0 => dense_output_out_V_t_q0,
        output_r_address0 => softmax_7_U0_output_r_address0,
        output_r_ce0 => softmax_7_U0_output_r_ce0,
        output_r_we0 => softmax_7_U0_output_r_we0,
        output_r_d0 => softmax_7_U0_output_r_d0);




    Loop_VITIS_LOOP_42_1_proc_U0_ap_continue <= flatten_out_V_i_full_n;
    Loop_VITIS_LOOP_42_1_proc_U0_ap_start <= maxpool_out_V_t_empty_n;
    ap_done <= softmax_7_U0_ap_done;
    ap_idle <= (softmax_7_U0_ap_idle and maxpool1d_2_U0_ap_idle and (dense_output_out_V_t_empty_n xor ap_const_logic_1) and (bn2_out_V_t_empty_n xor ap_const_logic_1) and (dense1_out_V_t_empty_n xor ap_const_logic_1) and (flatten_out_V_t_empty_n xor ap_const_logic_1) and (maxpool_out_V_t_empty_n xor ap_const_logic_1) and (bn1_out_V_t_empty_n xor ap_const_logic_1) and (conv1d_out_V_t_empty_n xor ap_const_logic_1) and dense_output_7_U0_ap_idle and dense_4_U0_ap_idle and conv1d_0_U0_ap_idle and batchnorm_5_U0_ap_idle and batchnorm_1_U0_ap_idle and Loop_VITIS_LOOP_42_1_proc_U0_ap_idle);
    ap_ready <= conv1d_0_U0_ap_ready;
    batchnorm_1_U0_ap_continue <= bn1_out_V_i_full_n;
    batchnorm_1_U0_ap_start <= conv1d_out_V_t_empty_n;
    batchnorm_5_U0_ap_continue <= bn2_out_V_i_full_n;
    batchnorm_5_U0_ap_start <= dense1_out_V_t_empty_n;
    conv1d_0_U0_ap_continue <= conv1d_out_V_i_full_n;
    conv1d_0_U0_ap_start <= ap_start;
    dense_4_U0_ap_continue <= dense1_out_V_i_full_n;
    dense_4_U0_ap_start <= flatten_out_V_t_empty_n;
    dense_output_7_U0_ap_continue <= dense_output_out_V_i_full_n;
    dense_output_7_U0_ap_start <= bn2_out_V_t_empty_n;
    input_r_address0 <= conv1d_0_U0_input_r_address0;
    input_r_address1 <= conv1d_0_U0_input_r_address1;
    input_r_ce0 <= conv1d_0_U0_input_r_ce0;
    input_r_ce1 <= conv1d_0_U0_input_r_ce1;
    input_r_d0 <= ap_const_lv16_0;
    input_r_d1 <= ap_const_lv16_0;
    input_r_we0 <= ap_const_logic_0;
    input_r_we1 <= ap_const_logic_0;
    maxpool1d_2_U0_ap_continue <= maxpool_out_V_i_full_n;
    maxpool1d_2_U0_ap_start <= bn1_out_V_t_empty_n;
    output_r_address0 <= softmax_7_U0_output_r_address0;
    output_r_address1 <= ap_const_lv5_0;
    output_r_ce0 <= softmax_7_U0_output_r_ce0;
    output_r_ce1 <= ap_const_logic_0;
    output_r_d0 <= softmax_7_U0_output_r_d0;
    output_r_d1 <= ap_const_lv16_0;
    output_r_we0 <= softmax_7_U0_output_r_we0;
    output_r_we1 <= ap_const_logic_0;
    softmax_7_U0_ap_continue <= ap_const_logic_1;
    softmax_7_U0_ap_start <= dense_output_out_V_t_empty_n;
end behav;
