-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gesture_model is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    input_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    input_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    input_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    input_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    output_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_stream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_stream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    input_stream_TVALID : IN STD_LOGIC;
    input_stream_TREADY : OUT STD_LOGIC;
    output_stream_TVALID : OUT STD_LOGIC;
    output_stream_TREADY : IN STD_LOGIC );
end;


architecture behav of gesture_model is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "gesture_model_gesture_model,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.267652,HLS_SYN_LAT=23128,HLS_SYN_TPT=15111,HLS_SYN_MEM=38,HLS_SYN_DSP=0,HLS_SYN_FF=18241,HLS_SYN_LUT=29383,HLS_VERSION=2022_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal input_V_0_i_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal input_V_0_i_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal input_V_0_t_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal input_V_0_t_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal output_V_i_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal output_V_i_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal output_V_t_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal output_V_t_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal conv1d_out_0_V_i_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal conv1d_out_0_V_t_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal batch_norm_out_0_V_i_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal batch_norm_out_0_V_i_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal batch_norm_out_0_V_t_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal batch_norm_out_0_V_t_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal max_pool_out_0_V_i_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal max_pool_out_0_V_t_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal flatten_out_0_V_i_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal flatten_out_0_V_t_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal dense_out_0_V_i_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal dense_out_0_V_t_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal batch_norm_out_1_V_i_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal batch_norm_out_1_V_i_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal batch_norm_out_1_V_t_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal batch_norm_out_1_V_t_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal Loop_VITIS_LOOP_148_1_proc8_U0_ap_start : STD_LOGIC;
    signal Loop_VITIS_LOOP_148_1_proc8_U0_ap_done : STD_LOGIC;
    signal Loop_VITIS_LOOP_148_1_proc8_U0_ap_continue : STD_LOGIC;
    signal Loop_VITIS_LOOP_148_1_proc8_U0_ap_idle : STD_LOGIC;
    signal Loop_VITIS_LOOP_148_1_proc8_U0_ap_ready : STD_LOGIC;
    signal Loop_VITIS_LOOP_148_1_proc8_U0_input_V_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Loop_VITIS_LOOP_148_1_proc8_U0_input_V_0_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_148_1_proc8_U0_input_V_0_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_148_1_proc8_U0_input_V_0_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal Loop_VITIS_LOOP_148_1_proc8_U0_input_stream_TREADY : STD_LOGIC;
    signal conv1d_0_U0_ap_start : STD_LOGIC;
    signal conv1d_0_U0_ap_done : STD_LOGIC;
    signal conv1d_0_U0_ap_continue : STD_LOGIC;
    signal conv1d_0_U0_ap_idle : STD_LOGIC;
    signal conv1d_0_U0_ap_ready : STD_LOGIC;
    signal conv1d_0_U0_input_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv1d_0_U0_input_0_ce0 : STD_LOGIC;
    signal conv1d_0_U0_input_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv1d_0_U0_input_0_ce1 : STD_LOGIC;
    signal conv1d_0_U0_output_r_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1d_0_U0_output_r_ce0 : STD_LOGIC;
    signal conv1d_0_U0_output_r_we0 : STD_LOGIC;
    signal conv1d_0_U0_output_r_d0 : STD_LOGIC_VECTOR (22 downto 0);
    signal batch_normalization_0_U0_ap_start : STD_LOGIC;
    signal batch_normalization_0_U0_ap_done : STD_LOGIC;
    signal batch_normalization_0_U0_ap_continue : STD_LOGIC;
    signal batch_normalization_0_U0_ap_idle : STD_LOGIC;
    signal batch_normalization_0_U0_ap_ready : STD_LOGIC;
    signal batch_normalization_0_U0_input_r_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal batch_normalization_0_U0_input_r_ce0 : STD_LOGIC;
    signal batch_normalization_0_U0_output_r_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal batch_normalization_0_U0_output_r_ce0 : STD_LOGIC;
    signal batch_normalization_0_U0_output_r_we0 : STD_LOGIC;
    signal batch_normalization_0_U0_output_r_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal max_pooling1d_0_U0_ap_start : STD_LOGIC;
    signal max_pooling1d_0_U0_ap_done : STD_LOGIC;
    signal max_pooling1d_0_U0_ap_continue : STD_LOGIC;
    signal max_pooling1d_0_U0_ap_idle : STD_LOGIC;
    signal max_pooling1d_0_U0_ap_ready : STD_LOGIC;
    signal max_pooling1d_0_U0_input_r_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal max_pooling1d_0_U0_input_r_ce0 : STD_LOGIC;
    signal max_pooling1d_0_U0_input_r_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal max_pooling1d_0_U0_input_r_ce1 : STD_LOGIC;
    signal max_pooling1d_0_U0_output_r_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal max_pooling1d_0_U0_output_r_ce0 : STD_LOGIC;
    signal max_pooling1d_0_U0_output_r_we0 : STD_LOGIC;
    signal max_pooling1d_0_U0_output_r_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal Loop_VITIS_LOOP_77_1_proc_U0_ap_start : STD_LOGIC;
    signal Loop_VITIS_LOOP_77_1_proc_U0_ap_done : STD_LOGIC;
    signal Loop_VITIS_LOOP_77_1_proc_U0_ap_continue : STD_LOGIC;
    signal Loop_VITIS_LOOP_77_1_proc_U0_ap_idle : STD_LOGIC;
    signal Loop_VITIS_LOOP_77_1_proc_U0_ap_ready : STD_LOGIC;
    signal Loop_VITIS_LOOP_77_1_proc_U0_max_pool_out_0_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal Loop_VITIS_LOOP_77_1_proc_U0_max_pool_out_0_V_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_77_1_proc_U0_flatten_out_0_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal Loop_VITIS_LOOP_77_1_proc_U0_flatten_out_0_V_ce0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_77_1_proc_U0_flatten_out_0_V_we0 : STD_LOGIC;
    signal Loop_VITIS_LOOP_77_1_proc_U0_flatten_out_0_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal dense_0_U0_ap_start : STD_LOGIC;
    signal dense_0_U0_ap_done : STD_LOGIC;
    signal dense_0_U0_ap_continue : STD_LOGIC;
    signal dense_0_U0_ap_idle : STD_LOGIC;
    signal dense_0_U0_ap_ready : STD_LOGIC;
    signal dense_0_U0_input_r_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dense_0_U0_input_r_ce0 : STD_LOGIC;
    signal dense_0_U0_output_r_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal dense_0_U0_output_r_ce0 : STD_LOGIC;
    signal dense_0_U0_output_r_we0 : STD_LOGIC;
    signal dense_0_U0_output_r_d0 : STD_LOGIC_VECTOR (22 downto 0);
    signal batch_normalization_1_U0_ap_start : STD_LOGIC;
    signal batch_normalization_1_U0_ap_done : STD_LOGIC;
    signal batch_normalization_1_U0_ap_continue : STD_LOGIC;
    signal batch_normalization_1_U0_ap_idle : STD_LOGIC;
    signal batch_normalization_1_U0_ap_ready : STD_LOGIC;
    signal batch_normalization_1_U0_input_r_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal batch_normalization_1_U0_input_r_ce0 : STD_LOGIC;
    signal batch_normalization_1_U0_output_r_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal batch_normalization_1_U0_output_r_ce0 : STD_LOGIC;
    signal batch_normalization_1_U0_output_r_we0 : STD_LOGIC;
    signal batch_normalization_1_U0_output_r_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal dense_1_U0_ap_start : STD_LOGIC;
    signal dense_1_U0_ap_done : STD_LOGIC;
    signal dense_1_U0_ap_continue : STD_LOGIC;
    signal dense_1_U0_ap_idle : STD_LOGIC;
    signal dense_1_U0_ap_ready : STD_LOGIC;
    signal dense_1_U0_input_r_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal dense_1_U0_input_r_ce0 : STD_LOGIC;
    signal dense_1_U0_input_r_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal dense_1_U0_input_r_ce1 : STD_LOGIC;
    signal dense_1_U0_output_r_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal dense_1_U0_output_r_ce0 : STD_LOGIC;
    signal dense_1_U0_output_r_we0 : STD_LOGIC;
    signal dense_1_U0_output_r_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal dense_1_U0_output_r_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal dense_1_U0_output_r_ce1 : STD_LOGIC;
    signal Loop_VITIS_LOOP_171_3_proc9_U0_ap_start : STD_LOGIC;
    signal Loop_VITIS_LOOP_171_3_proc9_U0_ap_done : STD_LOGIC;
    signal Loop_VITIS_LOOP_171_3_proc9_U0_ap_continue : STD_LOGIC;
    signal Loop_VITIS_LOOP_171_3_proc9_U0_ap_idle : STD_LOGIC;
    signal Loop_VITIS_LOOP_171_3_proc9_U0_ap_ready : STD_LOGIC;
    signal Loop_VITIS_LOOP_171_3_proc9_U0_output_stream_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_VITIS_LOOP_171_3_proc9_U0_output_stream_TVALID : STD_LOGIC;
    signal Loop_VITIS_LOOP_171_3_proc9_U0_output_stream_TKEEP : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_171_3_proc9_U0_output_stream_TSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_171_3_proc9_U0_output_stream_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_VITIS_LOOP_171_3_proc9_U0_output_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal Loop_VITIS_LOOP_171_3_proc9_U0_output_V_ce0 : STD_LOGIC;
    signal input_V_0_i_full_n : STD_LOGIC;
    signal input_V_0_t_empty_n : STD_LOGIC;
    signal conv1d_out_0_V_i_full_n : STD_LOGIC;
    signal conv1d_out_0_V_t_empty_n : STD_LOGIC;
    signal batch_norm_out_0_V_i_full_n : STD_LOGIC;
    signal batch_norm_out_0_V_t_empty_n : STD_LOGIC;
    signal max_pool_out_0_V_i_full_n : STD_LOGIC;
    signal max_pool_out_0_V_t_empty_n : STD_LOGIC;
    signal flatten_out_0_V_i_full_n : STD_LOGIC;
    signal flatten_out_0_V_t_empty_n : STD_LOGIC;
    signal dense_out_0_V_i_full_n : STD_LOGIC;
    signal dense_out_0_V_t_empty_n : STD_LOGIC;
    signal batch_norm_out_1_V_i_full_n : STD_LOGIC;
    signal batch_norm_out_1_V_t_empty_n : STD_LOGIC;
    signal output_V_i_full_n : STD_LOGIC;
    signal output_V_t_empty_n : STD_LOGIC;

    component gesture_model_Loop_VITIS_LOOP_148_1_proc8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_stream_TVALID : IN STD_LOGIC;
        input_V_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_V_0_ce0 : OUT STD_LOGIC;
        input_V_0_we0 : OUT STD_LOGIC;
        input_V_0_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        input_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        input_stream_TREADY : OUT STD_LOGIC;
        input_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        input_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        input_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component gesture_model_conv1d_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_0_ce0 : OUT STD_LOGIC;
        input_0_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
        input_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_0_ce1 : OUT STD_LOGIC;
        input_0_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component gesture_model_batch_normalization_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (22 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component gesture_model_max_pooling1d_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
        input_r_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_r_ce1 : OUT STD_LOGIC;
        input_r_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component gesture_model_Loop_VITIS_LOOP_77_1_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        max_pool_out_0_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        max_pool_out_0_V_ce0 : OUT STD_LOGIC;
        max_pool_out_0_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
        flatten_out_0_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        flatten_out_0_V_ce0 : OUT STD_LOGIC;
        flatten_out_0_V_we0 : OUT STD_LOGIC;
        flatten_out_0_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component gesture_model_dense_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component gesture_model_batch_normalization_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (22 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component gesture_model_dense_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
        input_r_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_r_ce1 : OUT STD_LOGIC;
        input_r_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        output_r_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
        output_r_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        output_r_ce1 : OUT STD_LOGIC;
        output_r_q1 : IN STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component gesture_model_Loop_VITIS_LOOP_171_3_proc9 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_stream_TREADY : IN STD_LOGIC;
        output_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_stream_TVALID : OUT STD_LOGIC;
        output_stream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_stream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        output_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        output_V_ce0 : OUT STD_LOGIC;
        output_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component gesture_model_input_V_0_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_q1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_q1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component gesture_model_output_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_q1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_q1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component gesture_model_conv1d_out_0_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (22 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (22 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (22 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (22 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component gesture_model_batch_norm_out_0_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_q1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_q1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component gesture_model_max_pool_out_0_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component gesture_model_dense_out_0_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (22 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (22 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (22 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (22 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component gesture_model_batch_norm_out_1_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_q1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_q1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component gesture_model_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    input_V_0_U : component gesture_model_input_V_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 120,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_148_1_proc8_U0_input_V_0_address0,
        i_ce0 => Loop_VITIS_LOOP_148_1_proc8_U0_input_V_0_ce0,
        i_we0 => Loop_VITIS_LOOP_148_1_proc8_U0_input_V_0_we0,
        i_d0 => Loop_VITIS_LOOP_148_1_proc8_U0_input_V_0_d0,
        i_q0 => input_V_0_i_q0,
        i_address1 => ap_const_lv7_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => input_V_0_i_q1,
        t_address0 => conv1d_0_U0_input_0_address0,
        t_ce0 => conv1d_0_U0_input_0_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv24_0,
        t_q0 => input_V_0_t_q0,
        t_address1 => conv1d_0_U0_input_0_address1,
        t_ce1 => conv1d_0_U0_input_0_ce1,
        t_q1 => input_V_0_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => input_V_0_i_full_n,
        i_write => Loop_VITIS_LOOP_148_1_proc8_U0_ap_done,
        t_empty_n => input_V_0_t_empty_n,
        t_read => conv1d_0_U0_ap_ready);

    output_V_U : component gesture_model_output_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 20,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => dense_1_U0_output_r_address0,
        i_ce0 => dense_1_U0_output_r_ce0,
        i_we0 => dense_1_U0_output_r_we0,
        i_d0 => dense_1_U0_output_r_d0,
        i_q0 => output_V_i_q0,
        i_address1 => dense_1_U0_output_r_address1,
        i_ce1 => dense_1_U0_output_r_ce1,
        i_q1 => output_V_i_q1,
        t_address0 => Loop_VITIS_LOOP_171_3_proc9_U0_output_V_address0,
        t_ce0 => Loop_VITIS_LOOP_171_3_proc9_U0_output_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv24_0,
        t_q0 => output_V_t_q0,
        t_address1 => ap_const_lv5_0,
        t_ce1 => ap_const_logic_0,
        t_q1 => output_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => output_V_i_full_n,
        i_write => dense_1_U0_ap_done,
        t_empty_n => output_V_t_empty_n,
        t_read => Loop_VITIS_LOOP_171_3_proc9_U0_ap_ready);

    conv1d_out_0_V_U : component gesture_model_conv1d_out_0_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 23,
        AddressRange => 1888,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => conv1d_0_U0_output_r_address0,
        i_ce0 => conv1d_0_U0_output_r_ce0,
        i_we0 => conv1d_0_U0_output_r_we0,
        i_d0 => conv1d_0_U0_output_r_d0,
        i_q0 => conv1d_out_0_V_i_q0,
        t_address0 => batch_normalization_0_U0_input_r_address0,
        t_ce0 => batch_normalization_0_U0_input_r_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv23_0,
        t_q0 => conv1d_out_0_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => conv1d_out_0_V_i_full_n,
        i_write => conv1d_0_U0_ap_done,
        t_empty_n => conv1d_out_0_V_t_empty_n,
        t_read => batch_normalization_0_U0_ap_ready);

    batch_norm_out_0_V_U : component gesture_model_batch_norm_out_0_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 1888,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => batch_normalization_0_U0_output_r_address0,
        i_ce0 => batch_normalization_0_U0_output_r_ce0,
        i_we0 => batch_normalization_0_U0_output_r_we0,
        i_d0 => batch_normalization_0_U0_output_r_d0,
        i_q0 => batch_norm_out_0_V_i_q0,
        i_address1 => ap_const_lv11_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => batch_norm_out_0_V_i_q1,
        t_address0 => max_pooling1d_0_U0_input_r_address0,
        t_ce0 => max_pooling1d_0_U0_input_r_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv24_0,
        t_q0 => batch_norm_out_0_V_t_q0,
        t_address1 => max_pooling1d_0_U0_input_r_address1,
        t_ce1 => max_pooling1d_0_U0_input_r_ce1,
        t_q1 => batch_norm_out_0_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => batch_norm_out_0_V_i_full_n,
        i_write => batch_normalization_0_U0_ap_done,
        t_empty_n => batch_norm_out_0_V_t_empty_n,
        t_read => max_pooling1d_0_U0_ap_ready);

    max_pool_out_0_V_U : component gesture_model_max_pool_out_0_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 944,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => max_pooling1d_0_U0_output_r_address0,
        i_ce0 => max_pooling1d_0_U0_output_r_ce0,
        i_we0 => max_pooling1d_0_U0_output_r_we0,
        i_d0 => max_pooling1d_0_U0_output_r_d0,
        i_q0 => max_pool_out_0_V_i_q0,
        t_address0 => Loop_VITIS_LOOP_77_1_proc_U0_max_pool_out_0_V_address0,
        t_ce0 => Loop_VITIS_LOOP_77_1_proc_U0_max_pool_out_0_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv24_0,
        t_q0 => max_pool_out_0_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => max_pool_out_0_V_i_full_n,
        i_write => max_pooling1d_0_U0_ap_done,
        t_empty_n => max_pool_out_0_V_t_empty_n,
        t_read => Loop_VITIS_LOOP_77_1_proc_U0_ap_ready);

    flatten_out_0_V_U : component gesture_model_max_pool_out_0_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 944,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Loop_VITIS_LOOP_77_1_proc_U0_flatten_out_0_V_address0,
        i_ce0 => Loop_VITIS_LOOP_77_1_proc_U0_flatten_out_0_V_ce0,
        i_we0 => Loop_VITIS_LOOP_77_1_proc_U0_flatten_out_0_V_we0,
        i_d0 => Loop_VITIS_LOOP_77_1_proc_U0_flatten_out_0_V_d0,
        i_q0 => flatten_out_0_V_i_q0,
        t_address0 => dense_0_U0_input_r_address0,
        t_ce0 => dense_0_U0_input_r_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv24_0,
        t_q0 => flatten_out_0_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => flatten_out_0_V_i_full_n,
        i_write => Loop_VITIS_LOOP_77_1_proc_U0_ap_done,
        t_empty_n => flatten_out_0_V_t_empty_n,
        t_read => dense_0_U0_ap_ready);

    dense_out_0_V_U : component gesture_model_dense_out_0_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 23,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => dense_0_U0_output_r_address0,
        i_ce0 => dense_0_U0_output_r_ce0,
        i_we0 => dense_0_U0_output_r_we0,
        i_d0 => dense_0_U0_output_r_d0,
        i_q0 => dense_out_0_V_i_q0,
        t_address0 => batch_normalization_1_U0_input_r_address0,
        t_ce0 => batch_normalization_1_U0_input_r_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv23_0,
        t_q0 => dense_out_0_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => dense_out_0_V_i_full_n,
        i_write => dense_0_U0_ap_done,
        t_empty_n => dense_out_0_V_t_empty_n,
        t_read => batch_normalization_1_U0_ap_ready);

    batch_norm_out_1_V_U : component gesture_model_batch_norm_out_1_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => batch_normalization_1_U0_output_r_address0,
        i_ce0 => batch_normalization_1_U0_output_r_ce0,
        i_we0 => batch_normalization_1_U0_output_r_we0,
        i_d0 => batch_normalization_1_U0_output_r_d0,
        i_q0 => batch_norm_out_1_V_i_q0,
        i_address1 => ap_const_lv4_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => batch_norm_out_1_V_i_q1,
        t_address0 => dense_1_U0_input_r_address0,
        t_ce0 => dense_1_U0_input_r_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv24_0,
        t_q0 => batch_norm_out_1_V_t_q0,
        t_address1 => dense_1_U0_input_r_address1,
        t_ce1 => dense_1_U0_input_r_ce1,
        t_q1 => batch_norm_out_1_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => batch_norm_out_1_V_i_full_n,
        i_write => batch_normalization_1_U0_ap_done,
        t_empty_n => batch_norm_out_1_V_t_empty_n,
        t_read => dense_1_U0_ap_ready);

    control_s_axi_U : component gesture_model_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    Loop_VITIS_LOOP_148_1_proc8_U0 : component gesture_model_Loop_VITIS_LOOP_148_1_proc8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_VITIS_LOOP_148_1_proc8_U0_ap_start,
        ap_done => Loop_VITIS_LOOP_148_1_proc8_U0_ap_done,
        ap_continue => Loop_VITIS_LOOP_148_1_proc8_U0_ap_continue,
        ap_idle => Loop_VITIS_LOOP_148_1_proc8_U0_ap_idle,
        ap_ready => Loop_VITIS_LOOP_148_1_proc8_U0_ap_ready,
        input_stream_TVALID => input_stream_TVALID,
        input_V_0_address0 => Loop_VITIS_LOOP_148_1_proc8_U0_input_V_0_address0,
        input_V_0_ce0 => Loop_VITIS_LOOP_148_1_proc8_U0_input_V_0_ce0,
        input_V_0_we0 => Loop_VITIS_LOOP_148_1_proc8_U0_input_V_0_we0,
        input_V_0_d0 => Loop_VITIS_LOOP_148_1_proc8_U0_input_V_0_d0,
        input_stream_TDATA => input_stream_TDATA,
        input_stream_TREADY => Loop_VITIS_LOOP_148_1_proc8_U0_input_stream_TREADY,
        input_stream_TKEEP => input_stream_TKEEP,
        input_stream_TSTRB => input_stream_TSTRB,
        input_stream_TLAST => input_stream_TLAST);

    conv1d_0_U0 : component gesture_model_conv1d_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => conv1d_0_U0_ap_start,
        ap_done => conv1d_0_U0_ap_done,
        ap_continue => conv1d_0_U0_ap_continue,
        ap_idle => conv1d_0_U0_ap_idle,
        ap_ready => conv1d_0_U0_ap_ready,
        input_0_address0 => conv1d_0_U0_input_0_address0,
        input_0_ce0 => conv1d_0_U0_input_0_ce0,
        input_0_q0 => input_V_0_t_q0,
        input_0_address1 => conv1d_0_U0_input_0_address1,
        input_0_ce1 => conv1d_0_U0_input_0_ce1,
        input_0_q1 => input_V_0_t_q1,
        output_r_address0 => conv1d_0_U0_output_r_address0,
        output_r_ce0 => conv1d_0_U0_output_r_ce0,
        output_r_we0 => conv1d_0_U0_output_r_we0,
        output_r_d0 => conv1d_0_U0_output_r_d0);

    batch_normalization_0_U0 : component gesture_model_batch_normalization_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => batch_normalization_0_U0_ap_start,
        ap_done => batch_normalization_0_U0_ap_done,
        ap_continue => batch_normalization_0_U0_ap_continue,
        ap_idle => batch_normalization_0_U0_ap_idle,
        ap_ready => batch_normalization_0_U0_ap_ready,
        input_r_address0 => batch_normalization_0_U0_input_r_address0,
        input_r_ce0 => batch_normalization_0_U0_input_r_ce0,
        input_r_q0 => conv1d_out_0_V_t_q0,
        output_r_address0 => batch_normalization_0_U0_output_r_address0,
        output_r_ce0 => batch_normalization_0_U0_output_r_ce0,
        output_r_we0 => batch_normalization_0_U0_output_r_we0,
        output_r_d0 => batch_normalization_0_U0_output_r_d0);

    max_pooling1d_0_U0 : component gesture_model_max_pooling1d_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => max_pooling1d_0_U0_ap_start,
        ap_done => max_pooling1d_0_U0_ap_done,
        ap_continue => max_pooling1d_0_U0_ap_continue,
        ap_idle => max_pooling1d_0_U0_ap_idle,
        ap_ready => max_pooling1d_0_U0_ap_ready,
        input_r_address0 => max_pooling1d_0_U0_input_r_address0,
        input_r_ce0 => max_pooling1d_0_U0_input_r_ce0,
        input_r_q0 => batch_norm_out_0_V_t_q0,
        input_r_address1 => max_pooling1d_0_U0_input_r_address1,
        input_r_ce1 => max_pooling1d_0_U0_input_r_ce1,
        input_r_q1 => batch_norm_out_0_V_t_q1,
        output_r_address0 => max_pooling1d_0_U0_output_r_address0,
        output_r_ce0 => max_pooling1d_0_U0_output_r_ce0,
        output_r_we0 => max_pooling1d_0_U0_output_r_we0,
        output_r_d0 => max_pooling1d_0_U0_output_r_d0);

    Loop_VITIS_LOOP_77_1_proc_U0 : component gesture_model_Loop_VITIS_LOOP_77_1_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_VITIS_LOOP_77_1_proc_U0_ap_start,
        ap_done => Loop_VITIS_LOOP_77_1_proc_U0_ap_done,
        ap_continue => Loop_VITIS_LOOP_77_1_proc_U0_ap_continue,
        ap_idle => Loop_VITIS_LOOP_77_1_proc_U0_ap_idle,
        ap_ready => Loop_VITIS_LOOP_77_1_proc_U0_ap_ready,
        max_pool_out_0_V_address0 => Loop_VITIS_LOOP_77_1_proc_U0_max_pool_out_0_V_address0,
        max_pool_out_0_V_ce0 => Loop_VITIS_LOOP_77_1_proc_U0_max_pool_out_0_V_ce0,
        max_pool_out_0_V_q0 => max_pool_out_0_V_t_q0,
        flatten_out_0_V_address0 => Loop_VITIS_LOOP_77_1_proc_U0_flatten_out_0_V_address0,
        flatten_out_0_V_ce0 => Loop_VITIS_LOOP_77_1_proc_U0_flatten_out_0_V_ce0,
        flatten_out_0_V_we0 => Loop_VITIS_LOOP_77_1_proc_U0_flatten_out_0_V_we0,
        flatten_out_0_V_d0 => Loop_VITIS_LOOP_77_1_proc_U0_flatten_out_0_V_d0);

    dense_0_U0 : component gesture_model_dense_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => dense_0_U0_ap_start,
        ap_done => dense_0_U0_ap_done,
        ap_continue => dense_0_U0_ap_continue,
        ap_idle => dense_0_U0_ap_idle,
        ap_ready => dense_0_U0_ap_ready,
        input_r_address0 => dense_0_U0_input_r_address0,
        input_r_ce0 => dense_0_U0_input_r_ce0,
        input_r_q0 => flatten_out_0_V_t_q0,
        output_r_address0 => dense_0_U0_output_r_address0,
        output_r_ce0 => dense_0_U0_output_r_ce0,
        output_r_we0 => dense_0_U0_output_r_we0,
        output_r_d0 => dense_0_U0_output_r_d0);

    batch_normalization_1_U0 : component gesture_model_batch_normalization_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => batch_normalization_1_U0_ap_start,
        ap_done => batch_normalization_1_U0_ap_done,
        ap_continue => batch_normalization_1_U0_ap_continue,
        ap_idle => batch_normalization_1_U0_ap_idle,
        ap_ready => batch_normalization_1_U0_ap_ready,
        input_r_address0 => batch_normalization_1_U0_input_r_address0,
        input_r_ce0 => batch_normalization_1_U0_input_r_ce0,
        input_r_q0 => dense_out_0_V_t_q0,
        output_r_address0 => batch_normalization_1_U0_output_r_address0,
        output_r_ce0 => batch_normalization_1_U0_output_r_ce0,
        output_r_we0 => batch_normalization_1_U0_output_r_we0,
        output_r_d0 => batch_normalization_1_U0_output_r_d0);

    dense_1_U0 : component gesture_model_dense_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => dense_1_U0_ap_start,
        ap_done => dense_1_U0_ap_done,
        ap_continue => dense_1_U0_ap_continue,
        ap_idle => dense_1_U0_ap_idle,
        ap_ready => dense_1_U0_ap_ready,
        input_r_address0 => dense_1_U0_input_r_address0,
        input_r_ce0 => dense_1_U0_input_r_ce0,
        input_r_q0 => batch_norm_out_1_V_t_q0,
        input_r_address1 => dense_1_U0_input_r_address1,
        input_r_ce1 => dense_1_U0_input_r_ce1,
        input_r_q1 => batch_norm_out_1_V_t_q1,
        output_r_address0 => dense_1_U0_output_r_address0,
        output_r_ce0 => dense_1_U0_output_r_ce0,
        output_r_we0 => dense_1_U0_output_r_we0,
        output_r_d0 => dense_1_U0_output_r_d0,
        output_r_q0 => output_V_i_q0,
        output_r_address1 => dense_1_U0_output_r_address1,
        output_r_ce1 => dense_1_U0_output_r_ce1,
        output_r_q1 => output_V_i_q1);

    Loop_VITIS_LOOP_171_3_proc9_U0 : component gesture_model_Loop_VITIS_LOOP_171_3_proc9
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_VITIS_LOOP_171_3_proc9_U0_ap_start,
        ap_done => Loop_VITIS_LOOP_171_3_proc9_U0_ap_done,
        ap_continue => Loop_VITIS_LOOP_171_3_proc9_U0_ap_continue,
        ap_idle => Loop_VITIS_LOOP_171_3_proc9_U0_ap_idle,
        ap_ready => Loop_VITIS_LOOP_171_3_proc9_U0_ap_ready,
        output_stream_TREADY => output_stream_TREADY,
        output_stream_TDATA => Loop_VITIS_LOOP_171_3_proc9_U0_output_stream_TDATA,
        output_stream_TVALID => Loop_VITIS_LOOP_171_3_proc9_U0_output_stream_TVALID,
        output_stream_TKEEP => Loop_VITIS_LOOP_171_3_proc9_U0_output_stream_TKEEP,
        output_stream_TSTRB => Loop_VITIS_LOOP_171_3_proc9_U0_output_stream_TSTRB,
        output_stream_TLAST => Loop_VITIS_LOOP_171_3_proc9_U0_output_stream_TLAST,
        output_V_address0 => Loop_VITIS_LOOP_171_3_proc9_U0_output_V_address0,
        output_V_ce0 => Loop_VITIS_LOOP_171_3_proc9_U0_output_V_ce0,
        output_V_q0 => output_V_t_q0);




    Loop_VITIS_LOOP_148_1_proc8_U0_ap_continue <= input_V_0_i_full_n;
    Loop_VITIS_LOOP_148_1_proc8_U0_ap_start <= ap_start;
    Loop_VITIS_LOOP_171_3_proc9_U0_ap_continue <= ap_const_logic_1;
    Loop_VITIS_LOOP_171_3_proc9_U0_ap_start <= output_V_t_empty_n;
    Loop_VITIS_LOOP_77_1_proc_U0_ap_continue <= flatten_out_0_V_i_full_n;
    Loop_VITIS_LOOP_77_1_proc_U0_ap_start <= max_pool_out_0_V_t_empty_n;
    ap_done <= Loop_VITIS_LOOP_171_3_proc9_U0_ap_done;
    ap_idle <= (max_pooling1d_0_U0_ap_idle and (output_V_t_empty_n xor ap_const_logic_1) and (batch_norm_out_1_V_t_empty_n xor ap_const_logic_1) and (dense_out_0_V_t_empty_n xor ap_const_logic_1) and (flatten_out_0_V_t_empty_n xor ap_const_logic_1) and (max_pool_out_0_V_t_empty_n xor ap_const_logic_1) and (batch_norm_out_0_V_t_empty_n xor ap_const_logic_1) and (conv1d_out_0_V_t_empty_n xor ap_const_logic_1) and (input_V_0_t_empty_n xor ap_const_logic_1) and dense_1_U0_ap_idle and dense_0_U0_ap_idle and conv1d_0_U0_ap_idle and batch_normalization_1_U0_ap_idle and batch_normalization_0_U0_ap_idle and Loop_VITIS_LOOP_77_1_proc_U0_ap_idle and Loop_VITIS_LOOP_171_3_proc9_U0_ap_idle and Loop_VITIS_LOOP_148_1_proc8_U0_ap_idle);
    ap_ready <= Loop_VITIS_LOOP_148_1_proc8_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    batch_normalization_0_U0_ap_continue <= batch_norm_out_0_V_i_full_n;
    batch_normalization_0_U0_ap_start <= conv1d_out_0_V_t_empty_n;
    batch_normalization_1_U0_ap_continue <= batch_norm_out_1_V_i_full_n;
    batch_normalization_1_U0_ap_start <= dense_out_0_V_t_empty_n;
    conv1d_0_U0_ap_continue <= conv1d_out_0_V_i_full_n;
    conv1d_0_U0_ap_start <= input_V_0_t_empty_n;
    dense_0_U0_ap_continue <= dense_out_0_V_i_full_n;
    dense_0_U0_ap_start <= flatten_out_0_V_t_empty_n;
    dense_1_U0_ap_continue <= output_V_i_full_n;
    dense_1_U0_ap_start <= batch_norm_out_1_V_t_empty_n;
    input_stream_TREADY <= Loop_VITIS_LOOP_148_1_proc8_U0_input_stream_TREADY;
    max_pooling1d_0_U0_ap_continue <= max_pool_out_0_V_i_full_n;
    max_pooling1d_0_U0_ap_start <= batch_norm_out_0_V_t_empty_n;
    output_stream_TDATA <= Loop_VITIS_LOOP_171_3_proc9_U0_output_stream_TDATA;
    output_stream_TKEEP <= Loop_VITIS_LOOP_171_3_proc9_U0_output_stream_TKEEP;
    output_stream_TLAST <= Loop_VITIS_LOOP_171_3_proc9_U0_output_stream_TLAST;
    output_stream_TSTRB <= Loop_VITIS_LOOP_171_3_proc9_U0_output_stream_TSTRB;
    output_stream_TVALID <= Loop_VITIS_LOOP_171_3_proc9_U0_output_stream_TVALID;
end behav;
