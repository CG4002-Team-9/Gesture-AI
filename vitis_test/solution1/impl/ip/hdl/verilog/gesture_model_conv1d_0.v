// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gesture_model_conv1d_0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [6:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [6:0] input_r_address1;
output   input_r_ce1;
input  [15:0] input_r_q1;
output  [6:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [14:0] output_r_d0;

reg ap_idle;
reg[6:0] input_r_address0;
reg input_r_ce0;
reg[6:0] input_r_address1;
reg input_r_ce1;
reg output_r_ce0;
reg output_r_we0;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state14_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_subdone;
reg   [0:0] icmp_ln14_reg_1221;
reg    ap_condition_exit_pp0_iter0_stage5;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_subdone;
reg  signed [15:0] reg_296;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state10_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state11_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state12_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
reg    ap_done_reg;
reg    ap_block_pp0_stage6_11001;
reg  signed [15:0] reg_301;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state13_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg  signed [15:0] reg_306;
wire    ap_block_pp0_stage5_11001;
wire    ap_block_pp0_stage7_11001;
reg  signed [15:0] reg_311;
reg  signed [15:0] reg_315;
reg   [6:0] i_5_reg_1203;
wire   [0:0] icmp_ln14_fu_328_p2;
wire   [63:0] trunc_ln18_cast_fu_340_p1;
reg   [63:0] trunc_ln18_cast_reg_1225;
reg   [63:0] trunc_ln18_cast_reg_1225_pp0_iter1_reg;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln1271_1_fu_345_p1;
wire   [63:0] zext_ln1271_2_fu_360_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln1271_5_fu_370_p1;
wire   [63:0] zext_ln1271_3_fu_384_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln1271_7_fu_394_p1;
wire   [63:0] zext_ln1271_4_fu_408_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln1271_9_fu_418_p1;
wire   [63:0] zext_ln1271_6_fu_432_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln1271_11_fu_442_p1;
wire   [63:0] zext_ln1271_8_fu_477_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln1271_12_fu_487_p1;
wire   [63:0] zext_ln1271_10_fu_518_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln1271_14_fu_528_p1;
wire   [63:0] zext_ln1271_13_fu_687_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln1271_15_fu_697_p1;
reg   [6:0] i_fu_142;
wire   [6:0] add_ln1271_fu_334_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_i_5;
wire   [6:0] add_ln1271_1_fu_355_p2;
wire   [6:0] add_ln1271_4_fu_365_p2;
wire   [6:0] add_ln1271_2_fu_379_p2;
wire   [6:0] add_ln1271_6_fu_389_p2;
wire   [6:0] add_ln1271_3_fu_403_p2;
wire   [6:0] add_ln1271_8_fu_413_p2;
wire   [6:0] add_ln1271_5_fu_427_p2;
wire   [6:0] add_ln1271_10_fu_437_p2;
wire  signed [21:0] grp_fu_1107_p2;
wire   [13:0] trunc_ln_fu_447_p4;
wire  signed [21:0] tmp_fu_456_p3;
wire   [6:0] add_ln1271_7_fu_472_p2;
wire   [6:0] add_ln1271_11_fu_482_p2;
wire  signed [23:0] grp_fu_1114_p3;
wire   [15:0] tmp_s_fu_492_p4;
wire   [6:0] add_ln1271_9_fu_513_p2;
wire   [6:0] add_ln1271_13_fu_523_p2;
wire  signed [23:0] grp_fu_1123_p3;
wire   [15:0] tmp_26_fu_533_p4;
wire   [21:0] shl_ln_fu_550_p3;
wire  signed [22:0] sext_ln1273_3_fu_558_p1;
wire   [16:0] shl_ln1273_1_fu_568_p3;
wire   [22:0] sub_ln1273_fu_562_p2;
wire  signed [22:0] sext_ln1273_4_fu_576_p1;
wire   [22:0] sub_ln1273_1_fu_580_p2;
wire   [23:0] and_ln838_s_fu_542_p3;
wire  signed [23:0] sext_ln813_2_fu_586_p1;
wire   [23:0] add_ln1347_17_fu_590_p2;
wire   [15:0] tmp_27_fu_596_p4;
wire   [20:0] shl_ln1273_2_fu_614_p3;
wire  signed [21:0] sext_ln1273_5_fu_622_p1;
wire   [16:0] shl_ln1273_3_fu_632_p3;
wire   [21:0] sub_ln1273_2_fu_626_p2;
wire  signed [21:0] sext_ln1273_6_fu_640_p1;
wire   [21:0] sub_ln1273_3_fu_644_p2;
wire   [23:0] and_ln838_14_fu_606_p3;
wire  signed [23:0] sext_ln813_3_fu_650_p1;
wire   [23:0] add_ln1347_18_fu_654_p2;
wire   [15:0] tmp_28_fu_660_p4;
wire   [6:0] add_ln1271_12_fu_682_p2;
wire   [6:0] add_ln1271_14_fu_692_p2;
wire  signed [23:0] tmp_29_fu_702_p1;
wire   [23:0] grp_fu_1132_p3;
wire   [15:0] tmp_29_fu_702_p4;
wire   [19:0] shl_ln1273_4_fu_719_p3;
wire   [17:0] shl_ln1273_5_fu_731_p3;
wire  signed [20:0] sext_ln1273_8_fu_727_p1;
wire  signed [20:0] sext_ln1273_9_fu_739_p1;
wire   [20:0] add_ln1273_fu_743_p2;
wire   [23:0] and_ln838_16_fu_711_p3;
wire  signed [23:0] sext_ln813_4_fu_749_p1;
wire   [23:0] add_ln1347_20_fu_753_p2;
wire   [15:0] tmp_30_fu_759_p4;
wire  signed [23:0] grp_fu_1141_p3;
wire   [15:0] tmp_31_fu_781_p4;
wire   [19:0] shl_ln1273_6_fu_798_p3;
wire  signed [20:0] sext_ln1273_11_fu_806_p1;
wire   [17:0] shl_ln1273_7_fu_816_p3;
wire   [20:0] sub_ln1273_4_fu_810_p2;
wire  signed [20:0] sext_ln1273_12_fu_824_p1;
wire   [20:0] sub_ln1273_5_fu_828_p2;
wire   [23:0] and_ln838_18_fu_790_p3;
wire  signed [23:0] sext_ln813_6_fu_834_p1;
wire   [23:0] add_ln1347_22_fu_838_p2;
wire   [15:0] tmp_32_fu_844_p4;
wire  signed [23:0] grp_fu_1150_p3;
wire   [15:0] tmp_33_fu_866_p4;
wire  signed [15:0] sext_ln1273_14_fu_883_p0;
wire  signed [15:0] shl_ln1273_8_fu_887_p1;
wire   [18:0] shl_ln1273_8_fu_887_p3;
wire  signed [19:0] sext_ln1273_15_fu_895_p1;
wire   [19:0] sub_ln1273_6_fu_899_p2;
wire  signed [19:0] sext_ln1273_14_fu_883_p1;
wire   [19:0] sub_ln1273_7_fu_905_p2;
wire   [23:0] and_ln838_20_fu_875_p3;
wire  signed [23:0] sext_ln813_8_fu_911_p1;
wire   [23:0] add_ln1347_24_fu_915_p2;
wire   [15:0] tmp_34_fu_921_p4;
wire  signed [23:0] grp_fu_1159_p3;
wire   [15:0] tmp_35_fu_943_p4;
wire  signed [23:0] grp_fu_1168_p3;
wire   [15:0] tmp_36_fu_964_p4;
wire   [20:0] shl_ln1273_9_fu_981_p3;
wire  signed [21:0] sext_ln1273_18_fu_989_p1;
wire   [17:0] shl_ln1273_s_fu_999_p3;
wire   [21:0] sub_ln1273_8_fu_993_p2;
wire  signed [21:0] sext_ln1273_19_fu_1007_p1;
wire   [21:0] sub_ln1273_9_fu_1011_p2;
wire   [23:0] and_ln838_23_fu_973_p3;
wire  signed [23:0] sext_ln813_11_fu_1017_p1;
wire   [23:0] add_ln1347_27_fu_1021_p2;
wire   [15:0] tmp_37_fu_1027_p4;
wire  signed [23:0] grp_fu_1177_p3;
wire   [15:0] tmp_38_fu_1045_p4;
wire  signed [23:0] grp_fu_1186_p3;
wire   [15:0] trunc_ln818_2_fu_1062_p4;
wire   [14:0] trunc_ln3_fu_1071_p4;
wire   [15:0] add_ln813_fu_1080_p2;
wire   [0:0] icmp_ln1649_fu_1092_p2;
wire   [14:0] add_ln1649_fu_1086_p2;
wire   [4:0] grp_fu_1107_p1;
wire   [6:0] grp_fu_1114_p1;
wire  signed [6:0] grp_fu_1123_p1;
wire  signed [23:0] grp_fu_1123_p2;
wire  signed [7:0] grp_fu_1132_p1;
wire   [23:0] grp_fu_1132_p2;
wire   [4:0] grp_fu_1141_p1;
wire  signed [23:0] grp_fu_1141_p2;
wire   [5:0] grp_fu_1150_p1;
wire  signed [23:0] grp_fu_1150_p2;
wire  signed [6:0] grp_fu_1159_p1;
wire  signed [23:0] grp_fu_1159_p2;
wire   [5:0] grp_fu_1168_p1;
wire  signed [23:0] grp_fu_1168_p2;
wire  signed [6:0] grp_fu_1177_p1;
wire  signed [23:0] grp_fu_1177_p2;
wire  signed [6:0] grp_fu_1186_p1;
wire  signed [23:0] grp_fu_1186_p2;
reg    grp_fu_1107_ce;
reg    grp_fu_1114_ce;
reg    grp_fu_1123_ce;
reg    grp_fu_1132_ce;
reg    grp_fu_1141_ce;
reg    grp_fu_1150_ce;
reg    grp_fu_1159_ce;
reg    grp_fu_1168_ce;
reg    grp_fu_1177_ce;
reg    grp_fu_1186_ce;
wire    ap_continue_int;
reg    ap_done_int;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_348;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

gesture_model_mul_mul_16s_5ns_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 22 ))
mul_mul_16s_5ns_22_4_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(input_r_q1),
    .din1(grp_fu_1107_p1),
    .ce(grp_fu_1107_ce),
    .dout(grp_fu_1107_p2)
);

gesture_model_mac_muladd_16s_7ns_22s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_7ns_22s_24_4_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_296),
    .din1(grp_fu_1114_p1),
    .din2(tmp_fu_456_p3),
    .ce(grp_fu_1114_ce),
    .dout(grp_fu_1114_p3)
);

gesture_model_mac_muladd_16s_7s_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_7s_24s_24_4_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_296),
    .din1(grp_fu_1123_p1),
    .din2(grp_fu_1123_p2),
    .ce(grp_fu_1123_ce),
    .dout(grp_fu_1123_p3)
);

gesture_model_mac_muladd_16s_8s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_8s_24ns_24_4_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_301),
    .din1(grp_fu_1132_p1),
    .din2(grp_fu_1132_p2),
    .ce(grp_fu_1132_ce),
    .dout(grp_fu_1132_p3)
);

gesture_model_mac_muladd_16s_5ns_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_5ns_24s_24_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_306),
    .din1(grp_fu_1141_p1),
    .din2(grp_fu_1141_p2),
    .ce(grp_fu_1141_ce),
    .dout(grp_fu_1141_p3)
);

gesture_model_mac_muladd_16s_6ns_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_6ns_24s_24_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_311),
    .din1(grp_fu_1150_p1),
    .din2(grp_fu_1150_p2),
    .ce(grp_fu_1150_ce),
    .dout(grp_fu_1150_p3)
);

gesture_model_mac_muladd_16s_7s_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_7s_24s_24_4_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_315),
    .din1(grp_fu_1159_p1),
    .din2(grp_fu_1159_p2),
    .ce(grp_fu_1159_ce),
    .dout(grp_fu_1159_p3)
);

gesture_model_mac_muladd_16s_6ns_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_6ns_24s_24_4_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_301),
    .din1(grp_fu_1168_p1),
    .din2(grp_fu_1168_p2),
    .ce(grp_fu_1168_ce),
    .dout(grp_fu_1168_p3)
);

gesture_model_mac_muladd_16s_7s_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_7s_24s_24_4_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_311),
    .din1(grp_fu_1177_p1),
    .din2(grp_fu_1177_p2),
    .ce(grp_fu_1177_ce),
    .dout(grp_fu_1177_p3)
);

gesture_model_mac_muladd_16s_7s_24s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_7s_24s_24_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_301),
    .din1(grp_fu_1186_p1),
    .din2(grp_fu_1186_p2),
    .ce(grp_fu_1186_ce),
    .dout(grp_fu_1186_p3)
);

gesture_model_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage5),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage5)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_348)) begin
        if ((icmp_ln14_fu_328_p2 == 1'd0)) begin
            i_fu_142 <= add_ln1271_fu_334_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_142 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln14_reg_1221 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln14_reg_1221 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln14_reg_1221 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_296 <= input_r_q1;
    end else if (((icmp_ln14_reg_1221 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        reg_296 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_1221 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        reg_301 <= input_r_q1;
    end else if ((((icmp_ln14_reg_1221 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln14_reg_1221 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_301 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln14_reg_1221 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln14_reg_1221 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_306 <= input_r_q1;
    end else if (((icmp_ln14_reg_1221 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        reg_306 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reg_315 <= input_r_q1;
    end else if (((icmp_ln14_reg_1221 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        reg_315 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_5_reg_1203 <= ap_sig_allocacmp_i_5;
        icmp_ln14_reg_1221 <= icmp_ln14_fu_328_p2;
        trunc_ln18_cast_reg_1225_pp0_iter1_reg[6 : 0] <= trunc_ln18_cast_reg_1225[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln14_reg_1221 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln14_reg_1221 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_311 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln14_fu_328_p2 == 1'd0))) begin
        trunc_ln18_cast_reg_1225[6 : 0] <= trunc_ln18_cast_fu_340_p1[6 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln14_reg_1221 == 1'd1) & (1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_5 = 7'd0;
    end else begin
        ap_sig_allocacmp_i_5 = i_fu_142;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_1107_ce = 1'b1;
    end else begin
        grp_fu_1107_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_1114_ce = 1'b1;
    end else begin
        grp_fu_1114_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_1123_ce = 1'b1;
    end else begin
        grp_fu_1123_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_1132_ce = 1'b1;
    end else begin
        grp_fu_1132_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_1141_ce = 1'b1;
    end else begin
        grp_fu_1141_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_1150_ce = 1'b1;
    end else begin
        grp_fu_1150_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_1159_ce = 1'b1;
    end else begin
        grp_fu_1159_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_1168_ce = 1'b1;
    end else begin
        grp_fu_1168_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_1177_ce = 1'b1;
    end else begin
        grp_fu_1177_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_1186_ce = 1'b1;
    end else begin
        grp_fu_1186_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            input_r_address0 = zext_ln1271_15_fu_697_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            input_r_address0 = zext_ln1271_14_fu_528_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            input_r_address0 = zext_ln1271_12_fu_487_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            input_r_address0 = zext_ln1271_11_fu_442_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_r_address0 = zext_ln1271_9_fu_418_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_r_address0 = zext_ln1271_7_fu_394_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_r_address0 = zext_ln1271_5_fu_370_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_r_address0 = zext_ln1271_1_fu_345_p1;
        end else begin
            input_r_address0 = 'bx;
        end
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            input_r_address1 = zext_ln1271_13_fu_687_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            input_r_address1 = zext_ln1271_10_fu_518_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            input_r_address1 = zext_ln1271_8_fu_477_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            input_r_address1 = zext_ln1271_6_fu_432_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_r_address1 = zext_ln1271_4_fu_408_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_r_address1 = zext_ln1271_3_fu_384_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_r_address1 = zext_ln1271_2_fu_360_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_r_address1 = trunc_ln18_cast_fu_340_p1;
        end else begin
            input_r_address1 = 'bx;
        end
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage5)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1271_10_fu_437_p2 = (i_5_reg_1203 + 7'd11);

assign add_ln1271_11_fu_482_p2 = (i_5_reg_1203 + 7'd12);

assign add_ln1271_12_fu_682_p2 = (i_5_reg_1203 + 7'd13);

assign add_ln1271_13_fu_523_p2 = (i_5_reg_1203 + 7'd14);

assign add_ln1271_14_fu_692_p2 = (i_5_reg_1203 + 7'd15);

assign add_ln1271_1_fu_355_p2 = (i_5_reg_1203 + 7'd2);

assign add_ln1271_2_fu_379_p2 = (i_5_reg_1203 + 7'd3);

assign add_ln1271_3_fu_403_p2 = (i_5_reg_1203 + 7'd4);

assign add_ln1271_4_fu_365_p2 = (i_5_reg_1203 + 7'd5);

assign add_ln1271_5_fu_427_p2 = (i_5_reg_1203 + 7'd6);

assign add_ln1271_6_fu_389_p2 = (i_5_reg_1203 + 7'd7);

assign add_ln1271_7_fu_472_p2 = (i_5_reg_1203 + 7'd8);

assign add_ln1271_8_fu_413_p2 = (i_5_reg_1203 + 7'd9);

assign add_ln1271_9_fu_513_p2 = (i_5_reg_1203 + 7'd10);

assign add_ln1271_fu_334_p2 = (ap_sig_allocacmp_i_5 + 7'd1);

assign add_ln1273_fu_743_p2 = ($signed(sext_ln1273_8_fu_727_p1) + $signed(sext_ln1273_9_fu_739_p1));

assign add_ln1347_17_fu_590_p2 = ($signed(and_ln838_s_fu_542_p3) + $signed(sext_ln813_2_fu_586_p1));

assign add_ln1347_18_fu_654_p2 = ($signed(and_ln838_14_fu_606_p3) + $signed(sext_ln813_3_fu_650_p1));

assign add_ln1347_20_fu_753_p2 = ($signed(and_ln838_16_fu_711_p3) + $signed(sext_ln813_4_fu_749_p1));

assign add_ln1347_22_fu_838_p2 = ($signed(and_ln838_18_fu_790_p3) + $signed(sext_ln813_6_fu_834_p1));

assign add_ln1347_24_fu_915_p2 = ($signed(and_ln838_20_fu_875_p3) + $signed(sext_ln813_8_fu_911_p1));

assign add_ln1347_27_fu_1021_p2 = ($signed(and_ln838_23_fu_973_p3) + $signed(sext_ln813_11_fu_1017_p1));

assign add_ln1649_fu_1086_p2 = ($signed(trunc_ln3_fu_1071_p4) + $signed(15'd32751));

assign add_ln813_fu_1080_p2 = ($signed(trunc_ln818_2_fu_1062_p4) + $signed(16'd65519));

assign and_ln838_14_fu_606_p3 = {{tmp_27_fu_596_p4}, {8'd0}};

assign and_ln838_16_fu_711_p3 = {{tmp_29_fu_702_p4}, {8'd0}};

assign and_ln838_18_fu_790_p3 = {{tmp_31_fu_781_p4}, {8'd0}};

assign and_ln838_20_fu_875_p3 = {{tmp_33_fu_866_p4}, {8'd0}};

assign and_ln838_23_fu_973_p3 = {{tmp_36_fu_964_p4}, {8'd0}};

assign and_ln838_s_fu_542_p3 = {{tmp_26_fu_533_p4}, {8'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_done_reg == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (ap_done_reg == 1'b1);
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_348 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage5;

assign grp_fu_1107_p1 = 22'd22;

assign grp_fu_1114_p1 = 24'd90;

assign grp_fu_1123_p1 = 23'd8388562;

assign grp_fu_1123_p2 = {{tmp_s_fu_492_p4}, {8'd0}};

assign grp_fu_1132_p1 = 24'd16777131;

assign grp_fu_1132_p2 = {{tmp_28_fu_660_p4}, {8'd0}};

assign grp_fu_1141_p1 = 22'd22;

assign grp_fu_1141_p2 = {{tmp_30_fu_759_p4}, {8'd0}};

assign grp_fu_1150_p1 = 23'd43;

assign grp_fu_1150_p2 = {{tmp_32_fu_844_p4}, {8'd0}};

assign grp_fu_1159_p1 = 23'd8388556;

assign grp_fu_1159_p2 = {{tmp_34_fu_921_p4}, {8'd0}};

assign grp_fu_1168_p1 = 23'd49;

assign grp_fu_1168_p2 = {{tmp_35_fu_943_p4}, {8'd0}};

assign grp_fu_1177_p1 = 23'd8388571;

assign grp_fu_1177_p2 = {{tmp_37_fu_1027_p4}, {8'd0}};

assign grp_fu_1186_p1 = 23'd8388566;

assign grp_fu_1186_p2 = {{tmp_38_fu_1045_p4}, {8'd0}};

assign icmp_ln14_fu_328_p2 = ((ap_sig_allocacmp_i_5 == 7'd105) ? 1'b1 : 1'b0);

assign icmp_ln1649_fu_1092_p2 = (($signed(add_ln813_fu_1080_p2) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign output_r_address0 = trunc_ln18_cast_reg_1225_pp0_iter1_reg;

assign output_r_d0 = ((icmp_ln1649_fu_1092_p2[0:0] == 1'b1) ? add_ln1649_fu_1086_p2 : 15'd0);

assign sext_ln1273_11_fu_806_p1 = $signed(shl_ln1273_6_fu_798_p3);

assign sext_ln1273_12_fu_824_p1 = $signed(shl_ln1273_7_fu_816_p3);

assign sext_ln1273_14_fu_883_p0 = reg_306;

assign sext_ln1273_14_fu_883_p1 = sext_ln1273_14_fu_883_p0;

assign sext_ln1273_15_fu_895_p1 = $signed(shl_ln1273_8_fu_887_p3);

assign sext_ln1273_18_fu_989_p1 = $signed(shl_ln1273_9_fu_981_p3);

assign sext_ln1273_19_fu_1007_p1 = $signed(shl_ln1273_s_fu_999_p3);

assign sext_ln1273_3_fu_558_p1 = $signed(shl_ln_fu_550_p3);

assign sext_ln1273_4_fu_576_p1 = $signed(shl_ln1273_1_fu_568_p3);

assign sext_ln1273_5_fu_622_p1 = $signed(shl_ln1273_2_fu_614_p3);

assign sext_ln1273_6_fu_640_p1 = $signed(shl_ln1273_3_fu_632_p3);

assign sext_ln1273_8_fu_727_p1 = $signed(shl_ln1273_4_fu_719_p3);

assign sext_ln1273_9_fu_739_p1 = $signed(shl_ln1273_5_fu_731_p3);

assign sext_ln813_11_fu_1017_p1 = $signed(sub_ln1273_9_fu_1011_p2);

assign sext_ln813_2_fu_586_p1 = $signed(sub_ln1273_1_fu_580_p2);

assign sext_ln813_3_fu_650_p1 = $signed(sub_ln1273_3_fu_644_p2);

assign sext_ln813_4_fu_749_p1 = $signed(add_ln1273_fu_743_p2);

assign sext_ln813_6_fu_834_p1 = $signed(sub_ln1273_5_fu_828_p2);

assign sext_ln813_8_fu_911_p1 = $signed(sub_ln1273_7_fu_905_p2);

assign shl_ln1273_1_fu_568_p3 = {{reg_296}, {1'd0}};

assign shl_ln1273_2_fu_614_p3 = {{reg_301}, {5'd0}};

assign shl_ln1273_3_fu_632_p3 = {{reg_301}, {1'd0}};

assign shl_ln1273_4_fu_719_p3 = {{reg_306}, {4'd0}};

assign shl_ln1273_5_fu_731_p3 = {{reg_306}, {2'd0}};

assign shl_ln1273_6_fu_798_p3 = {{reg_296}, {4'd0}};

assign shl_ln1273_7_fu_816_p3 = {{reg_296}, {2'd0}};

assign shl_ln1273_8_fu_887_p1 = reg_306;

assign shl_ln1273_8_fu_887_p3 = {{shl_ln1273_8_fu_887_p1}, {3'd0}};

assign shl_ln1273_9_fu_981_p3 = {{reg_315}, {5'd0}};

assign shl_ln1273_s_fu_999_p3 = {{reg_315}, {2'd0}};

assign shl_ln_fu_550_p3 = {{reg_296}, {6'd0}};

assign sub_ln1273_1_fu_580_p2 = ($signed(sub_ln1273_fu_562_p2) - $signed(sext_ln1273_4_fu_576_p1));

assign sub_ln1273_2_fu_626_p2 = ($signed(22'd0) - $signed(sext_ln1273_5_fu_622_p1));

assign sub_ln1273_3_fu_644_p2 = ($signed(sub_ln1273_2_fu_626_p2) - $signed(sext_ln1273_6_fu_640_p1));

assign sub_ln1273_4_fu_810_p2 = ($signed(21'd0) - $signed(sext_ln1273_11_fu_806_p1));

assign sub_ln1273_5_fu_828_p2 = ($signed(sub_ln1273_4_fu_810_p2) - $signed(sext_ln1273_12_fu_824_p1));

assign sub_ln1273_6_fu_899_p2 = ($signed(20'd0) - $signed(sext_ln1273_15_fu_895_p1));

assign sub_ln1273_7_fu_905_p2 = ($signed(sub_ln1273_6_fu_899_p2) - $signed(sext_ln1273_14_fu_883_p1));

assign sub_ln1273_8_fu_993_p2 = ($signed(22'd0) - $signed(sext_ln1273_18_fu_989_p1));

assign sub_ln1273_9_fu_1011_p2 = ($signed(sub_ln1273_8_fu_993_p2) - $signed(sext_ln1273_19_fu_1007_p1));

assign sub_ln1273_fu_562_p2 = ($signed(23'd0) - $signed(sext_ln1273_3_fu_558_p1));

assign tmp_26_fu_533_p4 = {{grp_fu_1123_p3[23:8]}};

assign tmp_27_fu_596_p4 = {{add_ln1347_17_fu_590_p2[23:8]}};

assign tmp_28_fu_660_p4 = {{add_ln1347_18_fu_654_p2[23:8]}};

assign tmp_29_fu_702_p1 = grp_fu_1132_p3;

assign tmp_29_fu_702_p4 = {{tmp_29_fu_702_p1[23:8]}};

assign tmp_30_fu_759_p4 = {{add_ln1347_20_fu_753_p2[23:8]}};

assign tmp_31_fu_781_p4 = {{grp_fu_1141_p3[23:8]}};

assign tmp_32_fu_844_p4 = {{add_ln1347_22_fu_838_p2[23:8]}};

assign tmp_33_fu_866_p4 = {{grp_fu_1150_p3[23:8]}};

assign tmp_34_fu_921_p4 = {{add_ln1347_24_fu_915_p2[23:8]}};

assign tmp_35_fu_943_p4 = {{grp_fu_1159_p3[23:8]}};

assign tmp_36_fu_964_p4 = {{grp_fu_1168_p3[23:8]}};

assign tmp_37_fu_1027_p4 = {{add_ln1347_27_fu_1021_p2[23:8]}};

assign tmp_38_fu_1045_p4 = {{grp_fu_1177_p3[23:8]}};

assign tmp_fu_456_p3 = {{trunc_ln_fu_447_p4}, {8'd0}};

assign tmp_s_fu_492_p4 = {{grp_fu_1114_p3[23:8]}};

assign trunc_ln18_cast_fu_340_p1 = ap_sig_allocacmp_i_5;

assign trunc_ln3_fu_1071_p4 = {{grp_fu_1186_p3[22:8]}};

assign trunc_ln818_2_fu_1062_p4 = {{grp_fu_1186_p3[23:8]}};

assign trunc_ln_fu_447_p4 = {{grp_fu_1107_p2[21:8]}};

assign zext_ln1271_10_fu_518_p1 = add_ln1271_9_fu_513_p2;

assign zext_ln1271_11_fu_442_p1 = add_ln1271_10_fu_437_p2;

assign zext_ln1271_12_fu_487_p1 = add_ln1271_11_fu_482_p2;

assign zext_ln1271_13_fu_687_p1 = add_ln1271_12_fu_682_p2;

assign zext_ln1271_14_fu_528_p1 = add_ln1271_13_fu_523_p2;

assign zext_ln1271_15_fu_697_p1 = add_ln1271_14_fu_692_p2;

assign zext_ln1271_1_fu_345_p1 = add_ln1271_fu_334_p2;

assign zext_ln1271_2_fu_360_p1 = add_ln1271_1_fu_355_p2;

assign zext_ln1271_3_fu_384_p1 = add_ln1271_2_fu_379_p2;

assign zext_ln1271_4_fu_408_p1 = add_ln1271_3_fu_403_p2;

assign zext_ln1271_5_fu_370_p1 = add_ln1271_4_fu_365_p2;

assign zext_ln1271_6_fu_432_p1 = add_ln1271_5_fu_427_p2;

assign zext_ln1271_7_fu_394_p1 = add_ln1271_6_fu_389_p2;

assign zext_ln1271_8_fu_477_p1 = add_ln1271_7_fu_472_p2;

assign zext_ln1271_9_fu_418_p1 = add_ln1271_8_fu_413_p2;

always @ (posedge ap_clk) begin
    trunc_ln18_cast_reg_1225[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    trunc_ln18_cast_reg_1225_pp0_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //gesture_model_conv1d_0
