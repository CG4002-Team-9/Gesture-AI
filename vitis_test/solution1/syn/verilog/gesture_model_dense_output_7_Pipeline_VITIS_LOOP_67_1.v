// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gesture_model_dense_output_7_Pipeline_VITIS_LOOP_67_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sext_ln818,
        sext_ln1347,
        sext_ln1347_1,
        sext_ln1347_2,
        sext_ln1347_3,
        sext_ln1347_4,
        sext_ln1347_5,
        sext_ln1347_6,
        sext_ln1347_7,
        sext_ln1347_8,
        sext_ln1347_9,
        sext_ln1347_10,
        sext_ln1347_11,
        sext_ln1347_12,
        sext_ln1347_13,
        sext_ln1347_14,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] sext_ln818;
input  [15:0] sext_ln1347;
input  [15:0] sext_ln1347_1;
input  [15:0] sext_ln1347_2;
input  [15:0] sext_ln1347_3;
input  [15:0] sext_ln1347_4;
input  [15:0] sext_ln1347_5;
input  [15:0] sext_ln1347_6;
input  [15:0] sext_ln1347_7;
input  [15:0] sext_ln1347_8;
input  [15:0] sext_ln1347_9;
input  [15:0] sext_ln1347_10;
input  [15:0] sext_ln1347_11;
input  [15:0] sext_ln1347_12;
input  [15:0] sext_ln1347_13;
input  [15:0] sext_ln1347_14;
output  [4:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;

reg ap_idle;
reg output_r_ce0;
reg output_r_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln67_fu_519_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [8:0] dense_weights_7_V_address0;
reg    dense_weights_7_V_ce0;
wire  signed [8:0] dense_weights_7_V_q0;
wire   [8:0] dense_weights_7_V_address1;
reg    dense_weights_7_V_ce1;
wire  signed [8:0] dense_weights_7_V_q1;
wire   [8:0] dense_weights_7_V_address2;
reg    dense_weights_7_V_ce2;
wire  signed [8:0] dense_weights_7_V_q2;
wire   [8:0] dense_weights_7_V_address3;
reg    dense_weights_7_V_ce3;
wire  signed [8:0] dense_weights_7_V_q3;
wire   [8:0] dense_weights_7_V_address4;
reg    dense_weights_7_V_ce4;
wire  signed [8:0] dense_weights_7_V_q4;
wire   [8:0] dense_weights_7_V_address5;
reg    dense_weights_7_V_ce5;
wire  signed [8:0] dense_weights_7_V_q5;
wire   [8:0] dense_weights_7_V_address6;
reg    dense_weights_7_V_ce6;
wire  signed [8:0] dense_weights_7_V_q6;
wire   [8:0] dense_weights_7_V_address7;
reg    dense_weights_7_V_ce7;
wire  signed [8:0] dense_weights_7_V_q7;
wire   [8:0] dense_weights_7_V_address8;
reg    dense_weights_7_V_ce8;
wire  signed [8:0] dense_weights_7_V_q8;
wire   [8:0] dense_weights_7_V_address9;
reg    dense_weights_7_V_ce9;
wire  signed [8:0] dense_weights_7_V_q9;
wire   [8:0] dense_weights_7_V_address10;
reg    dense_weights_7_V_ce10;
wire  signed [8:0] dense_weights_7_V_q10;
wire   [8:0] dense_weights_7_V_address11;
reg    dense_weights_7_V_ce11;
wire  signed [8:0] dense_weights_7_V_q11;
wire   [8:0] dense_weights_7_V_address12;
reg    dense_weights_7_V_ce12;
wire  signed [8:0] dense_weights_7_V_q12;
wire   [8:0] dense_weights_7_V_address13;
reg    dense_weights_7_V_ce13;
wire  signed [8:0] dense_weights_7_V_q13;
wire   [8:0] dense_weights_7_V_address14;
reg    dense_weights_7_V_ce14;
wire  signed [8:0] dense_weights_7_V_q14;
wire   [8:0] dense_weights_7_V_address15;
reg    dense_weights_7_V_ce15;
wire  signed [8:0] dense_weights_7_V_q15;
wire   [4:0] dense_biases_7_V_address0;
reg    dense_biases_7_V_ce0;
wire   [7:0] dense_biases_7_V_q0;
wire  signed [23:0] sext_ln1347_14_cast_fu_447_p1;
reg  signed [23:0] sext_ln1347_14_cast_reg_1197;
wire    ap_block_pp0_stage0_11001;
wire  signed [23:0] sext_ln1347_13_cast_fu_451_p1;
reg  signed [23:0] sext_ln1347_13_cast_reg_1202;
wire  signed [23:0] sext_ln1347_12_cast_fu_455_p1;
reg  signed [23:0] sext_ln1347_12_cast_reg_1207;
wire  signed [23:0] sext_ln1347_11_cast_fu_459_p1;
reg  signed [23:0] sext_ln1347_11_cast_reg_1212;
wire  signed [23:0] sext_ln1347_10_cast_fu_463_p1;
reg  signed [23:0] sext_ln1347_10_cast_reg_1217;
wire  signed [23:0] sext_ln1347_9_cast_fu_467_p1;
reg  signed [23:0] sext_ln1347_9_cast_reg_1222;
wire  signed [23:0] sext_ln1347_8_cast_fu_471_p1;
reg  signed [23:0] sext_ln1347_8_cast_reg_1227;
wire  signed [23:0] sext_ln1347_7_cast_fu_475_p1;
reg  signed [23:0] sext_ln1347_7_cast_reg_1232;
wire  signed [23:0] sext_ln1347_6_cast_fu_479_p1;
reg  signed [23:0] sext_ln1347_6_cast_reg_1237;
wire  signed [23:0] sext_ln1347_5_cast_fu_483_p1;
reg  signed [23:0] sext_ln1347_5_cast_reg_1242;
wire  signed [23:0] sext_ln1347_4_cast_fu_487_p1;
reg  signed [23:0] sext_ln1347_4_cast_reg_1247;
wire  signed [23:0] sext_ln1347_3_cast_fu_491_p1;
reg  signed [23:0] sext_ln1347_3_cast_reg_1252;
wire  signed [23:0] sext_ln1347_2_cast_fu_495_p1;
reg  signed [23:0] sext_ln1347_2_cast_reg_1257;
wire  signed [23:0] sext_ln1347_1_cast_fu_499_p1;
reg  signed [23:0] sext_ln1347_1_cast_reg_1262;
wire  signed [23:0] sext_ln1347_cast_fu_503_p1;
reg  signed [23:0] sext_ln1347_cast_reg_1267;
wire  signed [23:0] sext_ln818_cast_fu_507_p1;
reg  signed [23:0] sext_ln818_cast_reg_1272;
reg   [4:0] i_4_reg_1277;
reg   [4:0] i_4_reg_1277_pp0_iter1_reg;
reg   [4:0] i_4_reg_1277_pp0_iter2_reg;
reg   [4:0] i_4_reg_1277_pp0_iter3_reg;
reg   [4:0] i_4_reg_1277_pp0_iter4_reg;
reg   [4:0] i_4_reg_1277_pp0_iter5_reg;
reg   [4:0] i_4_reg_1277_pp0_iter6_reg;
reg   [4:0] i_4_reg_1277_pp0_iter7_reg;
reg   [4:0] i_4_reg_1277_pp0_iter8_reg;
reg   [4:0] i_4_reg_1277_pp0_iter9_reg;
reg   [4:0] i_4_reg_1277_pp0_iter10_reg;
reg   [4:0] i_4_reg_1277_pp0_iter11_reg;
wire   [63:0] i_cast14_fu_531_p1;
reg   [63:0] i_cast14_reg_1290;
reg   [63:0] i_cast14_reg_1290_pp0_iter1_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter2_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter3_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter4_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter5_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter6_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter7_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter8_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter9_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter10_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter11_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter12_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter13_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter14_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter15_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter16_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter17_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter18_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter19_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter20_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter21_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter22_reg;
reg   [63:0] i_cast14_reg_1290_pp0_iter23_reg;
wire   [5:0] i_cast20_fu_541_p1;
reg   [5:0] i_cast20_reg_1301;
reg   [5:0] i_cast20_reg_1301_pp0_iter2_reg;
reg   [5:0] i_cast20_reg_1301_pp0_iter3_reg;
reg   [5:0] i_cast20_reg_1301_pp0_iter4_reg;
wire   [6:0] i_cast27_fu_573_p1;
reg   [6:0] i_cast27_reg_1327;
reg   [6:0] i_cast27_reg_1327_pp0_iter4_reg;
reg   [6:0] i_cast27_reg_1327_pp0_iter5_reg;
reg   [6:0] i_cast27_reg_1327_pp0_iter6_reg;
reg   [6:0] i_cast27_reg_1327_pp0_iter7_reg;
reg   [6:0] i_cast27_reg_1327_pp0_iter8_reg;
reg   [6:0] i_cast27_reg_1327_pp0_iter9_reg;
reg   [6:0] i_cast27_reg_1327_pp0_iter10_reg;
wire   [7:0] i_cast12_fu_657_p1;
reg   [7:0] i_cast12_reg_1374;
reg   [7:0] i_cast12_reg_1374_pp0_iter7_reg;
reg   [7:0] i_cast12_reg_1374_pp0_iter8_reg;
wire   [8:0] i_cast13_fu_857_p1;
reg   [8:0] i_cast13_reg_1470;
reg   [8:0] i_cast13_reg_1470_pp0_iter13_reg;
reg   [8:0] i_cast13_reg_1470_pp0_iter14_reg;
wire    grp_exp_17_9_s_fu_435_ap_start;
wire    grp_exp_17_9_s_fu_435_ap_done;
wire    grp_exp_17_9_s_fu_435_ap_idle;
wire    grp_exp_17_9_s_fu_435_ap_ready;
wire   [16:0] grp_exp_17_9_s_fu_435_x;
wire   [15:0] grp_exp_17_9_s_fu_435_ap_return;
reg    grp_exp_17_9_s_fu_435_ap_start_reg;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln1271_fu_554_p1;
wire   [63:0] zext_ln1271_2_fu_568_p1;
wire   [63:0] zext_ln1271_3_fu_586_p1;
wire   [63:0] zext_ln1271_4_fu_617_p1;
wire   [63:0] zext_ln1271_5_fu_652_p1;
wire   [63:0] zext_ln1271_6_fu_687_p1;
wire   [63:0] zext_ln1271_7_fu_718_p1;
wire   [63:0] zext_ln1271_8_fu_751_p1;
wire   [63:0] zext_ln1271_9_fu_782_p1;
wire   [63:0] zext_ln1271_10_fu_817_p1;
wire   [63:0] zext_ln1271_11_fu_852_p1;
wire   [63:0] zext_ln1271_12_fu_887_p1;
wire   [63:0] zext_ln1271_13_fu_918_p1;
wire   [63:0] zext_ln1271_14_fu_949_p1;
wire   [63:0] zext_ln1271_15_fu_980_p1;
reg   [4:0] i_fu_116;
wire   [4:0] add_ln67_fu_525_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_i_4;
wire   [5:0] add_ln70_fu_548_p2;
wire   [5:0] add_ln70_1_fu_563_p2;
wire   [6:0] add_ln70_2_fu_580_p2;
wire  signed [23:0] grp_fu_1064_p2;
wire   [15:0] tmp_fu_591_p4;
wire   [6:0] add_ln70_3_fu_612_p2;
wire  signed [23:0] tmp_s_fu_622_p1;
wire   [23:0] grp_fu_1070_p3;
wire   [15:0] tmp_s_fu_622_p4;
wire   [5:0] add_ln70_4_fu_643_p2;
wire  signed [6:0] sext_ln1271_fu_648_p1;
wire  signed [23:0] tmp_13_fu_660_p1;
wire   [23:0] grp_fu_1078_p3;
wire   [15:0] tmp_13_fu_660_p4;
wire   [7:0] add_ln70_5_fu_681_p2;
wire  signed [23:0] tmp_14_fu_692_p1;
wire   [23:0] grp_fu_1086_p3;
wire   [15:0] tmp_14_fu_692_p4;
wire   [7:0] add_ln70_6_fu_713_p2;
wire  signed [23:0] tmp_15_fu_723_p1;
wire   [23:0] grp_fu_1094_p3;
wire   [15:0] tmp_15_fu_723_p4;
wire   [7:0] zext_ln1271_8_cast_fu_744_p3;
wire  signed [23:0] tmp_16_fu_756_p1;
wire   [23:0] grp_fu_1102_p3;
wire   [15:0] tmp_16_fu_756_p4;
wire   [7:0] add_ln70_7_fu_777_p2;
wire  signed [23:0] tmp_17_fu_787_p1;
wire   [23:0] grp_fu_1110_p3;
wire   [15:0] tmp_17_fu_787_p4;
wire   [6:0] add_ln70_8_fu_808_p2;
wire  signed [7:0] sext_ln1271_1_fu_813_p1;
wire  signed [23:0] tmp_18_fu_822_p1;
wire   [23:0] grp_fu_1118_p3;
wire   [15:0] tmp_18_fu_822_p4;
wire   [6:0] add_ln70_9_fu_843_p2;
wire  signed [7:0] sext_ln1271_2_fu_848_p1;
wire  signed [23:0] tmp_19_fu_860_p1;
wire   [23:0] grp_fu_1126_p3;
wire   [15:0] tmp_19_fu_860_p4;
wire   [8:0] add_ln70_10_fu_881_p2;
wire  signed [23:0] tmp_20_fu_892_p1;
wire   [23:0] grp_fu_1134_p3;
wire   [15:0] tmp_20_fu_892_p4;
wire   [8:0] add_ln70_11_fu_913_p2;
wire  signed [23:0] tmp_21_fu_923_p1;
wire   [23:0] grp_fu_1142_p3;
wire   [15:0] tmp_21_fu_923_p4;
wire   [8:0] add_ln70_12_fu_944_p2;
wire  signed [23:0] tmp_22_fu_954_p1;
wire   [23:0] grp_fu_1150_p3;
wire   [15:0] tmp_22_fu_954_p4;
wire   [8:0] add_ln70_13_fu_975_p2;
wire  signed [23:0] tmp_23_fu_985_p1;
wire   [23:0] grp_fu_1158_p3;
wire   [15:0] tmp_23_fu_985_p4;
wire  signed [23:0] tmp_24_fu_1006_p1;
wire   [23:0] grp_fu_1166_p3;
wire   [15:0] tmp_24_fu_1006_p4;
wire  signed [23:0] tmp_25_fu_1023_p1;
wire   [23:0] grp_fu_1174_p3;
wire   [15:0] tmp_25_fu_1023_p4;
wire  signed [23:0] lhs_fu_1040_p1;
wire   [23:0] grp_fu_1182_p3;
wire   [15:0] lhs_fu_1040_p4;
wire  signed [16:0] sext_ln813_fu_1049_p1;
wire  signed [16:0] sext_ln813_1_fu_1053_p1;
wire  signed [15:0] grp_fu_1064_p0;
wire  signed [15:0] grp_fu_1070_p0;
wire   [23:0] grp_fu_1070_p2;
wire  signed [15:0] grp_fu_1078_p0;
wire   [23:0] grp_fu_1078_p2;
wire  signed [15:0] grp_fu_1086_p0;
wire   [23:0] grp_fu_1086_p2;
wire  signed [15:0] grp_fu_1094_p0;
wire   [23:0] grp_fu_1094_p2;
wire  signed [15:0] grp_fu_1102_p0;
wire   [23:0] grp_fu_1102_p2;
wire  signed [15:0] grp_fu_1110_p0;
wire   [23:0] grp_fu_1110_p2;
wire  signed [15:0] grp_fu_1118_p0;
wire   [23:0] grp_fu_1118_p2;
wire  signed [15:0] grp_fu_1126_p0;
wire   [23:0] grp_fu_1126_p2;
wire  signed [15:0] grp_fu_1134_p0;
wire   [23:0] grp_fu_1134_p2;
wire  signed [15:0] grp_fu_1142_p0;
wire   [23:0] grp_fu_1142_p2;
wire  signed [15:0] grp_fu_1150_p0;
wire   [23:0] grp_fu_1150_p2;
wire  signed [15:0] grp_fu_1158_p0;
wire   [23:0] grp_fu_1158_p2;
wire  signed [15:0] grp_fu_1166_p0;
wire   [23:0] grp_fu_1166_p2;
wire  signed [15:0] grp_fu_1174_p0;
wire   [23:0] grp_fu_1174_p2;
wire  signed [15:0] grp_fu_1182_p0;
wire   [23:0] grp_fu_1182_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 grp_exp_17_9_s_fu_435_ap_start_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

gesture_model_dense_output_7_Pipeline_VITIS_LOOP_67_1_dense_weights_7_V_ROM_AUTO_1R #(
    .DataWidth( 9 ),
    .AddressRange( 320 ),
    .AddressWidth( 9 ))
dense_weights_7_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_weights_7_V_address0),
    .ce0(dense_weights_7_V_ce0),
    .q0(dense_weights_7_V_q0),
    .address1(dense_weights_7_V_address1),
    .ce1(dense_weights_7_V_ce1),
    .q1(dense_weights_7_V_q1),
    .address2(dense_weights_7_V_address2),
    .ce2(dense_weights_7_V_ce2),
    .q2(dense_weights_7_V_q2),
    .address3(dense_weights_7_V_address3),
    .ce3(dense_weights_7_V_ce3),
    .q3(dense_weights_7_V_q3),
    .address4(dense_weights_7_V_address4),
    .ce4(dense_weights_7_V_ce4),
    .q4(dense_weights_7_V_q4),
    .address5(dense_weights_7_V_address5),
    .ce5(dense_weights_7_V_ce5),
    .q5(dense_weights_7_V_q5),
    .address6(dense_weights_7_V_address6),
    .ce6(dense_weights_7_V_ce6),
    .q6(dense_weights_7_V_q6),
    .address7(dense_weights_7_V_address7),
    .ce7(dense_weights_7_V_ce7),
    .q7(dense_weights_7_V_q7),
    .address8(dense_weights_7_V_address8),
    .ce8(dense_weights_7_V_ce8),
    .q8(dense_weights_7_V_q8),
    .address9(dense_weights_7_V_address9),
    .ce9(dense_weights_7_V_ce9),
    .q9(dense_weights_7_V_q9),
    .address10(dense_weights_7_V_address10),
    .ce10(dense_weights_7_V_ce10),
    .q10(dense_weights_7_V_q10),
    .address11(dense_weights_7_V_address11),
    .ce11(dense_weights_7_V_ce11),
    .q11(dense_weights_7_V_q11),
    .address12(dense_weights_7_V_address12),
    .ce12(dense_weights_7_V_ce12),
    .q12(dense_weights_7_V_q12),
    .address13(dense_weights_7_V_address13),
    .ce13(dense_weights_7_V_ce13),
    .q13(dense_weights_7_V_q13),
    .address14(dense_weights_7_V_address14),
    .ce14(dense_weights_7_V_ce14),
    .q14(dense_weights_7_V_q14),
    .address15(dense_weights_7_V_address15),
    .ce15(dense_weights_7_V_ce15),
    .q15(dense_weights_7_V_q15)
);

gesture_model_dense_output_7_Pipeline_VITIS_LOOP_67_1_dense_biases_7_V_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
dense_biases_7_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_biases_7_V_address0),
    .ce0(dense_biases_7_V_ce0),
    .q0(dense_biases_7_V_q0)
);

gesture_model_exp_17_9_s grp_exp_17_9_s_fu_435(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_exp_17_9_s_fu_435_ap_start),
    .ap_done(grp_exp_17_9_s_fu_435_ap_done),
    .ap_idle(grp_exp_17_9_s_fu_435_ap_idle),
    .ap_ready(grp_exp_17_9_s_fu_435_ap_ready),
    .x(grp_exp_17_9_s_fu_435_x),
    .ap_return(grp_exp_17_9_s_fu_435_ap_return)
);

gesture_model_mul_mul_16s_9s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_9s_24_4_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1064_p0),
    .din1(dense_weights_7_V_q15),
    .ce(1'b1),
    .dout(grp_fu_1064_p2)
);

gesture_model_mac_muladd_16s_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_9s_24ns_24_4_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1070_p0),
    .din1(dense_weights_7_V_q14),
    .din2(grp_fu_1070_p2),
    .ce(1'b1),
    .dout(grp_fu_1070_p3)
);

gesture_model_mac_muladd_16s_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_9s_24ns_24_4_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1078_p0),
    .din1(dense_weights_7_V_q13),
    .din2(grp_fu_1078_p2),
    .ce(1'b1),
    .dout(grp_fu_1078_p3)
);

gesture_model_mac_muladd_16s_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_9s_24ns_24_4_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1086_p0),
    .din1(dense_weights_7_V_q12),
    .din2(grp_fu_1086_p2),
    .ce(1'b1),
    .dout(grp_fu_1086_p3)
);

gesture_model_mac_muladd_16s_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_9s_24ns_24_4_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1094_p0),
    .din1(dense_weights_7_V_q11),
    .din2(grp_fu_1094_p2),
    .ce(1'b1),
    .dout(grp_fu_1094_p3)
);

gesture_model_mac_muladd_16s_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_9s_24ns_24_4_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1102_p0),
    .din1(dense_weights_7_V_q10),
    .din2(grp_fu_1102_p2),
    .ce(1'b1),
    .dout(grp_fu_1102_p3)
);

gesture_model_mac_muladd_16s_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_9s_24ns_24_4_1_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1110_p0),
    .din1(dense_weights_7_V_q9),
    .din2(grp_fu_1110_p2),
    .ce(1'b1),
    .dout(grp_fu_1110_p3)
);

gesture_model_mac_muladd_16s_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_9s_24ns_24_4_1_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1118_p0),
    .din1(dense_weights_7_V_q8),
    .din2(grp_fu_1118_p2),
    .ce(1'b1),
    .dout(grp_fu_1118_p3)
);

gesture_model_mac_muladd_16s_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_9s_24ns_24_4_1_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1126_p0),
    .din1(dense_weights_7_V_q7),
    .din2(grp_fu_1126_p2),
    .ce(1'b1),
    .dout(grp_fu_1126_p3)
);

gesture_model_mac_muladd_16s_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_9s_24ns_24_4_1_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1134_p0),
    .din1(dense_weights_7_V_q6),
    .din2(grp_fu_1134_p2),
    .ce(1'b1),
    .dout(grp_fu_1134_p3)
);

gesture_model_mac_muladd_16s_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_9s_24ns_24_4_1_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1142_p0),
    .din1(dense_weights_7_V_q5),
    .din2(grp_fu_1142_p2),
    .ce(1'b1),
    .dout(grp_fu_1142_p3)
);

gesture_model_mac_muladd_16s_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_9s_24ns_24_4_1_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1150_p0),
    .din1(dense_weights_7_V_q4),
    .din2(grp_fu_1150_p2),
    .ce(1'b1),
    .dout(grp_fu_1150_p3)
);

gesture_model_mac_muladd_16s_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_9s_24ns_24_4_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1158_p0),
    .din1(dense_weights_7_V_q3),
    .din2(grp_fu_1158_p2),
    .ce(1'b1),
    .dout(grp_fu_1158_p3)
);

gesture_model_mac_muladd_16s_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_9s_24ns_24_4_1_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1166_p0),
    .din1(dense_weights_7_V_q2),
    .din2(grp_fu_1166_p2),
    .ce(1'b1),
    .dout(grp_fu_1166_p3)
);

gesture_model_mac_muladd_16s_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_9s_24ns_24_4_1_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1174_p0),
    .din1(dense_weights_7_V_q1),
    .din2(grp_fu_1174_p2),
    .ce(1'b1),
    .dout(grp_fu_1174_p3)
);

gesture_model_mac_muladd_16s_9s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_9s_24ns_24_4_1_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1182_p0),
    .din1(dense_weights_7_V_q0),
    .din2(grp_fu_1182_p2),
    .ce(1'b1),
    .dout(grp_fu_1182_p3)
);

gesture_model_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter23_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_exp_17_9_s_fu_435_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_exp_17_9_s_fu_435_ap_start_reg <= 1'b1;
        end else if ((grp_exp_17_9_s_fu_435_ap_ready == 1'b1)) begin
            grp_exp_17_9_s_fu_435_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln67_fu_519_p2 == 1'd0))) begin
            i_fu_116 <= add_ln67_fu_525_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_116 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        i_4_reg_1277_pp0_iter10_reg <= i_4_reg_1277_pp0_iter9_reg;
        i_4_reg_1277_pp0_iter11_reg <= i_4_reg_1277_pp0_iter10_reg;
        i_4_reg_1277_pp0_iter2_reg <= i_4_reg_1277_pp0_iter1_reg;
        i_4_reg_1277_pp0_iter3_reg <= i_4_reg_1277_pp0_iter2_reg;
        i_4_reg_1277_pp0_iter4_reg <= i_4_reg_1277_pp0_iter3_reg;
        i_4_reg_1277_pp0_iter5_reg <= i_4_reg_1277_pp0_iter4_reg;
        i_4_reg_1277_pp0_iter6_reg <= i_4_reg_1277_pp0_iter5_reg;
        i_4_reg_1277_pp0_iter7_reg <= i_4_reg_1277_pp0_iter6_reg;
        i_4_reg_1277_pp0_iter8_reg <= i_4_reg_1277_pp0_iter7_reg;
        i_4_reg_1277_pp0_iter9_reg <= i_4_reg_1277_pp0_iter8_reg;
        i_cast12_reg_1374[4 : 0] <= i_cast12_fu_657_p1[4 : 0];
        i_cast12_reg_1374_pp0_iter7_reg[4 : 0] <= i_cast12_reg_1374[4 : 0];
        i_cast12_reg_1374_pp0_iter8_reg[4 : 0] <= i_cast12_reg_1374_pp0_iter7_reg[4 : 0];
        i_cast13_reg_1470[4 : 0] <= i_cast13_fu_857_p1[4 : 0];
        i_cast13_reg_1470_pp0_iter13_reg[4 : 0] <= i_cast13_reg_1470[4 : 0];
        i_cast13_reg_1470_pp0_iter14_reg[4 : 0] <= i_cast13_reg_1470_pp0_iter13_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter10_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter9_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter11_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter10_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter12_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter11_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter13_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter12_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter14_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter13_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter15_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter14_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter16_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter15_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter17_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter16_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter18_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter17_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter19_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter18_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter20_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter19_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter21_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter20_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter22_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter21_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter23_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter22_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter2_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter1_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter3_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter2_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter4_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter3_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter5_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter4_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter6_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter5_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter7_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter6_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter8_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter7_reg[4 : 0];
        i_cast14_reg_1290_pp0_iter9_reg[4 : 0] <= i_cast14_reg_1290_pp0_iter8_reg[4 : 0];
        i_cast20_reg_1301_pp0_iter2_reg[4 : 0] <= i_cast20_reg_1301[4 : 0];
        i_cast20_reg_1301_pp0_iter3_reg[4 : 0] <= i_cast20_reg_1301_pp0_iter2_reg[4 : 0];
        i_cast20_reg_1301_pp0_iter4_reg[4 : 0] <= i_cast20_reg_1301_pp0_iter3_reg[4 : 0];
        i_cast27_reg_1327[4 : 0] <= i_cast27_fu_573_p1[4 : 0];
        i_cast27_reg_1327_pp0_iter10_reg[4 : 0] <= i_cast27_reg_1327_pp0_iter9_reg[4 : 0];
        i_cast27_reg_1327_pp0_iter4_reg[4 : 0] <= i_cast27_reg_1327[4 : 0];
        i_cast27_reg_1327_pp0_iter5_reg[4 : 0] <= i_cast27_reg_1327_pp0_iter4_reg[4 : 0];
        i_cast27_reg_1327_pp0_iter6_reg[4 : 0] <= i_cast27_reg_1327_pp0_iter5_reg[4 : 0];
        i_cast27_reg_1327_pp0_iter7_reg[4 : 0] <= i_cast27_reg_1327_pp0_iter6_reg[4 : 0];
        i_cast27_reg_1327_pp0_iter8_reg[4 : 0] <= i_cast27_reg_1327_pp0_iter7_reg[4 : 0];
        i_cast27_reg_1327_pp0_iter9_reg[4 : 0] <= i_cast27_reg_1327_pp0_iter8_reg[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_4_reg_1277 <= ap_sig_allocacmp_i_4;
        i_4_reg_1277_pp0_iter1_reg <= i_4_reg_1277;
        i_cast14_reg_1290_pp0_iter1_reg[4 : 0] <= i_cast14_reg_1290[4 : 0];
        i_cast20_reg_1301[4 : 0] <= i_cast20_fu_541_p1[4 : 0];
        sext_ln1347_10_cast_reg_1217 <= sext_ln1347_10_cast_fu_463_p1;
        sext_ln1347_11_cast_reg_1212 <= sext_ln1347_11_cast_fu_459_p1;
        sext_ln1347_12_cast_reg_1207 <= sext_ln1347_12_cast_fu_455_p1;
        sext_ln1347_13_cast_reg_1202 <= sext_ln1347_13_cast_fu_451_p1;
        sext_ln1347_14_cast_reg_1197 <= sext_ln1347_14_cast_fu_447_p1;
        sext_ln1347_1_cast_reg_1262 <= sext_ln1347_1_cast_fu_499_p1;
        sext_ln1347_2_cast_reg_1257 <= sext_ln1347_2_cast_fu_495_p1;
        sext_ln1347_3_cast_reg_1252 <= sext_ln1347_3_cast_fu_491_p1;
        sext_ln1347_4_cast_reg_1247 <= sext_ln1347_4_cast_fu_487_p1;
        sext_ln1347_5_cast_reg_1242 <= sext_ln1347_5_cast_fu_483_p1;
        sext_ln1347_6_cast_reg_1237 <= sext_ln1347_6_cast_fu_479_p1;
        sext_ln1347_7_cast_reg_1232 <= sext_ln1347_7_cast_fu_475_p1;
        sext_ln1347_8_cast_reg_1227 <= sext_ln1347_8_cast_fu_471_p1;
        sext_ln1347_9_cast_reg_1222 <= sext_ln1347_9_cast_fu_467_p1;
        sext_ln1347_cast_reg_1267 <= sext_ln1347_cast_fu_503_p1;
        sext_ln818_cast_reg_1272 <= sext_ln818_cast_fu_507_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln67_fu_519_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_cast14_reg_1290[4 : 0] <= i_cast14_fu_531_p1[4 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln67_fu_519_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter23_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_4 = 5'd0;
    end else begin
        ap_sig_allocacmp_i_4 = i_fu_116;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_biases_7_V_ce0 = 1'b1;
    end else begin
        dense_biases_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_weights_7_V_ce0 = 1'b1;
    end else begin
        dense_weights_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_weights_7_V_ce1 = 1'b1;
    end else begin
        dense_weights_7_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_weights_7_V_ce10 = 1'b1;
    end else begin
        dense_weights_7_V_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_weights_7_V_ce11 = 1'b1;
    end else begin
        dense_weights_7_V_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_weights_7_V_ce12 = 1'b1;
    end else begin
        dense_weights_7_V_ce12 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_weights_7_V_ce13 = 1'b1;
    end else begin
        dense_weights_7_V_ce13 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_weights_7_V_ce14 = 1'b1;
    end else begin
        dense_weights_7_V_ce14 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_weights_7_V_ce15 = 1'b1;
    end else begin
        dense_weights_7_V_ce15 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_weights_7_V_ce2 = 1'b1;
    end else begin
        dense_weights_7_V_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_weights_7_V_ce3 = 1'b1;
    end else begin
        dense_weights_7_V_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_weights_7_V_ce4 = 1'b1;
    end else begin
        dense_weights_7_V_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_weights_7_V_ce5 = 1'b1;
    end else begin
        dense_weights_7_V_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_weights_7_V_ce6 = 1'b1;
    end else begin
        dense_weights_7_V_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_weights_7_V_ce7 = 1'b1;
    end else begin
        dense_weights_7_V_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_weights_7_V_ce8 = 1'b1;
    end else begin
        dense_weights_7_V_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_weights_7_V_ce9 = 1'b1;
    end else begin
        dense_weights_7_V_ce9 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln67_fu_525_p2 = (ap_sig_allocacmp_i_4 + 5'd1);

assign add_ln70_10_fu_881_p2 = (i_cast13_fu_857_p1 + 9'd240);

assign add_ln70_11_fu_913_p2 = ($signed(i_cast13_reg_1470) + $signed(9'd260));

assign add_ln70_12_fu_944_p2 = ($signed(i_cast13_reg_1470_pp0_iter13_reg) + $signed(9'd280));

assign add_ln70_13_fu_975_p2 = ($signed(i_cast13_reg_1470_pp0_iter14_reg) + $signed(9'd300));

assign add_ln70_1_fu_563_p2 = ($signed(i_cast20_reg_1301) + $signed(6'd40));

assign add_ln70_2_fu_580_p2 = (i_cast27_fu_573_p1 + 7'd60);

assign add_ln70_3_fu_612_p2 = ($signed(i_cast27_reg_1327) + $signed(7'd80));

assign add_ln70_4_fu_643_p2 = ($signed(i_cast20_reg_1301_pp0_iter4_reg) + $signed(6'd36));

assign add_ln70_5_fu_681_p2 = (i_cast12_fu_657_p1 + 8'd120);

assign add_ln70_6_fu_713_p2 = ($signed(i_cast12_reg_1374) + $signed(8'd140));

assign add_ln70_7_fu_777_p2 = ($signed(i_cast12_reg_1374_pp0_iter8_reg) + $signed(8'd180));

assign add_ln70_8_fu_808_p2 = ($signed(i_cast27_reg_1327_pp0_iter9_reg) + $signed(7'd72));

assign add_ln70_9_fu_843_p2 = ($signed(i_cast27_reg_1327_pp0_iter10_reg) + $signed(7'd92));

assign add_ln70_fu_548_p2 = (i_cast20_fu_541_p1 + 6'd20);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign dense_biases_7_V_address0 = i_cast14_reg_1290_pp0_iter17_reg;

assign dense_weights_7_V_address0 = zext_ln1271_15_fu_980_p1;

assign dense_weights_7_V_address1 = zext_ln1271_14_fu_949_p1;

assign dense_weights_7_V_address10 = zext_ln1271_5_fu_652_p1;

assign dense_weights_7_V_address11 = zext_ln1271_4_fu_617_p1;

assign dense_weights_7_V_address12 = zext_ln1271_3_fu_586_p1;

assign dense_weights_7_V_address13 = zext_ln1271_2_fu_568_p1;

assign dense_weights_7_V_address14 = zext_ln1271_fu_554_p1;

assign dense_weights_7_V_address15 = i_cast14_fu_531_p1;

assign dense_weights_7_V_address2 = zext_ln1271_13_fu_918_p1;

assign dense_weights_7_V_address3 = zext_ln1271_12_fu_887_p1;

assign dense_weights_7_V_address4 = zext_ln1271_11_fu_852_p1;

assign dense_weights_7_V_address5 = zext_ln1271_10_fu_817_p1;

assign dense_weights_7_V_address6 = zext_ln1271_9_fu_782_p1;

assign dense_weights_7_V_address7 = zext_ln1271_8_fu_751_p1;

assign dense_weights_7_V_address8 = zext_ln1271_7_fu_718_p1;

assign dense_weights_7_V_address9 = zext_ln1271_6_fu_687_p1;

assign grp_exp_17_9_s_fu_435_ap_start = grp_exp_17_9_s_fu_435_ap_start_reg;

assign grp_exp_17_9_s_fu_435_x = ($signed(sext_ln813_fu_1049_p1) + $signed(sext_ln813_1_fu_1053_p1));

assign grp_fu_1064_p0 = sext_ln818_cast_reg_1272;

assign grp_fu_1070_p0 = sext_ln1347_cast_reg_1267;

assign grp_fu_1070_p2 = {{tmp_fu_591_p4}, {8'd0}};

assign grp_fu_1078_p0 = sext_ln1347_1_cast_reg_1262;

assign grp_fu_1078_p2 = {{tmp_s_fu_622_p4}, {8'd0}};

assign grp_fu_1086_p0 = sext_ln1347_2_cast_reg_1257;

assign grp_fu_1086_p2 = {{tmp_13_fu_660_p4}, {8'd0}};

assign grp_fu_1094_p0 = sext_ln1347_3_cast_reg_1252;

assign grp_fu_1094_p2 = {{tmp_14_fu_692_p4}, {8'd0}};

assign grp_fu_1102_p0 = sext_ln1347_4_cast_reg_1247;

assign grp_fu_1102_p2 = {{tmp_15_fu_723_p4}, {8'd0}};

assign grp_fu_1110_p0 = sext_ln1347_5_cast_reg_1242;

assign grp_fu_1110_p2 = {{tmp_16_fu_756_p4}, {8'd0}};

assign grp_fu_1118_p0 = sext_ln1347_6_cast_reg_1237;

assign grp_fu_1118_p2 = {{tmp_17_fu_787_p4}, {8'd0}};

assign grp_fu_1126_p0 = sext_ln1347_7_cast_reg_1232;

assign grp_fu_1126_p2 = {{tmp_18_fu_822_p4}, {8'd0}};

assign grp_fu_1134_p0 = sext_ln1347_8_cast_reg_1227;

assign grp_fu_1134_p2 = {{tmp_19_fu_860_p4}, {8'd0}};

assign grp_fu_1142_p0 = sext_ln1347_9_cast_reg_1222;

assign grp_fu_1142_p2 = {{tmp_20_fu_892_p4}, {8'd0}};

assign grp_fu_1150_p0 = sext_ln1347_10_cast_reg_1217;

assign grp_fu_1150_p2 = {{tmp_21_fu_923_p4}, {8'd0}};

assign grp_fu_1158_p0 = sext_ln1347_11_cast_reg_1212;

assign grp_fu_1158_p2 = {{tmp_22_fu_954_p4}, {8'd0}};

assign grp_fu_1166_p0 = sext_ln1347_12_cast_reg_1207;

assign grp_fu_1166_p2 = {{tmp_23_fu_985_p4}, {8'd0}};

assign grp_fu_1174_p0 = sext_ln1347_13_cast_reg_1202;

assign grp_fu_1174_p2 = {{tmp_24_fu_1006_p4}, {8'd0}};

assign grp_fu_1182_p0 = sext_ln1347_14_cast_reg_1197;

assign grp_fu_1182_p2 = {{tmp_25_fu_1023_p4}, {8'd0}};

assign i_cast12_fu_657_p1 = i_4_reg_1277_pp0_iter5_reg;

assign i_cast13_fu_857_p1 = i_4_reg_1277_pp0_iter11_reg;

assign i_cast14_fu_531_p1 = ap_sig_allocacmp_i_4;

assign i_cast20_fu_541_p1 = i_4_reg_1277;

assign i_cast27_fu_573_p1 = i_4_reg_1277_pp0_iter2_reg;

assign icmp_ln67_fu_519_p2 = ((ap_sig_allocacmp_i_4 == 5'd20) ? 1'b1 : 1'b0);

assign lhs_fu_1040_p1 = grp_fu_1182_p3;

assign lhs_fu_1040_p4 = {{lhs_fu_1040_p1[23:8]}};

assign output_r_address0 = i_cast14_reg_1290_pp0_iter23_reg;

assign output_r_d0 = grp_exp_17_9_s_fu_435_ap_return;

assign sext_ln1271_1_fu_813_p1 = $signed(add_ln70_8_fu_808_p2);

assign sext_ln1271_2_fu_848_p1 = $signed(add_ln70_9_fu_843_p2);

assign sext_ln1271_fu_648_p1 = $signed(add_ln70_4_fu_643_p2);

assign sext_ln1347_10_cast_fu_463_p1 = $signed(sext_ln1347_10);

assign sext_ln1347_11_cast_fu_459_p1 = $signed(sext_ln1347_11);

assign sext_ln1347_12_cast_fu_455_p1 = $signed(sext_ln1347_12);

assign sext_ln1347_13_cast_fu_451_p1 = $signed(sext_ln1347_13);

assign sext_ln1347_14_cast_fu_447_p1 = $signed(sext_ln1347_14);

assign sext_ln1347_1_cast_fu_499_p1 = $signed(sext_ln1347_1);

assign sext_ln1347_2_cast_fu_495_p1 = $signed(sext_ln1347_2);

assign sext_ln1347_3_cast_fu_491_p1 = $signed(sext_ln1347_3);

assign sext_ln1347_4_cast_fu_487_p1 = $signed(sext_ln1347_4);

assign sext_ln1347_5_cast_fu_483_p1 = $signed(sext_ln1347_5);

assign sext_ln1347_6_cast_fu_479_p1 = $signed(sext_ln1347_6);

assign sext_ln1347_7_cast_fu_475_p1 = $signed(sext_ln1347_7);

assign sext_ln1347_8_cast_fu_471_p1 = $signed(sext_ln1347_8);

assign sext_ln1347_9_cast_fu_467_p1 = $signed(sext_ln1347_9);

assign sext_ln1347_cast_fu_503_p1 = $signed(sext_ln1347);

assign sext_ln813_1_fu_1053_p1 = $signed(dense_biases_7_V_q0);

assign sext_ln813_fu_1049_p1 = $signed(lhs_fu_1040_p4);

assign sext_ln818_cast_fu_507_p1 = $signed(sext_ln818);

assign tmp_13_fu_660_p1 = grp_fu_1078_p3;

assign tmp_13_fu_660_p4 = {{tmp_13_fu_660_p1[23:8]}};

assign tmp_14_fu_692_p1 = grp_fu_1086_p3;

assign tmp_14_fu_692_p4 = {{tmp_14_fu_692_p1[23:8]}};

assign tmp_15_fu_723_p1 = grp_fu_1094_p3;

assign tmp_15_fu_723_p4 = {{tmp_15_fu_723_p1[23:8]}};

assign tmp_16_fu_756_p1 = grp_fu_1102_p3;

assign tmp_16_fu_756_p4 = {{tmp_16_fu_756_p1[23:8]}};

assign tmp_17_fu_787_p1 = grp_fu_1110_p3;

assign tmp_17_fu_787_p4 = {{tmp_17_fu_787_p1[23:8]}};

assign tmp_18_fu_822_p1 = grp_fu_1118_p3;

assign tmp_18_fu_822_p4 = {{tmp_18_fu_822_p1[23:8]}};

assign tmp_19_fu_860_p1 = grp_fu_1126_p3;

assign tmp_19_fu_860_p4 = {{tmp_19_fu_860_p1[23:8]}};

assign tmp_20_fu_892_p1 = grp_fu_1134_p3;

assign tmp_20_fu_892_p4 = {{tmp_20_fu_892_p1[23:8]}};

assign tmp_21_fu_923_p1 = grp_fu_1142_p3;

assign tmp_21_fu_923_p4 = {{tmp_21_fu_923_p1[23:8]}};

assign tmp_22_fu_954_p1 = grp_fu_1150_p3;

assign tmp_22_fu_954_p4 = {{tmp_22_fu_954_p1[23:8]}};

assign tmp_23_fu_985_p1 = grp_fu_1158_p3;

assign tmp_23_fu_985_p4 = {{tmp_23_fu_985_p1[23:8]}};

assign tmp_24_fu_1006_p1 = grp_fu_1166_p3;

assign tmp_24_fu_1006_p4 = {{tmp_24_fu_1006_p1[23:8]}};

assign tmp_25_fu_1023_p1 = grp_fu_1174_p3;

assign tmp_25_fu_1023_p4 = {{tmp_25_fu_1023_p1[23:8]}};

assign tmp_fu_591_p4 = {{grp_fu_1064_p2[23:8]}};

assign tmp_s_fu_622_p1 = grp_fu_1070_p3;

assign tmp_s_fu_622_p4 = {{tmp_s_fu_622_p1[23:8]}};

assign zext_ln1271_10_fu_817_p1 = $unsigned(sext_ln1271_1_fu_813_p1);

assign zext_ln1271_11_fu_852_p1 = $unsigned(sext_ln1271_2_fu_848_p1);

assign zext_ln1271_12_fu_887_p1 = add_ln70_10_fu_881_p2;

assign zext_ln1271_13_fu_918_p1 = add_ln70_11_fu_913_p2;

assign zext_ln1271_14_fu_949_p1 = add_ln70_12_fu_944_p2;

assign zext_ln1271_15_fu_980_p1 = add_ln70_13_fu_975_p2;

assign zext_ln1271_2_fu_568_p1 = add_ln70_1_fu_563_p2;

assign zext_ln1271_3_fu_586_p1 = add_ln70_2_fu_580_p2;

assign zext_ln1271_4_fu_617_p1 = add_ln70_3_fu_612_p2;

assign zext_ln1271_5_fu_652_p1 = $unsigned(sext_ln1271_fu_648_p1);

assign zext_ln1271_6_fu_687_p1 = add_ln70_5_fu_681_p2;

assign zext_ln1271_7_fu_718_p1 = add_ln70_6_fu_713_p2;

assign zext_ln1271_8_cast_fu_744_p3 = {{3'd5}, {i_4_reg_1277_pp0_iter7_reg}};

assign zext_ln1271_8_fu_751_p1 = zext_ln1271_8_cast_fu_744_p3;

assign zext_ln1271_9_fu_782_p1 = add_ln70_7_fu_777_p2;

assign zext_ln1271_fu_554_p1 = add_ln70_fu_548_p2;

always @ (posedge ap_clk) begin
    i_cast14_reg_1290[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter1_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter2_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter3_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter4_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter5_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter6_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter7_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter8_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter9_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter10_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter11_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter12_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter13_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter14_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter15_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter16_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter17_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter18_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter19_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter20_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter21_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter22_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast14_reg_1290_pp0_iter23_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    i_cast20_reg_1301[5] <= 1'b0;
    i_cast20_reg_1301_pp0_iter2_reg[5] <= 1'b0;
    i_cast20_reg_1301_pp0_iter3_reg[5] <= 1'b0;
    i_cast20_reg_1301_pp0_iter4_reg[5] <= 1'b0;
    i_cast27_reg_1327[6:5] <= 2'b00;
    i_cast27_reg_1327_pp0_iter4_reg[6:5] <= 2'b00;
    i_cast27_reg_1327_pp0_iter5_reg[6:5] <= 2'b00;
    i_cast27_reg_1327_pp0_iter6_reg[6:5] <= 2'b00;
    i_cast27_reg_1327_pp0_iter7_reg[6:5] <= 2'b00;
    i_cast27_reg_1327_pp0_iter8_reg[6:5] <= 2'b00;
    i_cast27_reg_1327_pp0_iter9_reg[6:5] <= 2'b00;
    i_cast27_reg_1327_pp0_iter10_reg[6:5] <= 2'b00;
    i_cast12_reg_1374[7:5] <= 3'b000;
    i_cast12_reg_1374_pp0_iter7_reg[7:5] <= 3'b000;
    i_cast12_reg_1374_pp0_iter8_reg[7:5] <= 3'b000;
    i_cast13_reg_1470[8:5] <= 4'b0000;
    i_cast13_reg_1470_pp0_iter13_reg[8:5] <= 4'b0000;
    i_cast13_reg_1470_pp0_iter14_reg[8:5] <= 4'b0000;
end

endmodule //gesture_model_dense_output_7_Pipeline_VITIS_LOOP_67_1
