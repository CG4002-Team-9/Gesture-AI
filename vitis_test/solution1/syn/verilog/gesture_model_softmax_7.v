// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gesture_model_softmax_7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [4:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [4:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] input_r_address0;
reg input_r_ce0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_ap_start;
wire    grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_ap_done;
wire    grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_ap_idle;
wire    grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_ap_ready;
wire   [4:0] grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_input_r_address0;
wire    grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_input_r_ce0;
wire   [15:0] grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_sum_V_out;
wire    grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_sum_V_out_ap_vld;
wire    grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_start;
wire    grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_done;
wire    grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_idle;
wire    grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_ready;
wire   [4:0] grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_input_r_address0;
wire    grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_input_r_ce0;
wire   [4:0] grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_output_r_address0;
wire    grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_output_r_ce0;
wire    grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_output_r_we0;
wire   [15:0] grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_output_r_d0;
reg    grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_ap_start_reg;
reg    ap_block_state1_ignore_call2;
wire    ap_CS_fsm_state2;
reg    grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg   [3:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_ap_start_reg = 1'b0;
#0 grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_start_reg = 1'b0;
end

gesture_model_softmax_7_Pipeline_VITIS_LOOP_79_1 grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_ap_start),
    .ap_done(grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_ap_done),
    .ap_idle(grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_ap_idle),
    .ap_ready(grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_ap_ready),
    .input_r_address0(grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_input_r_address0),
    .input_r_ce0(grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_input_r_ce0),
    .input_r_q0(input_r_q0),
    .sum_V_out(grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_sum_V_out),
    .sum_V_out_ap_vld(grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_sum_V_out_ap_vld)
);

gesture_model_softmax_7_Pipeline_VITIS_LOOP_82_2 grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_start),
    .ap_done(grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_done),
    .ap_idle(grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_idle),
    .ap_ready(grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_ready),
    .input_r_address0(grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_input_r_address0),
    .input_r_ce0(grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_input_r_ce0),
    .input_r_q0(input_r_q0),
    .sext_ln1303(grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_sum_V_out),
    .output_r_address0(grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_output_r_address0),
    .output_r_ce0(grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_output_r_ce0),
    .output_r_we0(grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_output_r_we0),
    .output_r_d0(grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_output_r_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_ap_start_reg <= 1'b1;
        end else if ((grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_ap_ready == 1'b1)) begin
            grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_start_reg <= 1'b1;
        end else if ((grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_ready == 1'b1)) begin
            grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        input_r_address0 = grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_input_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_r_address0 = grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_input_r_address0;
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        input_r_ce0 = grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_input_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_r_ce0 = grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_input_r_ce0;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_ignore_call2 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_ap_start = grp_softmax_7_Pipeline_VITIS_LOOP_79_1_fu_24_ap_start_reg;

assign grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_start = grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_ap_start_reg;

assign output_r_address0 = grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_output_r_address0;

assign output_r_ce0 = grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_output_r_ce0;

assign output_r_d0 = grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_output_r_d0;

assign output_r_we0 = grp_softmax_7_Pipeline_VITIS_LOOP_82_2_fu_31_output_r_we0;

endmodule //gesture_model_softmax_7
