// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gesture_model_dense_1_Pipeline_VITIS_LOOP_126_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0,
        output_r_address1,
        output_r_ce1,
        output_r_q1,
        sext_ln1303,
        grp_fu_478_p_din0,
        grp_fu_478_p_din1,
        grp_fu_478_p_dout0,
        grp_fu_478_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;
output  [4:0] output_r_address1;
output   output_r_ce1;
input  [15:0] output_r_q1;
input  [15:0] sext_ln1303;
output  [63:0] grp_fu_478_p_din0;
output  [63:0] grp_fu_478_p_din1;
input  [63:0] grp_fu_478_p_dout0;
output   grp_fu_478_p_ce;

reg ap_idle;
reg output_r_ce0;
reg output_r_we0;
reg output_r_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
wire    ap_block_state42_pp0_stage0_iter41;
wire    ap_block_state43_pp0_stage0_iter42;
wire    ap_block_state44_pp0_stage0_iter43;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln126_fu_168_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire  signed [23:0] sext_ln1303_cast_fu_156_p1;
reg  signed [23:0] sext_ln1303_cast_reg_767;
wire    ap_block_pp0_stage0_11001;
reg   [4:0] output_addr_reg_776;
reg   [4:0] output_addr_reg_776_pp0_iter1_reg;
reg   [4:0] output_addr_reg_776_pp0_iter2_reg;
reg   [4:0] output_addr_reg_776_pp0_iter3_reg;
reg   [4:0] output_addr_reg_776_pp0_iter4_reg;
reg   [4:0] output_addr_reg_776_pp0_iter5_reg;
reg   [4:0] output_addr_reg_776_pp0_iter6_reg;
reg   [4:0] output_addr_reg_776_pp0_iter7_reg;
reg   [4:0] output_addr_reg_776_pp0_iter8_reg;
reg   [4:0] output_addr_reg_776_pp0_iter9_reg;
reg   [4:0] output_addr_reg_776_pp0_iter10_reg;
reg   [4:0] output_addr_reg_776_pp0_iter11_reg;
reg   [4:0] output_addr_reg_776_pp0_iter12_reg;
reg   [4:0] output_addr_reg_776_pp0_iter13_reg;
reg   [4:0] output_addr_reg_776_pp0_iter14_reg;
reg   [4:0] output_addr_reg_776_pp0_iter15_reg;
reg   [4:0] output_addr_reg_776_pp0_iter16_reg;
reg   [4:0] output_addr_reg_776_pp0_iter17_reg;
reg   [4:0] output_addr_reg_776_pp0_iter18_reg;
reg   [4:0] output_addr_reg_776_pp0_iter19_reg;
reg   [4:0] output_addr_reg_776_pp0_iter20_reg;
reg   [4:0] output_addr_reg_776_pp0_iter21_reg;
reg   [4:0] output_addr_reg_776_pp0_iter22_reg;
reg   [4:0] output_addr_reg_776_pp0_iter23_reg;
reg   [4:0] output_addr_reg_776_pp0_iter24_reg;
reg   [4:0] output_addr_reg_776_pp0_iter25_reg;
reg   [4:0] output_addr_reg_776_pp0_iter26_reg;
reg   [4:0] output_addr_reg_776_pp0_iter27_reg;
reg   [4:0] output_addr_reg_776_pp0_iter28_reg;
reg   [4:0] output_addr_reg_776_pp0_iter29_reg;
reg   [4:0] output_addr_reg_776_pp0_iter30_reg;
reg   [4:0] output_addr_reg_776_pp0_iter31_reg;
reg   [4:0] output_addr_reg_776_pp0_iter32_reg;
reg   [4:0] output_addr_reg_776_pp0_iter33_reg;
reg   [4:0] output_addr_reg_776_pp0_iter34_reg;
reg   [4:0] output_addr_reg_776_pp0_iter35_reg;
reg   [4:0] output_addr_reg_776_pp0_iter36_reg;
reg   [4:0] output_addr_reg_776_pp0_iter37_reg;
reg   [4:0] output_addr_reg_776_pp0_iter38_reg;
reg   [4:0] output_addr_reg_776_pp0_iter39_reg;
reg   [4:0] output_addr_reg_776_pp0_iter40_reg;
reg   [4:0] output_addr_reg_776_pp0_iter41_reg;
reg   [4:0] output_addr_reg_776_pp0_iter42_reg;
reg   [15:0] p_Val2_s_reg_782;
reg   [0:0] p_Result_8_reg_788;
wire   [15:0] tmp_V_fu_198_p2;
reg   [15:0] tmp_V_reg_794;
wire   [63:0] select_ln1040_fu_491_p3;
reg   [63:0] select_ln1040_reg_799;
reg   [63:0] d_reg_804;
wire   [63:0] i_4_cast_fu_180_p1;
wire    ap_block_pp0_stage0;
reg   [4:0] i_fu_124;
wire   [4:0] add_ln126_fu_174_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_i_1;
wire   [15:0] tmp_V_2_fu_209_p3;
reg   [15:0] p_Result_s_fu_214_p4;
wire   [16:0] p_Result_9_fu_224_p3;
wire  signed [31:0] sext_ln1198_fu_232_p1;
reg   [31:0] l_fu_236_p3;
wire   [31:0] sub_ln1049_fu_244_p2;
wire   [31:0] lsb_index_fu_254_p2;
wire   [30:0] tmp_fu_260_p4;
wire   [3:0] trunc_ln1052_fu_276_p1;
wire   [3:0] sub_ln1052_fu_280_p2;
wire   [15:0] zext_ln1052_fu_286_p1;
wire   [15:0] lshr_ln1052_fu_290_p2;
wire   [15:0] p_Result_2_fu_296_p2;
wire   [0:0] icmp_ln1051_fu_270_p2;
wire   [0:0] icmp_ln1052_fu_302_p2;
wire   [0:0] tmp_1_fu_314_p3;
wire   [15:0] trunc_ln1049_fu_250_p1;
wire   [15:0] add_ln1054_fu_328_p2;
wire   [0:0] p_Result_3_fu_334_p3;
wire   [0:0] xor_ln1054_fu_322_p2;
wire   [0:0] and_ln1054_fu_342_p2;
wire   [0:0] a_fu_308_p2;
wire   [0:0] or_ln1054_fu_348_p2;
wire   [31:0] add_ln1063_fu_372_p2;
wire   [63:0] zext_ln1062_fu_362_p1;
wire   [63:0] zext_ln1063_fu_378_p1;
wire   [31:0] sub_ln1064_fu_388_p2;
wire   [63:0] zext_ln1064_fu_394_p1;
wire   [0:0] icmp_ln1063_fu_366_p2;
wire   [63:0] lshr_ln1063_fu_382_p2;
wire   [63:0] shl_ln1064_fu_398_p2;
wire   [1:0] or_ln1054_1_fu_354_p3;
wire   [63:0] m_2_fu_404_p3;
wire   [63:0] zext_ln1066_fu_412_p1;
wire   [63:0] m_3_fu_416_p2;
wire   [62:0] m_fu_422_p4;
wire   [0:0] p_Result_4_fu_436_p3;
wire   [10:0] trunc_ln1048_fu_452_p1;
wire   [10:0] sub_ln1070_fu_456_p2;
wire   [10:0] select_ln1048_fu_444_p3;
wire   [10:0] add_ln1076_fu_462_p2;
wire   [63:0] zext_ln1067_fu_432_p1;
wire   [11:0] tmp_5_fu_468_p3;
wire   [63:0] p_Result_10_fu_475_p5;
wire   [0:0] icmp_ln1040_fu_204_p2;
wire   [63:0] bitcast_ln756_fu_487_p1;
wire   [63:0] ireg_fu_499_p1;
wire   [10:0] exp_tmp_fu_514_p4;
wire   [51:0] trunc_ln554_fu_528_p1;
wire   [52:0] p_Result_12_fu_532_p3;
wire   [53:0] zext_ln558_fu_540_p1;
wire   [0:0] p_Result_11_fu_506_p3;
wire   [53:0] man_V_1_fu_544_p2;
wire   [62:0] trunc_ln544_fu_502_p1;
wire   [11:0] zext_ln455_fu_524_p1;
wire   [11:0] F2_fu_564_p2;
wire   [0:0] icmp_ln570_fu_570_p2;
wire   [11:0] add_ln570_fu_576_p2;
wire   [11:0] sub_ln570_fu_582_p2;
wire  signed [11:0] sh_amt_fu_588_p3;
wire   [53:0] man_V_2_fu_550_p3;
wire  signed [31:0] sext_ln570_fu_596_p1;
wire   [53:0] zext_ln575_fu_616_p1;
wire   [7:0] tmp_6_fu_634_p4;
wire   [15:0] trunc_ln572_fu_606_p1;
wire   [15:0] sext_ln570cast_fu_650_p1;
wire   [0:0] icmp_ln560_fu_558_p2;
wire   [0:0] icmp_ln571_fu_600_p2;
wire   [0:0] xor_ln560_fu_660_p2;
wire   [0:0] or_ln571_fu_672_p2;
wire   [0:0] xor_ln571_fu_678_p2;
wire   [53:0] ashr_ln575_fu_620_p2;
wire   [0:0] tmp_4_fu_626_p3;
wire   [0:0] icmp_ln574_fu_610_p2;
wire   [15:0] trunc_ln838_fu_690_p1;
wire   [15:0] select_ln574_fu_694_p3;
wire   [0:0] icmp_ln592_fu_644_p2;
wire   [15:0] shl_ln593_fu_654_p2;
wire   [0:0] and_ln571_fu_666_p2;
wire   [15:0] select_ln592_fu_710_p3;
wire   [0:0] and_ln570_fu_684_p2;
wire   [15:0] select_ln574_1_fu_702_p3;
wire   [15:0] select_ln571_fu_718_p3;
wire   [15:0] select_ln570_fu_726_p3;
wire   [15:0] select_ln560_fu_734_p3;
wire   [23:0] grp_fu_750_p0;
wire  signed [15:0] grp_fu_750_p1;
wire   [15:0] grp_fu_750_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_done_reg = 1'b0;
end

gesture_model_sdiv_24ns_16s_16_28_1 #(
    .ID( 1 ),
    .NUM_STAGE( 28 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
sdiv_24ns_16s_16_28_1_U105(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_750_p0),
    .din1(grp_fu_750_p1),
    .ce(1'b1),
    .dout(grp_fu_750_p2)
);

gesture_model_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter42_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln126_fu_168_p2 == 1'd0))) begin
            i_fu_124 <= add_ln126_fu_174_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_124 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        d_reg_804 <= grp_fu_478_p_dout0;
        output_addr_reg_776_pp0_iter10_reg <= output_addr_reg_776_pp0_iter9_reg;
        output_addr_reg_776_pp0_iter11_reg <= output_addr_reg_776_pp0_iter10_reg;
        output_addr_reg_776_pp0_iter12_reg <= output_addr_reg_776_pp0_iter11_reg;
        output_addr_reg_776_pp0_iter13_reg <= output_addr_reg_776_pp0_iter12_reg;
        output_addr_reg_776_pp0_iter14_reg <= output_addr_reg_776_pp0_iter13_reg;
        output_addr_reg_776_pp0_iter15_reg <= output_addr_reg_776_pp0_iter14_reg;
        output_addr_reg_776_pp0_iter16_reg <= output_addr_reg_776_pp0_iter15_reg;
        output_addr_reg_776_pp0_iter17_reg <= output_addr_reg_776_pp0_iter16_reg;
        output_addr_reg_776_pp0_iter18_reg <= output_addr_reg_776_pp0_iter17_reg;
        output_addr_reg_776_pp0_iter19_reg <= output_addr_reg_776_pp0_iter18_reg;
        output_addr_reg_776_pp0_iter20_reg <= output_addr_reg_776_pp0_iter19_reg;
        output_addr_reg_776_pp0_iter21_reg <= output_addr_reg_776_pp0_iter20_reg;
        output_addr_reg_776_pp0_iter22_reg <= output_addr_reg_776_pp0_iter21_reg;
        output_addr_reg_776_pp0_iter23_reg <= output_addr_reg_776_pp0_iter22_reg;
        output_addr_reg_776_pp0_iter24_reg <= output_addr_reg_776_pp0_iter23_reg;
        output_addr_reg_776_pp0_iter25_reg <= output_addr_reg_776_pp0_iter24_reg;
        output_addr_reg_776_pp0_iter26_reg <= output_addr_reg_776_pp0_iter25_reg;
        output_addr_reg_776_pp0_iter27_reg <= output_addr_reg_776_pp0_iter26_reg;
        output_addr_reg_776_pp0_iter28_reg <= output_addr_reg_776_pp0_iter27_reg;
        output_addr_reg_776_pp0_iter29_reg <= output_addr_reg_776_pp0_iter28_reg;
        output_addr_reg_776_pp0_iter2_reg <= output_addr_reg_776_pp0_iter1_reg;
        output_addr_reg_776_pp0_iter30_reg <= output_addr_reg_776_pp0_iter29_reg;
        output_addr_reg_776_pp0_iter31_reg <= output_addr_reg_776_pp0_iter30_reg;
        output_addr_reg_776_pp0_iter32_reg <= output_addr_reg_776_pp0_iter31_reg;
        output_addr_reg_776_pp0_iter33_reg <= output_addr_reg_776_pp0_iter32_reg;
        output_addr_reg_776_pp0_iter34_reg <= output_addr_reg_776_pp0_iter33_reg;
        output_addr_reg_776_pp0_iter35_reg <= output_addr_reg_776_pp0_iter34_reg;
        output_addr_reg_776_pp0_iter36_reg <= output_addr_reg_776_pp0_iter35_reg;
        output_addr_reg_776_pp0_iter37_reg <= output_addr_reg_776_pp0_iter36_reg;
        output_addr_reg_776_pp0_iter38_reg <= output_addr_reg_776_pp0_iter37_reg;
        output_addr_reg_776_pp0_iter39_reg <= output_addr_reg_776_pp0_iter38_reg;
        output_addr_reg_776_pp0_iter3_reg <= output_addr_reg_776_pp0_iter2_reg;
        output_addr_reg_776_pp0_iter40_reg <= output_addr_reg_776_pp0_iter39_reg;
        output_addr_reg_776_pp0_iter41_reg <= output_addr_reg_776_pp0_iter40_reg;
        output_addr_reg_776_pp0_iter42_reg <= output_addr_reg_776_pp0_iter41_reg;
        output_addr_reg_776_pp0_iter4_reg <= output_addr_reg_776_pp0_iter3_reg;
        output_addr_reg_776_pp0_iter5_reg <= output_addr_reg_776_pp0_iter4_reg;
        output_addr_reg_776_pp0_iter6_reg <= output_addr_reg_776_pp0_iter5_reg;
        output_addr_reg_776_pp0_iter7_reg <= output_addr_reg_776_pp0_iter6_reg;
        output_addr_reg_776_pp0_iter8_reg <= output_addr_reg_776_pp0_iter7_reg;
        output_addr_reg_776_pp0_iter9_reg <= output_addr_reg_776_pp0_iter8_reg;
        select_ln1040_reg_799 <= select_ln1040_fu_491_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        output_addr_reg_776_pp0_iter1_reg <= output_addr_reg_776;
        p_Result_8_reg_788 <= output_r_q1[32'd15];
        sext_ln1303_cast_reg_767 <= sext_ln1303_cast_fu_156_p1;
        tmp_V_reg_794 <= tmp_V_fu_198_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln126_fu_168_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_addr_reg_776 <= i_4_cast_fu_180_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Val2_s_reg_782 <= output_r_q1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln126_fu_168_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter42_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 5'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_124;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter43 == 1'b1))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_r_ce1 = 1'b1;
    end else begin
        output_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter43 == 1'b1))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_564_p2 = (12'd1075 - zext_ln455_fu_524_p1);

assign a_fu_308_p2 = (icmp_ln1052_fu_302_p2 & icmp_ln1051_fu_270_p2);

assign add_ln1054_fu_328_p2 = ($signed(trunc_ln1049_fu_250_p1) + $signed(16'd65483));

assign add_ln1063_fu_372_p2 = ($signed(sub_ln1049_fu_244_p2) + $signed(32'd4294967242));

assign add_ln1076_fu_462_p2 = (sub_ln1070_fu_456_p2 + select_ln1048_fu_444_p3);

assign add_ln126_fu_174_p2 = (ap_sig_allocacmp_i_1 + 5'd1);

assign add_ln570_fu_576_p2 = ($signed(F2_fu_564_p2) + $signed(12'd4088));

assign and_ln1054_fu_342_p2 = (xor_ln1054_fu_322_p2 & p_Result_3_fu_334_p3);

assign and_ln570_fu_684_p2 = (xor_ln571_fu_678_p2 & icmp_ln570_fu_570_p2);

assign and_ln571_fu_666_p2 = (xor_ln560_fu_660_p2 & icmp_ln571_fu_600_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ashr_ln575_fu_620_p2 = $signed(man_V_2_fu_550_p3) >>> zext_ln575_fu_616_p1;

assign bitcast_ln756_fu_487_p1 = p_Result_10_fu_475_p5;

assign exp_tmp_fu_514_p4 = {{ireg_fu_499_p1[62:52]}};

assign grp_fu_478_p_ce = 1'b1;

assign grp_fu_478_p_din0 = 64'd0;

assign grp_fu_478_p_din1 = select_ln1040_reg_799;

assign grp_fu_750_p0 = {{select_ln560_fu_734_p3}, {8'd0}};

assign grp_fu_750_p1 = sext_ln1303_cast_reg_767;

assign i_4_cast_fu_180_p1 = ap_sig_allocacmp_i_1;

assign icmp_ln1040_fu_204_p2 = ((p_Val2_s_reg_782 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1051_fu_270_p2 = (($signed(tmp_fu_260_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1052_fu_302_p2 = ((p_Result_2_fu_296_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1063_fu_366_p2 = (($signed(lsb_index_fu_254_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln126_fu_168_p2 = ((ap_sig_allocacmp_i_1 == 5'd20) ? 1'b1 : 1'b0);

assign icmp_ln560_fu_558_p2 = ((trunc_ln544_fu_502_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln570_fu_570_p2 = (($signed(F2_fu_564_p2) > $signed(12'd8)) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_600_p2 = ((F2_fu_564_p2 == 12'd8) ? 1'b1 : 1'b0);

assign icmp_ln574_fu_610_p2 = ((sh_amt_fu_588_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln592_fu_644_p2 = ((tmp_6_fu_634_p4 == 8'd0) ? 1'b1 : 1'b0);

assign ireg_fu_499_p1 = d_reg_804;


always @ (sext_ln1198_fu_232_p1) begin
    if (sext_ln1198_fu_232_p1[0] == 1'b1) begin
        l_fu_236_p3 = 32'd0;
    end else if (sext_ln1198_fu_232_p1[1] == 1'b1) begin
        l_fu_236_p3 = 32'd1;
    end else if (sext_ln1198_fu_232_p1[2] == 1'b1) begin
        l_fu_236_p3 = 32'd2;
    end else if (sext_ln1198_fu_232_p1[3] == 1'b1) begin
        l_fu_236_p3 = 32'd3;
    end else if (sext_ln1198_fu_232_p1[4] == 1'b1) begin
        l_fu_236_p3 = 32'd4;
    end else if (sext_ln1198_fu_232_p1[5] == 1'b1) begin
        l_fu_236_p3 = 32'd5;
    end else if (sext_ln1198_fu_232_p1[6] == 1'b1) begin
        l_fu_236_p3 = 32'd6;
    end else if (sext_ln1198_fu_232_p1[7] == 1'b1) begin
        l_fu_236_p3 = 32'd7;
    end else if (sext_ln1198_fu_232_p1[8] == 1'b1) begin
        l_fu_236_p3 = 32'd8;
    end else if (sext_ln1198_fu_232_p1[9] == 1'b1) begin
        l_fu_236_p3 = 32'd9;
    end else if (sext_ln1198_fu_232_p1[10] == 1'b1) begin
        l_fu_236_p3 = 32'd10;
    end else if (sext_ln1198_fu_232_p1[11] == 1'b1) begin
        l_fu_236_p3 = 32'd11;
    end else if (sext_ln1198_fu_232_p1[12] == 1'b1) begin
        l_fu_236_p3 = 32'd12;
    end else if (sext_ln1198_fu_232_p1[13] == 1'b1) begin
        l_fu_236_p3 = 32'd13;
    end else if (sext_ln1198_fu_232_p1[14] == 1'b1) begin
        l_fu_236_p3 = 32'd14;
    end else if (sext_ln1198_fu_232_p1[15] == 1'b1) begin
        l_fu_236_p3 = 32'd15;
    end else if (sext_ln1198_fu_232_p1[16] == 1'b1) begin
        l_fu_236_p3 = 32'd16;
    end else if (sext_ln1198_fu_232_p1[17] == 1'b1) begin
        l_fu_236_p3 = 32'd17;
    end else if (sext_ln1198_fu_232_p1[18] == 1'b1) begin
        l_fu_236_p3 = 32'd18;
    end else if (sext_ln1198_fu_232_p1[19] == 1'b1) begin
        l_fu_236_p3 = 32'd19;
    end else if (sext_ln1198_fu_232_p1[20] == 1'b1) begin
        l_fu_236_p3 = 32'd20;
    end else if (sext_ln1198_fu_232_p1[21] == 1'b1) begin
        l_fu_236_p3 = 32'd21;
    end else if (sext_ln1198_fu_232_p1[22] == 1'b1) begin
        l_fu_236_p3 = 32'd22;
    end else if (sext_ln1198_fu_232_p1[23] == 1'b1) begin
        l_fu_236_p3 = 32'd23;
    end else if (sext_ln1198_fu_232_p1[24] == 1'b1) begin
        l_fu_236_p3 = 32'd24;
    end else if (sext_ln1198_fu_232_p1[25] == 1'b1) begin
        l_fu_236_p3 = 32'd25;
    end else if (sext_ln1198_fu_232_p1[26] == 1'b1) begin
        l_fu_236_p3 = 32'd26;
    end else if (sext_ln1198_fu_232_p1[27] == 1'b1) begin
        l_fu_236_p3 = 32'd27;
    end else if (sext_ln1198_fu_232_p1[28] == 1'b1) begin
        l_fu_236_p3 = 32'd28;
    end else if (sext_ln1198_fu_232_p1[29] == 1'b1) begin
        l_fu_236_p3 = 32'd29;
    end else if (sext_ln1198_fu_232_p1[30] == 1'b1) begin
        l_fu_236_p3 = 32'd30;
    end else if (sext_ln1198_fu_232_p1[31] == 1'b1) begin
        l_fu_236_p3 = 32'd31;
    end else begin
        l_fu_236_p3 = 32'd32;
    end
end

assign lsb_index_fu_254_p2 = ($signed(sub_ln1049_fu_244_p2) + $signed(32'd4294967243));

assign lshr_ln1052_fu_290_p2 = 16'd65535 >> zext_ln1052_fu_286_p1;

assign lshr_ln1063_fu_382_p2 = zext_ln1062_fu_362_p1 >> zext_ln1063_fu_378_p1;

assign m_2_fu_404_p3 = ((icmp_ln1063_fu_366_p2[0:0] == 1'b1) ? lshr_ln1063_fu_382_p2 : shl_ln1064_fu_398_p2);

assign m_3_fu_416_p2 = (m_2_fu_404_p3 + zext_ln1066_fu_412_p1);

assign m_fu_422_p4 = {{m_3_fu_416_p2[63:1]}};

assign man_V_1_fu_544_p2 = (54'd0 - zext_ln558_fu_540_p1);

assign man_V_2_fu_550_p3 = ((p_Result_11_fu_506_p3[0:0] == 1'b1) ? man_V_1_fu_544_p2 : zext_ln558_fu_540_p1);

assign or_ln1054_1_fu_354_p3 = {{1'd0}, {or_ln1054_fu_348_p2}};

assign or_ln1054_fu_348_p2 = (and_ln1054_fu_342_p2 | a_fu_308_p2);

assign or_ln571_fu_672_p2 = (icmp_ln571_fu_600_p2 | icmp_ln560_fu_558_p2);

assign output_r_address0 = output_addr_reg_776_pp0_iter42_reg;

assign output_r_address1 = i_4_cast_fu_180_p1;

assign output_r_d0 = grp_fu_750_p2[15:0];

assign p_Result_10_fu_475_p5 = {{tmp_5_fu_468_p3}, {zext_ln1067_fu_432_p1[51:0]}};

assign p_Result_11_fu_506_p3 = ireg_fu_499_p1[32'd63];

assign p_Result_12_fu_532_p3 = {{1'd1}, {trunc_ln554_fu_528_p1}};

assign p_Result_2_fu_296_p2 = (tmp_V_2_fu_209_p3 & lshr_ln1052_fu_290_p2);

assign p_Result_3_fu_334_p3 = tmp_V_2_fu_209_p3[add_ln1054_fu_328_p2];

assign p_Result_4_fu_436_p3 = m_3_fu_416_p2[32'd54];

assign p_Result_9_fu_224_p3 = {{1'd1}, {p_Result_s_fu_214_p4}};

integer ap_tvar_int_0;

always @ (tmp_V_2_fu_209_p3) begin
    for (ap_tvar_int_0 = 16 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 15 - 0) begin
            p_Result_s_fu_214_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_214_p4[ap_tvar_int_0] = tmp_V_2_fu_209_p3[15 - ap_tvar_int_0];
        end
    end
end

assign select_ln1040_fu_491_p3 = ((icmp_ln1040_fu_204_p2[0:0] == 1'b1) ? 64'd0 : bitcast_ln756_fu_487_p1);

assign select_ln1048_fu_444_p3 = ((p_Result_4_fu_436_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln560_fu_734_p3 = ((icmp_ln560_fu_558_p2[0:0] == 1'b1) ? 16'd0 : select_ln570_fu_726_p3);

assign select_ln570_fu_726_p3 = ((and_ln570_fu_684_p2[0:0] == 1'b1) ? select_ln574_1_fu_702_p3 : select_ln571_fu_718_p3);

assign select_ln571_fu_718_p3 = ((and_ln571_fu_666_p2[0:0] == 1'b1) ? trunc_ln572_fu_606_p1 : select_ln592_fu_710_p3);

assign select_ln574_1_fu_702_p3 = ((icmp_ln574_fu_610_p2[0:0] == 1'b1) ? trunc_ln838_fu_690_p1 : select_ln574_fu_694_p3);

assign select_ln574_fu_694_p3 = ((tmp_4_fu_626_p3[0:0] == 1'b1) ? 16'd65535 : 16'd0);

assign select_ln592_fu_710_p3 = ((icmp_ln592_fu_644_p2[0:0] == 1'b1) ? shl_ln593_fu_654_p2 : 16'd0);

assign sext_ln1198_fu_232_p1 = $signed(p_Result_9_fu_224_p3);

assign sext_ln1303_cast_fu_156_p1 = $signed(sext_ln1303);

assign sext_ln570_fu_596_p1 = sh_amt_fu_588_p3;

assign sext_ln570cast_fu_650_p1 = sext_ln570_fu_596_p1[15:0];

assign sh_amt_fu_588_p3 = ((icmp_ln570_fu_570_p2[0:0] == 1'b1) ? add_ln570_fu_576_p2 : sub_ln570_fu_582_p2);

assign shl_ln1064_fu_398_p2 = zext_ln1062_fu_362_p1 << zext_ln1064_fu_394_p1;

assign shl_ln593_fu_654_p2 = trunc_ln572_fu_606_p1 << sext_ln570cast_fu_650_p1;

assign sub_ln1049_fu_244_p2 = (32'd16 - l_fu_236_p3);

assign sub_ln1052_fu_280_p2 = (4'd6 - trunc_ln1052_fu_276_p1);

assign sub_ln1064_fu_388_p2 = (32'd54 - sub_ln1049_fu_244_p2);

assign sub_ln1070_fu_456_p2 = (11'd8 - trunc_ln1048_fu_452_p1);

assign sub_ln570_fu_582_p2 = (12'd8 - F2_fu_564_p2);

assign tmp_1_fu_314_p3 = lsb_index_fu_254_p2[32'd31];

assign tmp_4_fu_626_p3 = ireg_fu_499_p1[32'd63];

assign tmp_5_fu_468_p3 = {{p_Result_8_reg_788}, {add_ln1076_fu_462_p2}};

assign tmp_6_fu_634_p4 = {{sh_amt_fu_588_p3[11:4]}};

assign tmp_V_2_fu_209_p3 = ((p_Result_8_reg_788[0:0] == 1'b1) ? tmp_V_reg_794 : p_Val2_s_reg_782);

assign tmp_V_fu_198_p2 = (16'd0 - output_r_q1);

assign tmp_fu_260_p4 = {{lsb_index_fu_254_p2[31:1]}};

assign trunc_ln1048_fu_452_p1 = l_fu_236_p3[10:0];

assign trunc_ln1049_fu_250_p1 = sub_ln1049_fu_244_p2[15:0];

assign trunc_ln1052_fu_276_p1 = sub_ln1049_fu_244_p2[3:0];

assign trunc_ln544_fu_502_p1 = ireg_fu_499_p1[62:0];

assign trunc_ln554_fu_528_p1 = ireg_fu_499_p1[51:0];

assign trunc_ln572_fu_606_p1 = man_V_2_fu_550_p3[15:0];

assign trunc_ln838_fu_690_p1 = ashr_ln575_fu_620_p2[15:0];

assign xor_ln1054_fu_322_p2 = (tmp_1_fu_314_p3 ^ 1'd1);

assign xor_ln560_fu_660_p2 = (icmp_ln560_fu_558_p2 ^ 1'd1);

assign xor_ln571_fu_678_p2 = (or_ln571_fu_672_p2 ^ 1'd1);

assign zext_ln1052_fu_286_p1 = sub_ln1052_fu_280_p2;

assign zext_ln1062_fu_362_p1 = tmp_V_2_fu_209_p3;

assign zext_ln1063_fu_378_p1 = add_ln1063_fu_372_p2;

assign zext_ln1064_fu_394_p1 = sub_ln1064_fu_388_p2;

assign zext_ln1066_fu_412_p1 = or_ln1054_1_fu_354_p3;

assign zext_ln1067_fu_432_p1 = m_fu_422_p4;

assign zext_ln455_fu_524_p1 = exp_tmp_fu_514_p4;

assign zext_ln558_fu_540_p1 = p_Result_12_fu_532_p3;

assign zext_ln575_fu_616_p1 = $unsigned(sext_ln570_fu_596_p1);

endmodule //gesture_model_dense_1_Pipeline_VITIS_LOOP_126_4
