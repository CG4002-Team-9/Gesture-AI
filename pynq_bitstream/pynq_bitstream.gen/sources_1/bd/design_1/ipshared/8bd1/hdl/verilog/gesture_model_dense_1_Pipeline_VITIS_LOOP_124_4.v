// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gesture_model_dense_1_Pipeline_VITIS_LOOP_124_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0,
        output_r_address1,
        output_r_ce1,
        output_r_q1,
        conv_i,
        grp_fu_478_p_din0,
        grp_fu_478_p_din1,
        grp_fu_478_p_dout0,
        grp_fu_478_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [23:0] output_r_d0;
output  [4:0] output_r_address1;
output   output_r_ce1;
input  [23:0] output_r_q1;
input  [23:0] conv_i;
output  [63:0] grp_fu_478_p_din0;
output  [63:0] grp_fu_478_p_din1;
input  [63:0] grp_fu_478_p_dout0;
output   grp_fu_478_p_ce;

reg ap_idle;
reg output_r_ce0;
reg output_r_we0;
reg output_r_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_enable_reg_pp0_iter60;
reg    ap_enable_reg_pp0_iter61;
reg    ap_enable_reg_pp0_iter62;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
wire    ap_block_state42_pp0_stage0_iter41;
wire    ap_block_state43_pp0_stage0_iter42;
wire    ap_block_state44_pp0_stage0_iter43;
wire    ap_block_state45_pp0_stage0_iter44;
wire    ap_block_state46_pp0_stage0_iter45;
wire    ap_block_state47_pp0_stage0_iter46;
wire    ap_block_state48_pp0_stage0_iter47;
wire    ap_block_state49_pp0_stage0_iter48;
wire    ap_block_state50_pp0_stage0_iter49;
wire    ap_block_state51_pp0_stage0_iter50;
wire    ap_block_state52_pp0_stage0_iter51;
wire    ap_block_state53_pp0_stage0_iter52;
wire    ap_block_state54_pp0_stage0_iter53;
wire    ap_block_state55_pp0_stage0_iter54;
wire    ap_block_state56_pp0_stage0_iter55;
wire    ap_block_state57_pp0_stage0_iter56;
wire    ap_block_state58_pp0_stage0_iter57;
wire    ap_block_state59_pp0_stage0_iter58;
wire    ap_block_state60_pp0_stage0_iter59;
wire    ap_block_state61_pp0_stage0_iter60;
wire    ap_block_state62_pp0_stage0_iter61;
wire    ap_block_state63_pp0_stage0_iter62;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln124_fu_196_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire  signed [41:0] conv_i_cast_fu_184_p1;
reg  signed [41:0] conv_i_cast_reg_1245;
wire    ap_block_pp0_stage0_11001;
reg   [4:0] output_addr_reg_1254;
reg   [4:0] output_addr_reg_1254_pp0_iter1_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter2_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter3_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter4_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter5_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter6_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter7_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter8_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter9_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter10_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter11_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter12_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter13_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter14_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter15_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter16_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter17_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter18_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter19_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter20_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter21_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter22_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter23_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter24_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter25_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter26_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter27_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter28_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter29_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter30_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter31_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter32_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter33_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter34_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter35_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter36_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter37_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter38_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter39_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter40_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter41_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter42_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter43_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter44_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter45_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter46_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter47_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter48_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter49_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter50_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter51_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter52_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter53_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter54_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter55_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter56_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter57_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter58_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter59_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter60_reg;
reg   [4:0] output_addr_reg_1254_pp0_iter61_reg;
reg   [23:0] p_Val2_s_reg_1260;
reg   [0:0] p_Result_11_reg_1266;
wire   [23:0] tmp_V_fu_226_p2;
reg   [23:0] tmp_V_reg_1272;
wire   [63:0] select_ln1040_fu_519_p3;
reg   [63:0] select_ln1040_reg_1277;
reg   [63:0] d_reg_1282;
wire   [0:0] neg_src_1_fu_534_p3;
reg   [0:0] neg_src_1_reg_1287;
wire   [0:0] icmp_ln560_fu_586_p2;
reg   [0:0] icmp_ln560_reg_1292;
wire   [23:0] p_Val2_4_fu_760_p3;
reg   [23:0] p_Val2_4_reg_1298;
wire   [0:0] icmp_ln600_fu_774_p2;
reg   [0:0] icmp_ln600_reg_1303;
wire   [0:0] p_Result_15_fu_800_p3;
reg   [0:0] p_Result_15_reg_1308;
wire   [0:0] icmp_ln610_fu_808_p2;
reg   [0:0] icmp_ln610_reg_1314;
wire   [0:0] deleted_ones_fu_994_p3;
reg   [0:0] deleted_ones_reg_1319;
wire   [0:0] overflow_fu_1020_p2;
reg   [0:0] overflow_reg_1324;
wire   [0:0] icmp_ln652_fu_1030_p2;
reg   [0:0] icmp_ln652_reg_1330;
wire   [63:0] i_4_cast_fu_208_p1;
wire    ap_block_pp0_stage0;
reg   [4:0] i_fu_152;
wire   [4:0] add_ln124_fu_202_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_i_1;
wire   [23:0] tmp_V_2_fu_237_p3;
reg   [23:0] p_Result_s_fu_242_p4;
wire   [24:0] p_Result_12_fu_252_p3;
wire  signed [31:0] sext_ln1198_fu_260_p1;
reg   [31:0] l_fu_264_p3;
wire   [31:0] sub_ln1049_fu_272_p2;
wire   [31:0] lsb_index_fu_282_p2;
wire   [30:0] tmp_fu_288_p4;
wire   [4:0] trunc_ln1052_fu_304_p1;
wire   [4:0] sub_ln1052_fu_308_p2;
wire   [23:0] zext_ln1052_fu_314_p1;
wire   [23:0] lshr_ln1052_fu_318_p2;
wire   [23:0] p_Result_2_fu_324_p2;
wire   [0:0] icmp_ln1051_fu_298_p2;
wire   [0:0] icmp_ln1052_fu_330_p2;
wire   [0:0] tmp_1_fu_342_p3;
wire   [23:0] trunc_ln1049_fu_278_p1;
wire   [23:0] add_ln1054_fu_356_p2;
wire   [0:0] p_Result_3_fu_362_p3;
wire   [0:0] xor_ln1054_fu_350_p2;
wire   [0:0] and_ln1054_fu_370_p2;
wire   [0:0] a_fu_336_p2;
wire   [0:0] or_ln1054_fu_376_p2;
wire   [31:0] add_ln1063_fu_400_p2;
wire   [63:0] zext_ln1062_fu_390_p1;
wire   [63:0] zext_ln1063_fu_406_p1;
wire   [31:0] sub_ln1064_fu_416_p2;
wire   [63:0] zext_ln1064_fu_422_p1;
wire   [0:0] icmp_ln1063_fu_394_p2;
wire   [63:0] lshr_ln1063_fu_410_p2;
wire   [63:0] shl_ln1064_fu_426_p2;
wire   [1:0] or_ln1054_1_fu_382_p3;
wire   [63:0] m_2_fu_432_p3;
wire   [63:0] zext_ln1066_fu_440_p1;
wire   [63:0] m_3_fu_444_p2;
wire   [62:0] m_fu_450_p4;
wire   [0:0] p_Result_4_fu_464_p3;
wire   [10:0] trunc_ln1048_fu_480_p1;
wire   [10:0] sub_ln1070_fu_484_p2;
wire   [10:0] select_ln1048_fu_472_p3;
wire   [10:0] add_ln1076_fu_490_p2;
wire   [63:0] zext_ln1067_fu_460_p1;
wire   [11:0] tmp_s_fu_496_p3;
wire   [63:0] p_Result_13_fu_503_p5;
wire   [0:0] icmp_ln1040_fu_232_p2;
wire   [63:0] bitcast_ln756_fu_515_p1;
wire   [63:0] ireg_fu_527_p1;
wire   [10:0] exp_tmp_fu_542_p4;
wire   [51:0] trunc_ln554_fu_556_p1;
wire   [52:0] p_Result_14_fu_560_p3;
wire   [53:0] zext_ln558_fu_568_p1;
wire   [53:0] man_V_1_fu_572_p2;
wire   [62:0] trunc_ln544_fu_530_p1;
wire   [11:0] zext_ln455_fu_552_p1;
wire   [11:0] F2_fu_592_p2;
wire   [0:0] icmp_ln570_fu_598_p2;
wire   [11:0] add_ln570_fu_604_p2;
wire   [11:0] sub_ln570_fu_610_p2;
wire  signed [11:0] sh_amt_fu_616_p3;
wire   [53:0] man_V_fu_578_p3;
wire   [5:0] trunc_ln575_fu_650_p1;
wire   [53:0] zext_ln575_fu_654_p1;
wire   [53:0] ashr_ln575_fu_658_p2;
wire   [0:0] tmp_4_fu_668_p3;
wire  signed [31:0] sext_ln570_fu_624_p1;
wire   [23:0] trunc_ln572_fu_634_p1;
wire   [23:0] sext_ln570cast_fu_684_p1;
wire   [0:0] icmp_ln571_fu_628_p2;
wire   [0:0] xor_ln571_fu_702_p2;
wire   [0:0] and_ln570_fu_708_p2;
wire   [0:0] icmp_ln574_fu_638_p2;
wire   [0:0] and_ln574_fu_714_p2;
wire   [23:0] trunc_ln575_1_fu_664_p1;
wire   [23:0] select_ln571_fu_694_p3;
wire   [0:0] xor_ln574_fu_728_p2;
wire   [0:0] and_ln574_1_fu_734_p2;
wire   [23:0] sext_ln577_1_cast_fu_676_p3;
wire   [23:0] select_ln574_fu_720_p3;
wire   [0:0] icmp_ln570_1_fu_748_p2;
wire   [0:0] icmp_ln592_fu_644_p2;
wire   [0:0] and_ln592_fu_754_p2;
wire   [23:0] shl_ln593_fu_688_p2;
wire   [23:0] select_ln574_1_fu_740_p3;
wire   [11:0] add_ln601_fu_768_p2;
wire  signed [11:0] pos1_fu_780_p2;
wire   [0:0] tmp_6_fu_814_p3;
wire  signed [31:0] sext_ln607_fu_786_p1;
wire   [0:0] icmp_ln610_1_fu_828_p2;
wire   [0:0] lD_fu_834_p3;
wire   [11:0] pos2_fu_794_p2;
wire   [5:0] trunc_ln608_fu_790_p1;
wire   [5:0] add_ln624_fu_860_p2;
wire   [53:0] zext_ln624_fu_866_p1;
wire   [53:0] Range2_V_1_fu_870_p2;
wire   [53:0] r_V_fu_876_p2;
wire   [0:0] tmp_7_fu_888_p3;
wire   [0:0] icmp_ln620_1_fu_854_p2;
wire   [0:0] Range2_all_ones_fu_882_p2;
wire   [0:0] Range2_all_ones_1_fu_896_p2;
wire   [0:0] Range2_all_ones_2_fu_902_p3;
wire   [0:0] Range1_all_ones_2_fu_842_p2;
wire   [0:0] icmp_ln630_fu_922_p2;
wire   [0:0] Range1_all_zeros_1_fu_916_p2;
wire   [0:0] icmp_ln631_fu_934_p2;
wire   [0:0] Range1_all_ones_1_fu_822_p2;
wire   [0:0] select_ln631_fu_940_p3;
wire   [0:0] xor_ln610_fu_956_p2;
wire   [0:0] icmp_ln620_fu_848_p2;
wire   [0:0] and_ln628_fu_968_p2;
wire   [0:0] and_ln628_1_fu_974_p2;
wire   [0:0] and_ln630_fu_928_p2;
wire   [0:0] or_ln610_fu_962_p2;
wire   [0:0] select_ln631_1_fu_948_p3;
wire   [0:0] Range1_all_ones_fu_910_p2;
wire   [0:0] or_ln610_1_fu_988_p2;
wire   [0:0] deleted_zeros_fu_980_p3;
wire   [0:0] xor_ln647_fu_1002_p2;
wire   [0:0] or_ln647_fu_1008_p2;
wire   [0:0] xor_ln647_1_fu_1014_p2;
wire   [22:0] trunc_ln652_fu_1026_p1;
wire   [0:0] and_ln648_fu_1040_p2;
wire   [0:0] xor_ln648_fu_1044_p2;
wire   [0:0] or_ln610_2_fu_1036_p2;
wire   [0:0] or_ln650_fu_1050_p2;
wire   [0:0] and_ln650_fu_1055_p2;
wire   [0:0] underflow_fu_1061_p2;
wire   [0:0] or_ln302_fu_1066_p2;
wire   [0:0] xor_ln560_fu_1071_p2;
wire   [0:0] and_ln302_fu_1076_p2;
wire   [0:0] and_ln302_1_fu_1082_p2;
wire   [23:0] select_ln346_fu_1087_p3;
wire   [23:0] select_ln302_fu_1094_p3;
wire   [23:0] select_ln560_fu_1101_p3;
wire   [41:0] grp_fu_1116_p0;
wire  signed [23:0] grp_fu_1116_p1;
wire   [41:0] grp_fu_1116_p2;
wire   [17:0] tmp_2_fu_1141_p4;
wire   [0:0] p_Result_17_fu_1133_p3;
wire   [0:0] icmp_ln878_fu_1151_p2;
wire   [0:0] p_Result_16_fu_1121_p3;
wire   [0:0] or_ln895_fu_1157_p2;
wire   [0:0] xor_ln895_fu_1163_p2;
wire   [22:0] trunc_ln900_fu_1187_p1;
wire   [0:0] icmp_ln900_fu_1191_p2;
wire   [0:0] xor_ln896_fu_1175_p2;
wire   [0:0] or_ln898_fu_1197_p2;
wire   [0:0] icmp_ln896_fu_1181_p2;
wire   [0:0] or_ln898_1_fu_1203_p2;
wire   [0:0] overflow_1_fu_1169_p2;
wire   [0:0] underflow_1_fu_1209_p2;
wire   [0:0] or_ln346_fu_1223_p2;
wire   [23:0] select_ln346_1_fu_1215_p3;
wire   [23:0] p_Val2_5_fu_1129_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg    ap_loop_exit_ready_pp0_iter49_reg;
reg    ap_loop_exit_ready_pp0_iter50_reg;
reg    ap_loop_exit_ready_pp0_iter51_reg;
reg    ap_loop_exit_ready_pp0_iter52_reg;
reg    ap_loop_exit_ready_pp0_iter53_reg;
reg    ap_loop_exit_ready_pp0_iter54_reg;
reg    ap_loop_exit_ready_pp0_iter55_reg;
reg    ap_loop_exit_ready_pp0_iter56_reg;
reg    ap_loop_exit_ready_pp0_iter57_reg;
reg    ap_loop_exit_ready_pp0_iter58_reg;
reg    ap_loop_exit_ready_pp0_iter59_reg;
reg    ap_loop_exit_ready_pp0_iter60_reg;
reg    ap_loop_exit_ready_pp0_iter61_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
#0 ap_enable_reg_pp0_iter61 = 1'b0;
#0 ap_enable_reg_pp0_iter62 = 1'b0;
#0 ap_done_reg = 1'b0;
end

gesture_model_sdiv_42ns_24s_42_46_1 #(
    .ID( 1 ),
    .NUM_STAGE( 46 ),
    .din0_WIDTH( 42 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 42 ))
sdiv_42ns_24s_42_46_1_U110(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1116_p0),
    .din1(grp_fu_1116_p1),
    .ce(1'b1),
    .dout(grp_fu_1116_p2)
);

gesture_model_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter61_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter61 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter62 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln124_fu_196_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_152 <= add_ln124_fu_202_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_152 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
        ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
        ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
        ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
        ap_loop_exit_ready_pp0_iter53_reg <= ap_loop_exit_ready_pp0_iter52_reg;
        ap_loop_exit_ready_pp0_iter54_reg <= ap_loop_exit_ready_pp0_iter53_reg;
        ap_loop_exit_ready_pp0_iter55_reg <= ap_loop_exit_ready_pp0_iter54_reg;
        ap_loop_exit_ready_pp0_iter56_reg <= ap_loop_exit_ready_pp0_iter55_reg;
        ap_loop_exit_ready_pp0_iter57_reg <= ap_loop_exit_ready_pp0_iter56_reg;
        ap_loop_exit_ready_pp0_iter58_reg <= ap_loop_exit_ready_pp0_iter57_reg;
        ap_loop_exit_ready_pp0_iter59_reg <= ap_loop_exit_ready_pp0_iter58_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter60_reg <= ap_loop_exit_ready_pp0_iter59_reg;
        ap_loop_exit_ready_pp0_iter61_reg <= ap_loop_exit_ready_pp0_iter60_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        d_reg_1282 <= grp_fu_478_p_dout0;
        deleted_ones_reg_1319 <= deleted_ones_fu_994_p3;
        icmp_ln560_reg_1292 <= icmp_ln560_fu_586_p2;
        icmp_ln600_reg_1303 <= icmp_ln600_fu_774_p2;
        icmp_ln610_reg_1314 <= icmp_ln610_fu_808_p2;
        icmp_ln652_reg_1330 <= icmp_ln652_fu_1030_p2;
        neg_src_1_reg_1287 <= ireg_fu_527_p1[32'd63];
        output_addr_reg_1254_pp0_iter10_reg <= output_addr_reg_1254_pp0_iter9_reg;
        output_addr_reg_1254_pp0_iter11_reg <= output_addr_reg_1254_pp0_iter10_reg;
        output_addr_reg_1254_pp0_iter12_reg <= output_addr_reg_1254_pp0_iter11_reg;
        output_addr_reg_1254_pp0_iter13_reg <= output_addr_reg_1254_pp0_iter12_reg;
        output_addr_reg_1254_pp0_iter14_reg <= output_addr_reg_1254_pp0_iter13_reg;
        output_addr_reg_1254_pp0_iter15_reg <= output_addr_reg_1254_pp0_iter14_reg;
        output_addr_reg_1254_pp0_iter16_reg <= output_addr_reg_1254_pp0_iter15_reg;
        output_addr_reg_1254_pp0_iter17_reg <= output_addr_reg_1254_pp0_iter16_reg;
        output_addr_reg_1254_pp0_iter18_reg <= output_addr_reg_1254_pp0_iter17_reg;
        output_addr_reg_1254_pp0_iter19_reg <= output_addr_reg_1254_pp0_iter18_reg;
        output_addr_reg_1254_pp0_iter20_reg <= output_addr_reg_1254_pp0_iter19_reg;
        output_addr_reg_1254_pp0_iter21_reg <= output_addr_reg_1254_pp0_iter20_reg;
        output_addr_reg_1254_pp0_iter22_reg <= output_addr_reg_1254_pp0_iter21_reg;
        output_addr_reg_1254_pp0_iter23_reg <= output_addr_reg_1254_pp0_iter22_reg;
        output_addr_reg_1254_pp0_iter24_reg <= output_addr_reg_1254_pp0_iter23_reg;
        output_addr_reg_1254_pp0_iter25_reg <= output_addr_reg_1254_pp0_iter24_reg;
        output_addr_reg_1254_pp0_iter26_reg <= output_addr_reg_1254_pp0_iter25_reg;
        output_addr_reg_1254_pp0_iter27_reg <= output_addr_reg_1254_pp0_iter26_reg;
        output_addr_reg_1254_pp0_iter28_reg <= output_addr_reg_1254_pp0_iter27_reg;
        output_addr_reg_1254_pp0_iter29_reg <= output_addr_reg_1254_pp0_iter28_reg;
        output_addr_reg_1254_pp0_iter2_reg <= output_addr_reg_1254_pp0_iter1_reg;
        output_addr_reg_1254_pp0_iter30_reg <= output_addr_reg_1254_pp0_iter29_reg;
        output_addr_reg_1254_pp0_iter31_reg <= output_addr_reg_1254_pp0_iter30_reg;
        output_addr_reg_1254_pp0_iter32_reg <= output_addr_reg_1254_pp0_iter31_reg;
        output_addr_reg_1254_pp0_iter33_reg <= output_addr_reg_1254_pp0_iter32_reg;
        output_addr_reg_1254_pp0_iter34_reg <= output_addr_reg_1254_pp0_iter33_reg;
        output_addr_reg_1254_pp0_iter35_reg <= output_addr_reg_1254_pp0_iter34_reg;
        output_addr_reg_1254_pp0_iter36_reg <= output_addr_reg_1254_pp0_iter35_reg;
        output_addr_reg_1254_pp0_iter37_reg <= output_addr_reg_1254_pp0_iter36_reg;
        output_addr_reg_1254_pp0_iter38_reg <= output_addr_reg_1254_pp0_iter37_reg;
        output_addr_reg_1254_pp0_iter39_reg <= output_addr_reg_1254_pp0_iter38_reg;
        output_addr_reg_1254_pp0_iter3_reg <= output_addr_reg_1254_pp0_iter2_reg;
        output_addr_reg_1254_pp0_iter40_reg <= output_addr_reg_1254_pp0_iter39_reg;
        output_addr_reg_1254_pp0_iter41_reg <= output_addr_reg_1254_pp0_iter40_reg;
        output_addr_reg_1254_pp0_iter42_reg <= output_addr_reg_1254_pp0_iter41_reg;
        output_addr_reg_1254_pp0_iter43_reg <= output_addr_reg_1254_pp0_iter42_reg;
        output_addr_reg_1254_pp0_iter44_reg <= output_addr_reg_1254_pp0_iter43_reg;
        output_addr_reg_1254_pp0_iter45_reg <= output_addr_reg_1254_pp0_iter44_reg;
        output_addr_reg_1254_pp0_iter46_reg <= output_addr_reg_1254_pp0_iter45_reg;
        output_addr_reg_1254_pp0_iter47_reg <= output_addr_reg_1254_pp0_iter46_reg;
        output_addr_reg_1254_pp0_iter48_reg <= output_addr_reg_1254_pp0_iter47_reg;
        output_addr_reg_1254_pp0_iter49_reg <= output_addr_reg_1254_pp0_iter48_reg;
        output_addr_reg_1254_pp0_iter4_reg <= output_addr_reg_1254_pp0_iter3_reg;
        output_addr_reg_1254_pp0_iter50_reg <= output_addr_reg_1254_pp0_iter49_reg;
        output_addr_reg_1254_pp0_iter51_reg <= output_addr_reg_1254_pp0_iter50_reg;
        output_addr_reg_1254_pp0_iter52_reg <= output_addr_reg_1254_pp0_iter51_reg;
        output_addr_reg_1254_pp0_iter53_reg <= output_addr_reg_1254_pp0_iter52_reg;
        output_addr_reg_1254_pp0_iter54_reg <= output_addr_reg_1254_pp0_iter53_reg;
        output_addr_reg_1254_pp0_iter55_reg <= output_addr_reg_1254_pp0_iter54_reg;
        output_addr_reg_1254_pp0_iter56_reg <= output_addr_reg_1254_pp0_iter55_reg;
        output_addr_reg_1254_pp0_iter57_reg <= output_addr_reg_1254_pp0_iter56_reg;
        output_addr_reg_1254_pp0_iter58_reg <= output_addr_reg_1254_pp0_iter57_reg;
        output_addr_reg_1254_pp0_iter59_reg <= output_addr_reg_1254_pp0_iter58_reg;
        output_addr_reg_1254_pp0_iter5_reg <= output_addr_reg_1254_pp0_iter4_reg;
        output_addr_reg_1254_pp0_iter60_reg <= output_addr_reg_1254_pp0_iter59_reg;
        output_addr_reg_1254_pp0_iter61_reg <= output_addr_reg_1254_pp0_iter60_reg;
        output_addr_reg_1254_pp0_iter6_reg <= output_addr_reg_1254_pp0_iter5_reg;
        output_addr_reg_1254_pp0_iter7_reg <= output_addr_reg_1254_pp0_iter6_reg;
        output_addr_reg_1254_pp0_iter8_reg <= output_addr_reg_1254_pp0_iter7_reg;
        output_addr_reg_1254_pp0_iter9_reg <= output_addr_reg_1254_pp0_iter8_reg;
        overflow_reg_1324 <= overflow_fu_1020_p2;
        p_Result_15_reg_1308 <= p_Val2_4_fu_760_p3[32'd23];
        p_Val2_4_reg_1298 <= p_Val2_4_fu_760_p3;
        select_ln1040_reg_1277 <= select_ln1040_fu_519_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        conv_i_cast_reg_1245 <= conv_i_cast_fu_184_p1;
        output_addr_reg_1254_pp0_iter1_reg <= output_addr_reg_1254;
        p_Result_11_reg_1266 <= output_r_q1[32'd23];
        tmp_V_reg_1272 <= tmp_V_fu_226_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_196_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_addr_reg_1254 <= i_4_cast_fu_208_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Val2_s_reg_1260 <= output_r_q1;
    end
end

always @ (*) begin
    if (((icmp_ln124_fu_196_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter61_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter62 == 1'b0) & (ap_enable_reg_pp0_iter61 == 1'b0) & (ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 5'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_152;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter62 == 1'b1))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_r_ce1 = 1'b1;
    end else begin
        output_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter62 == 1'b1))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_592_p2 = (12'd1075 - zext_ln455_fu_552_p1);

assign Range1_all_ones_1_fu_822_p2 = (tmp_6_fu_814_p3 ^ 1'd1);

assign Range1_all_ones_2_fu_842_p2 = (lD_fu_834_p3 & icmp_ln610_1_fu_828_p2);

assign Range1_all_ones_fu_910_p2 = (Range2_all_ones_2_fu_902_p3 & Range1_all_ones_2_fu_842_p2);

assign Range1_all_zeros_1_fu_916_p2 = (1'd1 ^ Range1_all_ones_2_fu_842_p2);

assign Range2_V_1_fu_870_p2 = man_V_fu_578_p3 >> zext_ln624_fu_866_p1;

assign Range2_all_ones_1_fu_896_p2 = (tmp_7_fu_888_p3 ^ 1'd1);

assign Range2_all_ones_2_fu_902_p3 = ((icmp_ln620_1_fu_854_p2[0:0] == 1'b1) ? Range2_all_ones_fu_882_p2 : Range2_all_ones_1_fu_896_p2);

assign Range2_all_ones_fu_882_p2 = ((Range2_V_1_fu_870_p2 == r_V_fu_876_p2) ? 1'b1 : 1'b0);

assign a_fu_336_p2 = (icmp_ln1052_fu_330_p2 & icmp_ln1051_fu_298_p2);

assign add_ln1054_fu_356_p2 = ($signed(trunc_ln1049_fu_278_p1) + $signed(24'd16777163));

assign add_ln1063_fu_400_p2 = ($signed(sub_ln1049_fu_272_p2) + $signed(32'd4294967242));

assign add_ln1076_fu_490_p2 = (sub_ln1070_fu_484_p2 + select_ln1048_fu_472_p3);

assign add_ln124_fu_202_p2 = (ap_sig_allocacmp_i_1 + 5'd1);

assign add_ln570_fu_604_p2 = ($signed(F2_fu_592_p2) + $signed(12'd4078));

assign add_ln601_fu_768_p2 = ($signed(zext_ln455_fu_552_p1) + $signed(12'd3075));

assign add_ln624_fu_860_p2 = (trunc_ln608_fu_790_p1 + 6'd7);

assign and_ln1054_fu_370_p2 = (xor_ln1054_fu_350_p2 & p_Result_3_fu_362_p3);

assign and_ln302_1_fu_1082_p2 = (icmp_ln600_reg_1303 & and_ln302_fu_1076_p2);

assign and_ln302_fu_1076_p2 = (xor_ln560_fu_1071_p2 & or_ln302_fu_1066_p2);

assign and_ln570_fu_708_p2 = (xor_ln571_fu_702_p2 & icmp_ln570_fu_598_p2);

assign and_ln574_1_fu_734_p2 = (xor_ln574_fu_728_p2 & and_ln570_fu_708_p2);

assign and_ln574_fu_714_p2 = (icmp_ln574_fu_638_p2 & and_ln570_fu_708_p2);

assign and_ln592_fu_754_p2 = (icmp_ln592_fu_644_p2 & icmp_ln570_1_fu_748_p2);

assign and_ln628_1_fu_974_p2 = (and_ln628_fu_968_p2 & Range1_all_ones_1_fu_822_p2);

assign and_ln628_fu_968_p2 = (icmp_ln620_fu_848_p2 & icmp_ln610_fu_808_p2);

assign and_ln630_fu_928_p2 = (icmp_ln630_fu_922_p2 & Range1_all_zeros_1_fu_916_p2);

assign and_ln648_fu_1040_p2 = (p_Result_15_reg_1308 & deleted_ones_reg_1319);

assign and_ln650_fu_1055_p2 = (or_ln650_fu_1050_p2 & or_ln610_2_fu_1036_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter60 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter61 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter62 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ashr_ln575_fu_658_p2 = $signed(man_V_fu_578_p3) >>> zext_ln575_fu_654_p1;

assign bitcast_ln756_fu_515_p1 = p_Result_13_fu_503_p5;

assign conv_i_cast_fu_184_p1 = $signed(conv_i);

assign deleted_ones_fu_994_p3 = ((and_ln628_1_fu_974_p2[0:0] == 1'b1) ? Range1_all_ones_fu_910_p2 : or_ln610_1_fu_988_p2);

assign deleted_zeros_fu_980_p3 = ((and_ln628_1_fu_974_p2[0:0] == 1'b1) ? and_ln630_fu_928_p2 : or_ln610_fu_962_p2);

assign exp_tmp_fu_542_p4 = {{ireg_fu_527_p1[62:52]}};

assign grp_fu_1116_p0 = {{select_ln560_fu_1101_p3}, {18'd0}};

assign grp_fu_1116_p1 = conv_i_cast_reg_1245;

assign grp_fu_478_p_ce = 1'b1;

assign grp_fu_478_p_din0 = 64'd0;

assign grp_fu_478_p_din1 = select_ln1040_reg_1277;

assign i_4_cast_fu_208_p1 = ap_sig_allocacmp_i_1;

assign icmp_ln1040_fu_232_p2 = ((p_Val2_s_reg_1260 == 24'd0) ? 1'b1 : 1'b0);

assign icmp_ln1051_fu_298_p2 = (($signed(tmp_fu_288_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1052_fu_330_p2 = ((p_Result_2_fu_324_p2 != 24'd0) ? 1'b1 : 1'b0);

assign icmp_ln1063_fu_394_p2 = (($signed(lsb_index_fu_282_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_196_p2 = ((ap_sig_allocacmp_i_1 == 5'd20) ? 1'b1 : 1'b0);

assign icmp_ln560_fu_586_p2 = ((trunc_ln544_fu_530_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln570_1_fu_748_p2 = (($signed(F2_fu_592_p2) < $signed(12'd18)) ? 1'b1 : 1'b0);

assign icmp_ln570_fu_598_p2 = (($signed(F2_fu_592_p2) > $signed(12'd18)) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_628_p2 = ((F2_fu_592_p2 == 12'd18) ? 1'b1 : 1'b0);

assign icmp_ln574_fu_638_p2 = ((sh_amt_fu_616_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln592_fu_644_p2 = ((sh_amt_fu_616_p3 < 12'd24) ? 1'b1 : 1'b0);

assign icmp_ln600_fu_774_p2 = (($signed(add_ln601_fu_768_p2) > $signed(12'd5)) ? 1'b1 : 1'b0);

assign icmp_ln610_1_fu_828_p2 = ((pos1_fu_780_p2 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln610_fu_808_p2 = (($signed(pos1_fu_780_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln620_1_fu_854_p2 = ((pos2_fu_794_p2 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln620_fu_848_p2 = (($signed(pos2_fu_794_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln630_fu_922_p2 = ((Range2_V_1_fu_870_p2 == 54'd0) ? 1'b1 : 1'b0);

assign icmp_ln631_fu_934_p2 = ((pos2_fu_794_p2 == 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln652_fu_1030_p2 = ((trunc_ln652_fu_1026_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_1151_p2 = ((tmp_2_fu_1141_p4 != 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln896_fu_1181_p2 = ((tmp_2_fu_1141_p4 != 18'd262143) ? 1'b1 : 1'b0);

assign icmp_ln900_fu_1191_p2 = ((trunc_ln900_fu_1187_p1 == 23'd0) ? 1'b1 : 1'b0);

assign ireg_fu_527_p1 = d_reg_1282;

assign lD_fu_834_p3 = man_V_fu_578_p3[sext_ln607_fu_786_p1];


always @ (sext_ln1198_fu_260_p1) begin
    if (sext_ln1198_fu_260_p1[0] == 1'b1) begin
        l_fu_264_p3 = 32'd0;
    end else if (sext_ln1198_fu_260_p1[1] == 1'b1) begin
        l_fu_264_p3 = 32'd1;
    end else if (sext_ln1198_fu_260_p1[2] == 1'b1) begin
        l_fu_264_p3 = 32'd2;
    end else if (sext_ln1198_fu_260_p1[3] == 1'b1) begin
        l_fu_264_p3 = 32'd3;
    end else if (sext_ln1198_fu_260_p1[4] == 1'b1) begin
        l_fu_264_p3 = 32'd4;
    end else if (sext_ln1198_fu_260_p1[5] == 1'b1) begin
        l_fu_264_p3 = 32'd5;
    end else if (sext_ln1198_fu_260_p1[6] == 1'b1) begin
        l_fu_264_p3 = 32'd6;
    end else if (sext_ln1198_fu_260_p1[7] == 1'b1) begin
        l_fu_264_p3 = 32'd7;
    end else if (sext_ln1198_fu_260_p1[8] == 1'b1) begin
        l_fu_264_p3 = 32'd8;
    end else if (sext_ln1198_fu_260_p1[9] == 1'b1) begin
        l_fu_264_p3 = 32'd9;
    end else if (sext_ln1198_fu_260_p1[10] == 1'b1) begin
        l_fu_264_p3 = 32'd10;
    end else if (sext_ln1198_fu_260_p1[11] == 1'b1) begin
        l_fu_264_p3 = 32'd11;
    end else if (sext_ln1198_fu_260_p1[12] == 1'b1) begin
        l_fu_264_p3 = 32'd12;
    end else if (sext_ln1198_fu_260_p1[13] == 1'b1) begin
        l_fu_264_p3 = 32'd13;
    end else if (sext_ln1198_fu_260_p1[14] == 1'b1) begin
        l_fu_264_p3 = 32'd14;
    end else if (sext_ln1198_fu_260_p1[15] == 1'b1) begin
        l_fu_264_p3 = 32'd15;
    end else if (sext_ln1198_fu_260_p1[16] == 1'b1) begin
        l_fu_264_p3 = 32'd16;
    end else if (sext_ln1198_fu_260_p1[17] == 1'b1) begin
        l_fu_264_p3 = 32'd17;
    end else if (sext_ln1198_fu_260_p1[18] == 1'b1) begin
        l_fu_264_p3 = 32'd18;
    end else if (sext_ln1198_fu_260_p1[19] == 1'b1) begin
        l_fu_264_p3 = 32'd19;
    end else if (sext_ln1198_fu_260_p1[20] == 1'b1) begin
        l_fu_264_p3 = 32'd20;
    end else if (sext_ln1198_fu_260_p1[21] == 1'b1) begin
        l_fu_264_p3 = 32'd21;
    end else if (sext_ln1198_fu_260_p1[22] == 1'b1) begin
        l_fu_264_p3 = 32'd22;
    end else if (sext_ln1198_fu_260_p1[23] == 1'b1) begin
        l_fu_264_p3 = 32'd23;
    end else if (sext_ln1198_fu_260_p1[24] == 1'b1) begin
        l_fu_264_p3 = 32'd24;
    end else if (sext_ln1198_fu_260_p1[25] == 1'b1) begin
        l_fu_264_p3 = 32'd25;
    end else if (sext_ln1198_fu_260_p1[26] == 1'b1) begin
        l_fu_264_p3 = 32'd26;
    end else if (sext_ln1198_fu_260_p1[27] == 1'b1) begin
        l_fu_264_p3 = 32'd27;
    end else if (sext_ln1198_fu_260_p1[28] == 1'b1) begin
        l_fu_264_p3 = 32'd28;
    end else if (sext_ln1198_fu_260_p1[29] == 1'b1) begin
        l_fu_264_p3 = 32'd29;
    end else if (sext_ln1198_fu_260_p1[30] == 1'b1) begin
        l_fu_264_p3 = 32'd30;
    end else if (sext_ln1198_fu_260_p1[31] == 1'b1) begin
        l_fu_264_p3 = 32'd31;
    end else begin
        l_fu_264_p3 = 32'd32;
    end
end

assign lsb_index_fu_282_p2 = ($signed(sub_ln1049_fu_272_p2) + $signed(32'd4294967243));

assign lshr_ln1052_fu_318_p2 = 24'd16777215 >> zext_ln1052_fu_314_p1;

assign lshr_ln1063_fu_410_p2 = zext_ln1062_fu_390_p1 >> zext_ln1063_fu_406_p1;

assign m_2_fu_432_p3 = ((icmp_ln1063_fu_394_p2[0:0] == 1'b1) ? lshr_ln1063_fu_410_p2 : shl_ln1064_fu_426_p2);

assign m_3_fu_444_p2 = (m_2_fu_432_p3 + zext_ln1066_fu_440_p1);

assign m_fu_450_p4 = {{m_3_fu_444_p2[63:1]}};

assign man_V_1_fu_572_p2 = (54'd0 - zext_ln558_fu_568_p1);

assign man_V_fu_578_p3 = ((neg_src_1_fu_534_p3[0:0] == 1'b1) ? man_V_1_fu_572_p2 : zext_ln558_fu_568_p1);

assign neg_src_1_fu_534_p3 = ireg_fu_527_p1[32'd63];

assign or_ln1054_1_fu_382_p3 = {{1'd0}, {or_ln1054_fu_376_p2}};

assign or_ln1054_fu_376_p2 = (and_ln1054_fu_370_p2 | a_fu_336_p2);

assign or_ln302_fu_1066_p2 = (underflow_fu_1061_p2 | overflow_reg_1324);

assign or_ln346_fu_1223_p2 = (underflow_1_fu_1209_p2 | overflow_1_fu_1169_p2);

assign or_ln610_1_fu_988_p2 = (xor_ln610_fu_956_p2 | select_ln631_1_fu_948_p3);

assign or_ln610_2_fu_1036_p2 = (p_Result_15_reg_1308 | icmp_ln610_reg_1314);

assign or_ln610_fu_962_p2 = (xor_ln610_fu_956_p2 | select_ln631_fu_940_p3);

assign or_ln647_fu_1008_p2 = (xor_ln647_fu_1002_p2 | p_Result_15_fu_800_p3);

assign or_ln650_fu_1050_p2 = (xor_ln648_fu_1044_p2 | icmp_ln652_reg_1330);

assign or_ln895_fu_1157_p2 = (p_Result_17_fu_1133_p3 | icmp_ln878_fu_1151_p2);

assign or_ln898_1_fu_1203_p2 = (or_ln898_fu_1197_p2 | icmp_ln896_fu_1181_p2);

assign or_ln898_fu_1197_p2 = (xor_ln896_fu_1175_p2 | icmp_ln900_fu_1191_p2);

assign output_r_address0 = output_addr_reg_1254_pp0_iter61_reg;

assign output_r_address1 = i_4_cast_fu_208_p1;

assign output_r_d0 = ((or_ln346_fu_1223_p2[0:0] == 1'b1) ? select_ln346_1_fu_1215_p3 : p_Val2_5_fu_1129_p1);

assign overflow_1_fu_1169_p2 = (xor_ln895_fu_1163_p2 & or_ln895_fu_1157_p2);

assign overflow_fu_1020_p2 = (xor_ln647_1_fu_1014_p2 & or_ln647_fu_1008_p2);

assign p_Result_12_fu_252_p3 = {{1'd1}, {p_Result_s_fu_242_p4}};

assign p_Result_13_fu_503_p5 = {{tmp_s_fu_496_p3}, {zext_ln1067_fu_460_p1[51:0]}};

assign p_Result_14_fu_560_p3 = {{1'd1}, {trunc_ln554_fu_556_p1}};

assign p_Result_15_fu_800_p3 = p_Val2_4_fu_760_p3[32'd23];

assign p_Result_16_fu_1121_p3 = grp_fu_1116_p2[32'd41];

assign p_Result_17_fu_1133_p3 = grp_fu_1116_p2[32'd23];

assign p_Result_2_fu_324_p2 = (tmp_V_2_fu_237_p3 & lshr_ln1052_fu_318_p2);

assign p_Result_3_fu_362_p3 = tmp_V_2_fu_237_p3[add_ln1054_fu_356_p2];

assign p_Result_4_fu_464_p3 = m_3_fu_444_p2[32'd54];

integer ap_tvar_int_0;

always @ (tmp_V_2_fu_237_p3) begin
    for (ap_tvar_int_0 = 24 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 23 - 0) begin
            p_Result_s_fu_242_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_242_p4[ap_tvar_int_0] = tmp_V_2_fu_237_p3[23 - ap_tvar_int_0];
        end
    end
end

assign p_Val2_4_fu_760_p3 = ((and_ln592_fu_754_p2[0:0] == 1'b1) ? shl_ln593_fu_688_p2 : select_ln574_1_fu_740_p3);

assign p_Val2_5_fu_1129_p1 = grp_fu_1116_p2[23:0];

assign pos1_fu_780_p2 = (F2_fu_592_p2 + 12'd6);

assign pos2_fu_794_p2 = (F2_fu_592_p2 + 12'd7);

assign r_V_fu_876_p2 = 54'd18014398509481983 >> zext_ln624_fu_866_p1;

assign select_ln1040_fu_519_p3 = ((icmp_ln1040_fu_232_p2[0:0] == 1'b1) ? 64'd0 : bitcast_ln756_fu_515_p1);

assign select_ln1048_fu_472_p3 = ((p_Result_4_fu_464_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln302_fu_1094_p3 = ((and_ln302_1_fu_1082_p2[0:0] == 1'b1) ? select_ln346_fu_1087_p3 : p_Val2_4_reg_1298);

assign select_ln346_1_fu_1215_p3 = ((overflow_1_fu_1169_p2[0:0] == 1'b1) ? 24'd8388607 : 24'd8388609);

assign select_ln346_fu_1087_p3 = ((overflow_reg_1324[0:0] == 1'b1) ? 24'd8388607 : 24'd8388609);

assign select_ln560_fu_1101_p3 = ((icmp_ln560_reg_1292[0:0] == 1'b1) ? 24'd0 : select_ln302_fu_1094_p3);

assign select_ln571_fu_694_p3 = ((icmp_ln571_fu_628_p2[0:0] == 1'b1) ? trunc_ln572_fu_634_p1 : 24'd0);

assign select_ln574_1_fu_740_p3 = ((and_ln574_1_fu_734_p2[0:0] == 1'b1) ? sext_ln577_1_cast_fu_676_p3 : select_ln574_fu_720_p3);

assign select_ln574_fu_720_p3 = ((and_ln574_fu_714_p2[0:0] == 1'b1) ? trunc_ln575_1_fu_664_p1 : select_ln571_fu_694_p3);

assign select_ln631_1_fu_948_p3 = ((icmp_ln631_fu_934_p2[0:0] == 1'b1) ? Range1_all_ones_2_fu_842_p2 : Range1_all_ones_1_fu_822_p2);

assign select_ln631_fu_940_p3 = ((icmp_ln631_fu_934_p2[0:0] == 1'b1) ? Range1_all_zeros_1_fu_916_p2 : Range1_all_ones_1_fu_822_p2);

assign sext_ln1198_fu_260_p1 = $signed(p_Result_12_fu_252_p3);

assign sext_ln570_fu_624_p1 = sh_amt_fu_616_p3;

assign sext_ln570cast_fu_684_p1 = sext_ln570_fu_624_p1[23:0];

assign sext_ln577_1_cast_fu_676_p3 = ((tmp_4_fu_668_p3[0:0] == 1'b1) ? 24'd16777215 : 24'd0);

assign sext_ln607_fu_786_p1 = pos1_fu_780_p2;

assign sh_amt_fu_616_p3 = ((icmp_ln570_fu_598_p2[0:0] == 1'b1) ? add_ln570_fu_604_p2 : sub_ln570_fu_610_p2);

assign shl_ln1064_fu_426_p2 = zext_ln1062_fu_390_p1 << zext_ln1064_fu_422_p1;

assign shl_ln593_fu_688_p2 = trunc_ln572_fu_634_p1 << sext_ln570cast_fu_684_p1;

assign sub_ln1049_fu_272_p2 = (32'd24 - l_fu_264_p3);

assign sub_ln1052_fu_308_p2 = (5'd14 - trunc_ln1052_fu_304_p1);

assign sub_ln1064_fu_416_p2 = (32'd54 - sub_ln1049_fu_272_p2);

assign sub_ln1070_fu_484_p2 = (11'd6 - trunc_ln1048_fu_480_p1);

assign sub_ln570_fu_610_p2 = (12'd18 - F2_fu_592_p2);

assign tmp_1_fu_342_p3 = lsb_index_fu_282_p2[32'd31];

assign tmp_2_fu_1141_p4 = {{grp_fu_1116_p2[41:24]}};

assign tmp_4_fu_668_p3 = ireg_fu_527_p1[32'd63];

assign tmp_6_fu_814_p3 = pos1_fu_780_p2[32'd11];

assign tmp_7_fu_888_p3 = pos2_fu_794_p2[32'd11];

assign tmp_V_2_fu_237_p3 = ((p_Result_11_reg_1266[0:0] == 1'b1) ? tmp_V_reg_1272 : p_Val2_s_reg_1260);

assign tmp_V_fu_226_p2 = (24'd0 - output_r_q1);

assign tmp_fu_288_p4 = {{lsb_index_fu_282_p2[31:1]}};

assign tmp_s_fu_496_p3 = {{p_Result_11_reg_1266}, {add_ln1076_fu_490_p2}};

assign trunc_ln1048_fu_480_p1 = l_fu_264_p3[10:0];

assign trunc_ln1049_fu_278_p1 = sub_ln1049_fu_272_p2[23:0];

assign trunc_ln1052_fu_304_p1 = sub_ln1049_fu_272_p2[4:0];

assign trunc_ln544_fu_530_p1 = ireg_fu_527_p1[62:0];

assign trunc_ln554_fu_556_p1 = ireg_fu_527_p1[51:0];

assign trunc_ln572_fu_634_p1 = man_V_fu_578_p3[23:0];

assign trunc_ln575_1_fu_664_p1 = ashr_ln575_fu_658_p2[23:0];

assign trunc_ln575_fu_650_p1 = sh_amt_fu_616_p3[5:0];

assign trunc_ln608_fu_790_p1 = F2_fu_592_p2[5:0];

assign trunc_ln652_fu_1026_p1 = p_Val2_4_fu_760_p3[22:0];

assign trunc_ln900_fu_1187_p1 = grp_fu_1116_p2[22:0];

assign underflow_1_fu_1209_p2 = (p_Result_16_fu_1121_p3 & or_ln898_1_fu_1203_p2);

assign underflow_fu_1061_p2 = (neg_src_1_reg_1287 & and_ln650_fu_1055_p2);

assign xor_ln1054_fu_350_p2 = (tmp_1_fu_342_p3 ^ 1'd1);

assign xor_ln560_fu_1071_p2 = (icmp_ln560_reg_1292 ^ 1'd1);

assign xor_ln571_fu_702_p2 = (icmp_ln571_fu_628_p2 ^ 1'd1);

assign xor_ln574_fu_728_p2 = (icmp_ln574_fu_638_p2 ^ 1'd1);

assign xor_ln610_fu_956_p2 = (icmp_ln610_fu_808_p2 ^ 1'd1);

assign xor_ln647_1_fu_1014_p2 = (neg_src_1_fu_534_p3 ^ 1'd1);

assign xor_ln647_fu_1002_p2 = (deleted_zeros_fu_980_p3 ^ 1'd1);

assign xor_ln648_fu_1044_p2 = (1'd1 ^ and_ln648_fu_1040_p2);

assign xor_ln895_fu_1163_p2 = (p_Result_16_fu_1121_p3 ^ 1'd1);

assign xor_ln896_fu_1175_p2 = (p_Result_17_fu_1133_p3 ^ 1'd1);

assign zext_ln1052_fu_314_p1 = sub_ln1052_fu_308_p2;

assign zext_ln1062_fu_390_p1 = tmp_V_2_fu_237_p3;

assign zext_ln1063_fu_406_p1 = add_ln1063_fu_400_p2;

assign zext_ln1064_fu_422_p1 = sub_ln1064_fu_416_p2;

assign zext_ln1066_fu_440_p1 = or_ln1054_1_fu_382_p3;

assign zext_ln1067_fu_460_p1 = m_fu_450_p4;

assign zext_ln455_fu_552_p1 = exp_tmp_fu_542_p4;

assign zext_ln558_fu_568_p1 = p_Result_14_fu_560_p3;

assign zext_ln575_fu_654_p1 = trunc_ln575_fu_650_p1;

assign zext_ln624_fu_866_p1 = add_ln624_fu_860_p2;

endmodule //gesture_model_dense_1_Pipeline_VITIS_LOOP_124_4
